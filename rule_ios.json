{
  "Version": "1.00",
  "Rules": [
    {
      "Match": "123tvnow",
      "Name": "123tvnow parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "var _0x.*?(?=var options)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "var",
          "To": ";var",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\"",
          "To": "'",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=reverse\\(\\).join\\(''\\);\\};var ).*?(?=\\=)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$function_name"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "CryptoJS=function(h,r){var k={},l=k.lib={},n=function(){},f=l.Base={extend:function(a){n.prototype=this;var b=new n;a&&b.mixIn(a);b.hasOwnProperty(\\\"init\\\")||(b.init=function(){b.$super.init.apply(this,arguments)});b.init.prototype=b;b.$super=this;return b},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);a.hasOwnProperty(\\\"toString\\\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},j=l.WordArray=f.extend({init:function(a,b){a=this.words=a||[];this.sigBytes=b!=r?b:4*a.length},toString:function(a){return(a||s).stringify(this)},concat:function(a){var b=this.words,d=a.words,c=this.sigBytes;a=a.sigBytes;this.clamp();if(c%4)for(var e=0;e<a;e++)b[c+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((c+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)b[c+e>>>2]=d[e>>>2];else b.push.apply(b,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,b=this.sigBytes;a[b>>>2]&=4294967295<<32-8*(b%4);a.length=h.ceil(b/4)},clone:function(){var a=f.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var b=[],d=0;d<a;d+=4)b.push(4294967296*h.random()|0);return new j.init(b,a)}}),m=k.enc={},s=m.Hex={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++){var e=b[c>>>2]>>>24-8*(c%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\\\"\\\")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c+=2)d[c>>>3]|=parseInt(a.substr(c,2),16)<<24-4*(c%8);return new j.init(d,b/2)}},p=m.Latin1={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++)d.push(String.fromCharCode(b[c>>>2]>>>24-8*(c%4)&255));return d.join(\\\"\\\")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c++)d[c>>>2]|=(a.charCodeAt(c)&255)<<24-8*(c%4);return new j.init(d,b)}},t=m.Utf8={stringify:function(a){try{return decodeURIComponent(escape(p.stringify(a)))}catch(b){throw Error(\\\"Malformed UTF-8 data\\\");}},parse:function(a){return p.parse(unescape(encodeURIComponent(a)))}},q=l.BufferedBlockAlgorithm=f.extend({reset:function(){this._data=new j.init;this._nDataBytes=0},_append:function(a){\\\"string\\\"==typeof a&&(a=t.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var b=this._data,d=b.words,c=b.sigBytes,e=this.blockSize,f=c/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;c=h.min(4*a,c);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);b.sigBytes-=c}return new j.init(g,c)},clone:function(){var a=f.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:f.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,d){return(new a.init(d)).finalize(b)}},_createHmacHelper:function(a){return function(b,d){return(new u.HMAC.init(a,d)).finalize(b)}}});var u=k.algo={};return k}(Math);",
            "(function(g){var a=CryptoJS,f=a.lib,e=f.Base,h=f.WordArray,a=a.x64={};a.Word=e.extend({init:function(b,c){this.high=b;this.low=c}});a.WordArray=e.extend({init:function(b,c){b=this.words=b||[];this.sigBytes=c!=g?c:8*b.length},toX32:function(){for(var b=this.words,c=b.length,a=[],d=0;d<c;d++){var e=b[d];a.push(e.high);a.push(e.low)}return h.create(a,this.sigBytes)},clone:function(){for(var b=e.clone.call(this),c=b.words=this.words.slice(0),a=c.length,d=0;d<a;d++)c[d]=c[d].clone();return b}});return 0}());",
            "(function(){var c = CryptoJS,k = c.enc.Utf8;c.algo.HMAC = c.lib.Base.extend({init: function(a, b) {a = this._hasher = new a.init;\\\"string\\\"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++)h[d]^=1549556828,j[d]^=909522486;f.sigBytes=g.sigBytes=e;this.reset()},reset:function(){var a=this._hasher;a.reset();a.update(this._iKey)},update: function(a) {this._hasher.update(a);return this},finalize: function(a) {var b = this._hasher;a = b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a))}});return 0;}());",
            "(function(){function a(){return d.create.apply(d,arguments)}for(var n=CryptoJS,r=n.lib.Hasher,e=n.x64,d=e.Word,T=e.WordArray,e=n.algo,ea=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),a(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),a(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],v=[],w=0;80>w;w++)v[w]=a();e=e.SHA512=r.extend({_doReset:function(){this._hash=new T.init([new d.init(1779033703,4089235720),new d.init(3144134277,2227873595),new d.init(1013904242,4271175723),new d.init(2773480762,1595750129),new d.init(1359893119,2917565137),new d.init(2600822924,725511199),new d.init(528734635,4215389547),new d.init(1541459225,327033209)])},_doProcessBlock:function(a,d){for(var f=this._hash.words,F=f[0],e=f[1],n=f[2],r=f[3],G=f[4],H=f[5],I=f[6],f=f[7],w=F.high,J=F.low,X=e.high,K=e.low,Y=n.high,L=n.low,Z=r.high,M=r.low,$=G.high,N=G.low,aa=H.high,O=H.low,ba=I.high,P=I.low,ca=f.high,Q=f.low,k=w,g=J,z=X,x=K,A=Y,y=L,U=Z,B=M,l=$,h=N,R=aa,C=O,S=ba,D=P,V=ca,E=Q,m=0;80>m;m++){var s=v[m];if(16>m)var j=s.high=a[d+2*m]|0,b=s.low=a[d+2*m+1]|0;else{var j=v[m-15],b=j.high,p=j.low,j=(b>>>1|p<<31)^(b>>>8|p<<24)^b>>>7,p=(p>>>1|b<<31)^(p>>>8|b<<24)^(p>>>7|b<<25),u=v[m-2],b=u.high,c=u.low,u=(b>>>19|c<<13)^(b<<3|c>>>29)^b>>>6,c=(c>>>19|b<<13)^(c<<3|b>>>29)^(c>>>6|b<<26),b=v[m-7],W=b.high,t=v[m-16],q=t.high,t=t.low,b=p+b.low,j=j+W+(b>>>0<p>>>0?1:0),b=b+c,j=j+u+(b>>>0<c>>>0?1:0),b=b+t,j=j+q+(b>>>0<t>>>0?1:0);s.high=j;s.low=b}var W=l&R^~l&S,t=h&C^~h&D,s=k&z^k&A^z&A,T=g&x^g&y^x&y,p=(k>>>28|g<<4)^(k<<30|g>>>2)^(k<<25|g>>>7),u=(g>>>28|k<<4)^(g<<30|k>>>2)^(g<<25|k>>>7),c=ea[m],fa=c.high,da=c.low,c=E+((h>>>14|l<<18)^(h>>>18|l<<14)^(h<<23|l>>>9)),q=V+((l>>>14|h<<18)^(l>>>18|h<<14)^(l<<23|h>>>9))+(c>>>0<E>>>0?1:0),c=c+t,q=q+W+(c>>>0<t>>>0?1:0),c=c+da,q=q+fa+(c>>>0<da>>>0?1:0),c=c+b,q=q+j+(c>>>0<b>>>0?1:0),b=u+T,s=p+s+(b>>>0<u>>>0?1:0),V=S,E=D,S=R,D=C,R=l,C=h,h=B+c|0,l=U+q+(h>>>0<B>>>0?1:0)|0,U=A,B=y,A=z,y=x,z=k,x=g,g=c+b|0,k=q+s+(g>>>0<c>>>0?1:0)|0}J=F.low=J+g;F.high=w+k+(J>>>0<g>>>0?1:0);K=e.low=K+x;e.high=X+z+(K>>>0<x>>>0?1:0);L=n.low=L+y;n.high=Y+A+(L>>>0<y>>>0?1:0);M=r.low=M+B;r.high=Z+U+(M>>>0<B>>>0?1:0);N=G.low=N+h;G.high=$+l+(N>>>0<h>>>0?1:0);O=H.low=O+C;H.high=aa+R+(O>>>0<C>>>0?1:0);P=I.low=P+D;I.high=ba+S+(P>>>0<D>>>0?1:0);Q=f.low=Q+E;f.high=ca+V+(Q>>>0<E>>>0?1:0)},_doFinalize:function(){var a=this._data,d=a.words,f=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+128>>>10<<5)+30]=Math.floor(f/4294967296);d[(e+128>>>10<<5)+31]=f;a.sigBytes=4*d.length;this._process();return this._hash.toX32()},clone:function(){var a=r.clone.call(this);a._hash=this._hash.clone();return a},blockSize:32});n.SHA512=r._createHelper(e);n.HmacSHA512=r._createHmacHelper(e);return 0;}());",
            "(function(){var b=CryptoJS,a=b.lib,d=a.Base,m=a.WordArray,a=b.algo,q=a.HMAC,l=a.PBKDF2=d.extend({cfg:d.extend({keySize:4,hasher:a.SHA1,iterations:1}),init:function(a){this.cfg=this.cfg.extend(a)},compute:function(a,b){for(var c=this.cfg,f=q.create(c.hasher,a),g=m.create(),d=m.create([1]),l=g.words,r=d.words,n=c.keySize,c=c.iterations;l.length<n;){var h=f.update(b).finalize(d);f.reset();for(var j=h.words,s=j.length,k=h,p=1;p<c;p++){k=f.finalize(k);f.reset();for(var t=k.words,e=0;e<s;e++)j[e]^=t[e]}g.concat(h);r[0]++}g.sigBytes=4*n;return g}});b.PBKDF2=function(a,b,c){return l.create(c).compute(a,b)};return 0;}());",
            "(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\\\"\\\")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"};return 0}());",
            "CryptoJS.lib.Cipher || function(u) { var g = CryptoJS, f = g.lib, k = f.Base, l = f.WordArray, q = f.BufferedBlockAlgorithm, r = g.enc.Base64, v = g.algo.EvpKDF, n = f.Cipher = q.extend({ cfg: k.extend(), createEncryptor: function(a, b) { return this.create(this._ENC_XFORM_MODE, a, b) }, createDecryptor: function(a, b) { return this.create(this._DEC_XFORM_MODE, a, b) }, init: function(a, b, c) { this.cfg = this.cfg.extend(c); this._xformMode = a; this._key = b; this.reset() }, reset: function() { q.reset.call(this); this._doReset() }, process: function(a) { this._append(a); return this._process() }, finalize: function(a) { a && this._append(a); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function(a) { return { encrypt: function(b, c, d) { return (\\\"string\\\" == typeof c ? s : j).encrypt(a, b, c, d) }, decrypt: function(b, c, d) { return (\\\"string\\\" == typeof c ? s : j).decrypt(a, b, c, d) } } } }); f.StreamCipher = n.extend({ _doFinalize: function() { return this._process(!0) }, blockSize: 1 }); var m = g.mode = {}, t = function(a, b, c) { var d = this._iv; d ? this._iv = u : d = this._prevBlock; for (var e = 0; e < c; e++) a[b + e] ^= d[e] }, h = (f.BlockCipherMode = k.extend({ createEncryptor: function(a, b) { return this.Encryptor.create(a, b) }, createDecryptor: function(a, b) { return this.Decryptor.create(a, b) }, init: function(a, b) { this._cipher = a; this._iv = b } })).extend(); h.Encryptor = h.extend({ processBlock: function(a, b) { var c = this._cipher, d = c.blockSize; t.call(this, a, b, d); c.encryptBlock(a, b); this._prevBlock = a.slice(b, b + d) } }); h.Decryptor = h.extend({ processBlock: function(a, b) { var c = this._cipher, d = c.blockSize, e = a.slice(b, b + d); c.decryptBlock(a, b); t.call(this, a, b, d); this._prevBlock = e } }); m = m.CBC = h; h = (g.pad = {}).Pkcs7 = { pad: function(a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, e = [], f = 0; f < c; f += 4) e.push(d); c = l.create(e, c); a.concat(c) }, unpad: function(a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; f.BlockCipher = n.extend({ cfg: n.cfg.extend({ mode: m, padding: h }), reset: function() { n.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a, this, b && b.words) }, _doProcessBlock: function(a, b) { this._mode.processBlock(a, b) }, _doFinalize: function() { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4 }); var p = f.CipherParams = k.extend({ init: function(a) { this.mixIn(a) }, toString: function(a) { return (a || this.formatter).stringify(this) } }), m = (g.format = {}).OpenSSL = { stringify: function(a) { var b = a.ciphertext; a = a.salt; return (a ? l.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r) }, parse: function(a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = l.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return p.create({ ciphertext: a, salt: c }) } }, j = f.SerializableCipher = k.extend({ cfg: k.extend({ format: m }), encrypt: function(a, b, c, d) { d = this.cfg.extend(d); var e = a.createEncryptor(c, d); b = e.finalize(b); e = e.cfg; return p.create({ ciphertext: b, key: c, iv: e.iv, algorithm: a, mode: e.mode, padding: e.padding, blockSize: a.blockSize, formatter: d.format }) }, decrypt: function(a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function(a, b) { return \\\"string\\\" == typeof a ? b.parse(a, this) : a } }), g = (g.kdf = {}).OpenSSL = { execute: function(a, b, c, d) { d || (d = l.random(8)); a = v.create({ keySize: b + c }).compute(a, d); c = l.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return p.create({ key: a, iv: c, salt: d }) } }, s = f.PasswordBasedCipher = j.extend({ cfg: j.cfg.extend({ kdf: g }), encrypt: function(a, b, c, d) { d = this.cfg.extend(d); c = d.kdf.execute(c, a.keySize, a.ivSize); d.iv = c.iv; a = j.encrypt.call(this, a, b, c.key, d); a.mixIn(c); return a }, decrypt: function(a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); c = d.kdf.execute(c, a.keySize, a.ivSize, b.salt); d.iv = c.iv; return j.decrypt.call(this, a, b, c.key, d) } });return 0;}();",
            "(function(){for(var q=CryptoJS,x=q.lib.BlockCipher,r=q.algo,j=[],y=[],z=[],A=[],B=[],C=[],s=[],u=[],v=[],w=[],g=[],k=0;256>k;k++)g[k]=128>k?k<<1:k<<1^283;for(var n=0,l=0,k=0;256>k;k++){var f=l^l<<1^l<<2^l<<3^l<<4,f=f>>>8^f&255^99;j[n]=f;y[f]=n;var t=g[n],D=g[t],E=g[D],b=257*g[f]^16843008*f;z[n]=b<<24|b>>>8;A[n]=b<<16|b>>>16;B[n]=b<<8|b>>>24;C[n]=b;b=16843009*E^65537*D^257*t^16843008*n;s[f]=b<<24|b>>>8;u[f]=b<<16|b>>>16;v[f]=b<<8|b>>>24;w[f]=b;n?(n=t^g[g[g[E^t]]],l^=g[g[l]]):n=l=1}var F=[0,1,2,4,8,16,32,64,128,27,54],r=r.AES=x.extend({_doReset:function(){for(var c=this._key,e=c.words,a=c.sigBytes/4,c=4*((this._nRounds=a+6)+1),b=this._keySchedule=[],h=0;h<c;h++)if(h<a)b[h]=e[h];else{var d=b[h-1];h%a?6<a&&4==h%a&&(d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255]):(d=d<<8|d>>>24,d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255],d^=F[h/a|0]<<24);b[h]=b[h-a]^d}e=this._invKeySchedule=[];for(a=0;a<c;a++)h=c-a,d=a%4?b[h]:b[h-4],e[a]=4>a||4>=h?d:s[j[d>>>24]]^u[j[d>>>16&255]]^v[j[d>>>8&255]]^w[j[d&255]]},encryptBlock:function(c,e){this._doCryptBlock(c,e,this._keySchedule,z,A,B,C,j)},decryptBlock:function(c,e){var a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;this._doCryptBlock(c,e,this._invKeySchedule,s,u,v,w,y);a=c[e+1];c[e+1]=c[e+3];c[e+3]=a},_doCryptBlock:function(c,e,a,b,h,d,j,m){for(var n=this._nRounds,f=c[e]^a[0],g=c[e+1]^a[1],k=c[e+2]^a[2],p=c[e+3]^a[3],l=4,t=1;t<n;t++)var q=b[f>>>24]^h[g>>>16&255]^d[k>>>8&255]^j[p&255]^a[l++],r=b[g>>>24]^h[k>>>16&255]^d[p>>>8&255]^j[f&255]^a[l++],s=b[k>>>24]^h[p>>>16&255]^d[f>>>8&255]^j[g&255]^a[l++],p=b[p>>>24]^h[f>>>16&255]^d[g>>>8&255]^j[k&255]^a[l++],f=q,g=r,k=s;q=(m[f>>>24]<<24|m[g>>>16&255]<<16|m[k>>>8&255]<<8|m[p&255])^a[l++];r=(m[g>>>24]<<24|m[k>>>16&255]<<16|m[p>>>8&255]<<8|m[f&255])^a[l++];s=(m[k>>>24]<<24|m[p>>>16&255]<<16|m[f>>>8&255]<<8|m[g&255])^a[l++];p=(m[p>>>24]<<24|m[f>>>16&255]<<16|m[g>>>8&255]<<8|m[k&255])^a[l++];c[e]=q;c[e+1]=r;c[e+2]=s;c[e+3]=p},keySize:8});q.AES=x._createHelper(r); return 0;}());",
            "function decode(r,t){var e=JSON.parse(CryptoJS.enc.Utf8.stringify(CryptoJS.enc.Base64.parse(r))),o=CryptoJS.enc.Hex.parse(e.salt),p=CryptoJS.enc.Hex.parse(e.iv),a=e.ciphertext,S=parseInt(e.iterations);S<=0&&(S=999);var i=256/4,n=CryptoJS.PBKDF2(t,o,{hasher:CryptoJS.algo.SHA512,keySize:i/8,iterations:S});return CryptoJS.AES.decrypt(a,n,{mode:CryptoJS.mode.CBC,iv:p}).toString(CryptoJS.enc.Utf8); return 0;}",
            ";var E = {d: decode};",
            "$Res1",
            ";",
            "$function_name",
            "();\")"
          ],
          "Result": "$Res5"
        },
        {
          "Id": 9,
          "Action": "EVAL",
          "String": "$Res5",
          "Result": "$o_Link"
        },
        {
          "Id": 11,
          "Action": "GET",
          "Link": "$o_Link",
          "Headers": "Origin::http://123tvnow.com::Referer::http://123tvnow.com::User-Agent::Safari/537.36",
          "Result": "$Res7"
        },
        {
          "Id": 17,
          "Action": "REPLACE",
          "In": "$Res7",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res7"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res7",
            "[0].file\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 13,
          "Action": "EVAL",
          "String": "$Res7",
          "Result": "$Res8"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "$Res8",
            " engineOptions=headers::Referer:http://123tvnow.com/::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 16,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "janjua",
      "Name": "janjuaplayer Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=enableVideo\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$pk"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "https://janjua.pw/resources/scripts/newjanjua.js([^'\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$js_link"
        },
        {
          "Id": 11,
          "Action": "GET",
          "Link": "$js_link",
          "Result": "$pk_js"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "function enableVideo(?:[^\\}]*)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$pk_js",
          "Result": "$pk_func"
        },
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "pk=\\\"",
            "$pk",
            "\\\";",
            "$pk_func",
            "pk = enableVideo(pk);pk\")"
          ],
          "Result": "$pk"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$pk",
          "Result": "$pk"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "\"http(?:[^=]*?)m3u8(?:[^;]*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^ ]*?)loadbalancer(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$loadbalancer"
        },
        {
          "Id": 11,
          "Action": "GET",
          "Link": "$loadbalancer",
          "Result": "$balancer"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$balancer",
          "Result": "$ip"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            "$pk"
          ],
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer: ",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 19,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "liveonlinetv247",
      "Name": "liveonlinetv247 Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "var ",
          "To": "\\var ",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "var(?:[^\\\\]*)\"\"(?:.*)forEach(?:.*)\\} \\);",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$res1"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$res1",
          "From": "\\var ",
          "To": "var ",
          "Result": "$res1"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=var)(?:[^a-zA-Z]*)([a-zA-Z]*)",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$res1",
          "Result": "$res2"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "$res1",
            "$res2",
            ";"
          ],
          "Result": "$res3"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$res3",
          "From": "\\n",
          "To": "",
          "Result": "$res4"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$res4",
          "From": "\\r",
          "To": "",
          "Result": "$res4"
        },
        {
          "Id": 8,
          "Action": "EVAL",
          "String": "$res4",
          "Result": "$res5"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$res5",
          "Result": "$result"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "olweb.tv",
      "Name": "olweb.tv Parser",
      "Stages": [
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "stream(?:[^;]*)token(?:[^;]*);",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$res2"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$res2",
          "From": " ",
          "To": "",
          "Result": "$res2"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "(?<=\\+)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?=[\\W])",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$res2",
          "Result": "$para1"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=\\+)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?=[\\W])",
          "MatchId": "0",
          "GroupId": "2",
          "Default": "@",
          "Target": "$res2",
          "Result": "$para2"
        },
        {
          "Id": 14,
          "Action": "MATCH",
          "String": "(?<=\\+)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?:[\\W]*)([a-zA-Z0-9_]+)(?=[\\W])",
          "MatchId": "0",
          "GroupId": "4",
          "Default": "@",
          "Target": "$res2",
          "Result": "$para3"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$para1",
            "(?:[^;]*);"
          ],
          "Result": "$para1"
        },
        {
          "Id": 16,
          "Action": "MATCH",
          "String": "$para1",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "",
          "Target": "$Res",
          "Result": "$para1"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$para2",
            "(?:[^;]*);"
          ],
          "Result": "$para2"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "$para2",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "",
          "Target": "$Res",
          "Result": "$para2"
        },
        {
          "Id": 19,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$para3",
            "(?:[^;]*);"
          ],
          "Result": "$para3"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "$para3",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "",
          "Target": "$Res",
          "Result": "$para3"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "(?:[a-zA-Z0-9_]+)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "",
          "Target": "$para3",
          "Result": "$para4"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$para4",
            "(?:[^;]*);"
          ],
          "Result": "$para4"
        },
        {
          "Id": 23,
          "Action": "MATCH",
          "String": "$para4",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "",
          "Target": "$Res",
          "Result": "$para4"
        },
        {
          "Id": 24,
          "Action": "CONCAT",
          "Targets": [
            "$para4",
            "$para1",
            "$para2",
            "$para3",
            "var ",
            "$res2",
            "stream;"
          ],
          "Result": "$res2"
        },
        {
          "Id": 25,
          "Action": "EVAL",
          "String": "$res2",
          "Result": "$result"
        },
        {
          "Id": 26,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 27,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "123stream",
      "Name": "123stream Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "MATCH",
          "String": "(?<=\\/)(?:\\d\\d\\d\\d\\d)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Link",
          "Result": "$id_channel"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "https://stream.123stream.io/embedplayer_123channel.php?width=653&height=370&channel=",
            "$id_channel"
          ],
          "Result": "$Link"
        },
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "Referer::https://123stream.io/",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "\\/\\/(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 34,
          "Action": "CONCAT",
          "Targets": [
            "https:",
            "$result"
          ],
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 36,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "rocketmediaworld",
      "Name": "rocketmediaworld Parser",
      "Stages": [
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "Referer::http://123stream.io/",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 36,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "ustvgo",
      "Name": "ustvgo Parser",
      "Stages": [
        {
          "Id": 0,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 1,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Accept::text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3::Accept-Language::vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7,fr;q=0.6,fr-FR;q=0.5::Connection::keep-alive::Upgrade-Insecure-Requests::1::User-Agent::Safari/537.36::Referer::https://ustv247.tv/",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "var encrypted.*(?=var player)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": ";\\w+\\(\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res2",
          "Result": "$loop_function"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "$loop_function",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<='file':).*?(?=,)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res3"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval(`var _0x1a7c = ['Encryptor', 'Cipher', '_iv', 'blockSize', 'EvpKDF', 'MD5', '_doReset', 'salt', 'BlockCipherMode', 'extend', 'parse', 'CBC', 'Base64', '_doFinalize', '_xformMode', 'substr', 'StreamCipher', 'kdf', '_invKeySchedule', 'floor', 'clone', 'Utf8', 'push', 'Decryptor', 'encryptBlock', '_key', 'ciphertext', 'BufferedBlockAlgorithm', 'Malformed\\x20UTF-8\\x20data', '_process', 'log', 'warn', 'indexOf', '{}.constructor(\\x22return\\x20this\\x22)(\\x20)', 'init', 'finalize', 'BlockCipher', 'sin', 'iterations', '__proto__', 'SerializableCipher', 'min', 'constructor', 'formatter', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', 'exception', 'encrypt', '_keySchedule', 'splice', '_ENC_XFORM_MODE', 'console', 'PasswordBasedCipher', 'join', '_DEC_XFORM_MODE', 'createEncryptor', 'toString', '_prevBlock', 'sigBytes', '_parse', 'pad', 'hasOwnProperty', 'unpad', 'Hasher', 'words', '_mode', 'bind', 'cfg', '_hash', 'format', 'key', 'mixIn', '_minBufferSize', '$super', 'return\\x20(function()\\x20', 'WordArray', 'hasher', '_map', '_doCryptBlock', 'Hex', 'enc', 'execute', '_cipher', 'charCodeAt', '_createHmacHelper', 'OpenSSL', 'ivSize', 'length', 'concat', '_createHelper', 'createDecryptor', 'slice', 'HMAC', 'clamp', 'error', 'stringify', 'reset', '_data', '_doProcessBlock', 'AES', 'create', 'algo', 'Latin1', 'charAt', '_nRounds', 'random', 'prototype', 'apply', 'ceil', 'mode', 'info', '_append', 'trace', 'keySize', 'abs', 'call', 'string', 'update', 'decryptBlock', '_nDataBytes', 'padding', 'lib', 'Base'];(function (_0x1b20a4, _0x1a7c28) {    var _0x4fc7d8 = function (_0x71da2a) {        while (--_0x71da2a) {            _0x1b20a4['push'](_0x1b20a4['shift']());        }    };    _0x4fc7d8(++_0x1a7c28);}(_0x1a7c, 0xd6));var _0x4fc7 = function (_0x1b20a4, _0x1a7c28) {    _0x1b20a4 = _0x1b20a4 - 0x0;    var _0x4fc7d8 = _0x1a7c[_0x1b20a4];    return _0x4fc7d8;};var CryptoJS = CryptoJS || function (_0x4963fa, _0x402c5d) {    var _0x511283 = function () {        var _0x12b1ac = !![];        return function (_0x328238, _0x182073) {            var _0x8064f3 = _0x12b1ac ? function () {                if (_0x182073) {                    var _0x2b2483 = _0x182073[_0x4fc7('0xe')](_0x328238, arguments);                    return _0x182073 = null, _0x2b2483;                }            } : function () {            };            return _0x12b1ac = ![], _0x8064f3;        };    }(), _0x40be5c = _0x511283(this, function () {        var _0x3bf99c;        try {            var _0x5a33fd = Function(_0x4fc7('0x67') + _0x4fc7('0x3f') + ');');            _0x3bf99c = _0x5a33fd();        } catch (_0x9da12e) {            _0x3bf99c = window;        }        var _0x4c391f = _0x3bf99c[_0x4fc7('0x50')] = _0x3bf99c[_0x4fc7('0x50')] || {},            _0x173e7d = [_0x4fc7('0x3c'), _0x4fc7('0x3d'), _0x4fc7('0x11'), _0x4fc7('0x1'), _0x4fc7('0x4b'), 'table', _0x4fc7('0x13')];        for (var _0x266c30 = 0x0; _0x266c30 < _0x173e7d[_0x4fc7('0x74')]; _0x266c30++) {            var _0x88664a = _0x511283[_0x4fc7('0x48')]['prototype'][_0x4fc7('0x5f')](_0x511283),                _0x1f516a = _0x173e7d[_0x266c30], _0x565e1a = _0x4c391f[_0x1f516a] || _0x88664a;            _0x88664a[_0x4fc7('0x45')] = _0x511283[_0x4fc7('0x5f')](_0x511283), _0x88664a[_0x4fc7('0x55')] = _0x565e1a['toString'][_0x4fc7('0x5f')](_0x565e1a), _0x4c391f[_0x1f516a] = _0x88664a;        }    });    var _0x52bf9a = {}, _0x490cd9 = _0x52bf9a[_0x4fc7('0x1c')] = {}, _0x5d64ef = function () {    }, _0x16adfa = _0x490cd9[_0x4fc7('0x1d')] = {        'extend': function (_0x1f41fd) {            _0x5d64ef[_0x4fc7('0xd')] = this;            var _0x4a4358 = new _0x5d64ef();            return _0x1f41fd && _0x4a4358['mixIn'](_0x1f41fd), _0x4a4358[_0x4fc7('0x5a')](_0x4fc7('0x40')) || (_0x4a4358[_0x4fc7('0x40')] = function () {                _0x4a4358[_0x4fc7('0x66')][_0x4fc7('0x40')]['apply'](this, arguments);            }), _0x4a4358[_0x4fc7('0x40')][_0x4fc7('0xd')] = _0x4a4358, _0x4a4358[_0x4fc7('0x66')] = this, _0x4a4358;        }, 'create': function () {            var _0x2a5de1 = this[_0x4fc7('0x27')]();            return _0x2a5de1[_0x4fc7('0x40')][_0x4fc7('0xe')](_0x2a5de1, arguments), _0x2a5de1;        }, 'init': function () {        }, 'mixIn': function (_0x22c330) {            for (var _0x384121 in _0x22c330) _0x22c330['hasOwnProperty'](_0x384121) && (this[_0x384121] = _0x22c330[_0x384121]);            _0x22c330[_0x4fc7('0x5a')](_0x4fc7('0x55')) && (this['toString'] = _0x22c330[_0x4fc7('0x55')]);        }, 'clone': function () {            return this[_0x4fc7('0x40')][_0x4fc7('0xd')]['extend'](this);        }    }, _0x2fcb56 = _0x490cd9[_0x4fc7('0x68')] = _0x16adfa['extend']({        'init': function (_0x119e68, _0x2c7f51) {            _0x119e68 = this[_0x4fc7('0x5d')] = _0x119e68 || [], this[_0x4fc7('0x57')] = _0x2c7f51 != _0x402c5d ? _0x2c7f51 : 0x4 * _0x119e68['length'];        }, 'toString': function (_0x3b9187) {            return (_0x3b9187 || _0x526b12)[_0x4fc7('0x2')](this);        }, 'concat': function (_0x441153) {            var _0x11b5ac = this[_0x4fc7('0x5d')], _0x18f725 = _0x441153[_0x4fc7('0x5d')],                _0x482008 = this[_0x4fc7('0x57')];            _0x441153 = _0x441153[_0x4fc7('0x57')], this[_0x4fc7('0x0')]();            if (_0x482008 % 0x4) for (var _0x404fe1 = 0x0; _0x404fe1 < _0x441153; _0x404fe1++) _0x11b5ac[_0x482008 + _0x404fe1 >>> 0x2] |= (_0x18f725[_0x404fe1 >>> 0x2] >>> 0x18 - 0x8 * (_0x404fe1 % 0x4) & 0xff) << 0x18 - 0x8 * ((_0x482008 + _0x404fe1) % 0x4); else {                if (0xffff < _0x18f725[_0x4fc7('0x74')]) for (_0x404fe1 = 0x0; _0x404fe1 < _0x441153; _0x404fe1 += 0x4) _0x11b5ac[_0x482008 + _0x404fe1 >>> 0x2] = _0x18f725[_0x404fe1 >>> 0x2]; else _0x11b5ac[_0x4fc7('0x34')][_0x4fc7('0xe')](_0x11b5ac, _0x18f725);            }            return this[_0x4fc7('0x57')] += _0x441153, this;        }, 'clamp': function () {            var _0x36e302 = this['words'], _0x33738e = this['sigBytes'];            _0x36e302[_0x33738e >>> 0x2] &= 0xffffffff << 0x20 - 0x8 * (_0x33738e % 0x4), _0x36e302['length'] = _0x4963fa[_0x4fc7('0xf')](_0x33738e / 0x4);        }, 'clone': function () {            var _0x5a6e2a = _0x16adfa[_0x4fc7('0x32')][_0x4fc7('0x16')](this);            return _0x5a6e2a['words'] = this[_0x4fc7('0x5d')]['slice'](0x0), _0x5a6e2a;        }, 'random': function (_0x301375) {            for (var _0x23d5ab = [], _0x473b3d = 0x0; _0x473b3d < _0x301375; _0x473b3d += 0x4) _0x23d5ab['push'](0x100000000 * _0x4963fa[_0x4fc7('0xc')]() | 0x0);            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x23d5ab, _0x301375);        }    }), _0x14b006 = _0x52bf9a[_0x4fc7('0x6d')] = {}, _0x526b12 = _0x14b006[_0x4fc7('0x6c')] = {        'stringify': function (_0x1ba92b) {            var _0x3ad148 = _0x1ba92b[_0x4fc7('0x5d')];            _0x1ba92b = _0x1ba92b[_0x4fc7('0x57')];            for (var _0x11c542 = [], _0x262784 = 0x0; _0x262784 < _0x1ba92b; _0x262784++) {                var _0x5b2462 = _0x3ad148[_0x262784 >>> 0x2] >>> 0x18 - 0x8 * (_0x262784 % 0x4) & 0xff;                _0x11c542[_0x4fc7('0x34')]((_0x5b2462 >>> 0x4)['toString'](0x10)), _0x11c542['push']((_0x5b2462 & 0xf)[_0x4fc7('0x55')](0x10));            }            return _0x11c542['join']('');        }, 'parse': function (_0x324a4f) {            for (var _0x43e5b4 = _0x324a4f[_0x4fc7('0x74')], _0x22da21 = [], _0x5be37f = 0x0; _0x5be37f < _0x43e5b4; _0x5be37f += 0x2) _0x22da21[_0x5be37f >>> 0x3] |= parseInt(_0x324a4f[_0x4fc7('0x2d')](_0x5be37f, 0x2), 0x10) << 0x18 - 0x4 * (_0x5be37f % 0x8);            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x22da21, _0x43e5b4 / 0x2);        }    }, _0x2a5b74 = _0x14b006[_0x4fc7('0x9')] = {        'stringify': function (_0x11b4fc) {            var _0x4a9754 = _0x11b4fc[_0x4fc7('0x5d')];            _0x11b4fc = _0x11b4fc[_0x4fc7('0x57')];            for (var _0x2ab2ea = [], _0x448418 = 0x0; _0x448418 < _0x11b4fc; _0x448418++) _0x2ab2ea[_0x4fc7('0x34')](String['fromCharCode'](_0x4a9754[_0x448418 >>> 0x2] >>> 0x18 - 0x8 * (_0x448418 % 0x4) & 0xff));            return _0x2ab2ea[_0x4fc7('0x52')]('');        }, 'parse': function (_0x5e2af9) {            for (var _0x5d4601 = _0x5e2af9[_0x4fc7('0x74')], _0x795699 = [], _0x2f1731 = 0x0; _0x2f1731 < _0x5d4601; _0x2f1731++) _0x795699[_0x2f1731 >>> 0x2] |= (_0x5e2af9[_0x4fc7('0x70')](_0x2f1731) & 0xff) << 0x18 - 0x8 * (_0x2f1731 % 0x4);            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x795699, _0x5d4601);        }    }, _0x4702f3 = _0x14b006[_0x4fc7('0x33')] = {        'stringify': function (_0x48a8ad) {            try {                return decodeURIComponent(escape(_0x2a5b74[_0x4fc7('0x2')](_0x48a8ad)));            } catch (_0x369552) {                throw Error(_0x4fc7('0x3a'));            }        }, 'parse': function (_0x38a2e0) {            return _0x2a5b74['parse'](unescape(encodeURIComponent(_0x38a2e0)));        }    }, _0x2c5fc0 = _0x490cd9[_0x4fc7('0x39')] = _0x16adfa[_0x4fc7('0x27')]({        'reset': function () {            this[_0x4fc7('0x4')] = new _0x2fcb56[(_0x4fc7('0x40'))](), this[_0x4fc7('0x1a')] = 0x0;        }, '_append': function (_0x234729) {            'string' == typeof _0x234729 && (_0x234729 = _0x4702f3[_0x4fc7('0x28')](_0x234729)), this['_data'][_0x4fc7('0x75')](_0x234729), this[_0x4fc7('0x1a')] += _0x234729[_0x4fc7('0x57')];        }, '_process': function (_0x4a9e65) {            var _0x79cd35 = this[_0x4fc7('0x4')], _0x3f65b4 = _0x79cd35[_0x4fc7('0x5d')],                _0x296204 = _0x79cd35['sigBytes'], _0x4028c3 = this[_0x4fc7('0x21')],                _0x518b6e = _0x296204 / (0x4 * _0x4028c3),                _0x518b6e = _0x4a9e65 ? _0x4963fa[_0x4fc7('0xf')](_0x518b6e) : _0x4963fa['max']((_0x518b6e | 0x0) - this[_0x4fc7('0x65')], 0x0);            _0x4a9e65 = _0x518b6e * _0x4028c3, _0x296204 = _0x4963fa[_0x4fc7('0x47')](0x4 * _0x4a9e65, _0x296204);            if (_0x4a9e65) {                for (var _0x504d3a = 0x0; _0x504d3a < _0x4a9e65; _0x504d3a += _0x4028c3) this[_0x4fc7('0x5')](_0x3f65b4, _0x504d3a);                _0x504d3a = _0x3f65b4[_0x4fc7('0x4e')](0x0, _0x4a9e65), _0x79cd35[_0x4fc7('0x57')] -= _0x296204;            }            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x504d3a, _0x296204);        }, 'clone': function () {            var _0x3f9176 = _0x16adfa[_0x4fc7('0x32')][_0x4fc7('0x16')](this);            return _0x3f9176[_0x4fc7('0x4')] = this[_0x4fc7('0x4')][_0x4fc7('0x32')](), _0x3f9176;        }, '_minBufferSize': 0x0    });    _0x490cd9[_0x4fc7('0x5c')] = _0x2c5fc0['extend']({        'cfg': _0x16adfa[_0x4fc7('0x27')](),        'init': function (_0x31887c) {            this[_0x4fc7('0x60')] = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x31887c), this['reset']();        },        'reset': function () {            _0x2c5fc0[_0x4fc7('0x3')][_0x4fc7('0x16')](this), this[_0x4fc7('0x24')]();        },        'update': function (_0x1b2501) {            return this[_0x4fc7('0x12')](_0x1b2501), this[_0x4fc7('0x3b')](), this;        },        'finalize': function (_0x35a534) {            return _0x35a534 && this[_0x4fc7('0x12')](_0x35a534), this[_0x4fc7('0x2b')]();        },        'blockSize': 0x10,        '_createHelper': function (_0x173aa4) {            return function (_0x504070, _0xa73737) {                return new _0x173aa4['init'](_0xa73737)[_0x4fc7('0x41')](_0x504070);            };        },        '_createHmacHelper': function (_0x33a9ee) {            return function (_0x10697b, _0x3dabb4) {                return new _0x404418[(_0x4fc7('0x79'))][(_0x4fc7('0x40'))](_0x33a9ee, _0x3dabb4)[_0x4fc7('0x41')](_0x10697b);            };        }    });    var _0x404418 = _0x52bf9a['algo'] = {};    return _0x52bf9a;}(Math);(function () {    var _0x121f6b = CryptoJS, _0x357d2d = _0x121f6b[_0x4fc7('0x1c')][_0x4fc7('0x68')];    _0x121f6b['enc'][_0x4fc7('0x2a')] = {        'stringify': function (_0x2bf03e) {            var _0x444a27 = _0x2bf03e[_0x4fc7('0x5d')], _0x5683fb = _0x2bf03e[_0x4fc7('0x57')],                _0x197234 = this[_0x4fc7('0x6a')];            _0x2bf03e[_0x4fc7('0x0')](), _0x2bf03e = [];            for (var _0x14be15 = 0x0; _0x14be15 < _0x5683fb; _0x14be15 += 0x3) for (var _0x43bf1a = (_0x444a27[_0x14be15 >>> 0x2] >>> 0x18 - 0x8 * (_0x14be15 % 0x4) & 0xff) << 0x10 | (_0x444a27[_0x14be15 + 0x1 >>> 0x2] >>> 0x18 - 0x8 * ((_0x14be15 + 0x1) % 0x4) & 0xff) << 0x8 | _0x444a27[_0x14be15 + 0x2 >>> 0x2] >>> 0x18 - 0x8 * ((_0x14be15 + 0x2) % 0x4) & 0xff, _0x122c70 = 0x0; 0x4 > _0x122c70 && _0x14be15 + 0.75 * _0x122c70 < _0x5683fb; _0x122c70++) _0x2bf03e[_0x4fc7('0x34')](_0x197234[_0x4fc7('0xa')](_0x43bf1a >>> 0x6 * (0x3 - _0x122c70) & 0x3f));            if (_0x444a27 = _0x197234[_0x4fc7('0xa')](0x40)) for (; _0x2bf03e[_0x4fc7('0x74')] % 0x4;) _0x2bf03e['push'](_0x444a27);            return _0x2bf03e[_0x4fc7('0x52')]('');        }, 'parse': function (_0x531e9e) {            var _0x4a0e3e = _0x531e9e[_0x4fc7('0x74')], _0x5560fb = this['_map'], _0x40a137 = _0x5560fb['charAt'](0x40);            _0x40a137 && (_0x40a137 = _0x531e9e[_0x4fc7('0x3e')](_0x40a137), -0x1 != _0x40a137 && (_0x4a0e3e = _0x40a137));            for (var _0x40a137 = [], _0x4ccf92 = 0x0, _0x405427 = 0x0; _0x405427 < _0x4a0e3e; _0x405427++) if (_0x405427 % 0x4) {                var _0x85b3c1 = _0x5560fb['indexOf'](_0x531e9e[_0x4fc7('0xa')](_0x405427 - 0x1)) << 0x2 * (_0x405427 % 0x4),                    _0x5a5a5f = _0x5560fb[_0x4fc7('0x3e')](_0x531e9e[_0x4fc7('0xa')](_0x405427)) >>> 0x6 - 0x2 * (_0x405427 % 0x4);                _0x40a137[_0x4ccf92 >>> 0x2] |= (_0x85b3c1 | _0x5a5a5f) << 0x18 - 0x8 * (_0x4ccf92 % 0x4), _0x4ccf92++;            }            return _0x357d2d[_0x4fc7('0x7')](_0x40a137, _0x4ccf92);        }, '_map': _0x4fc7('0x4a')    };}(), function (_0x11d37f) {    function _0x44b1b0(_0xb15e30, _0x6b5b0a, _0xd7818d, _0x582591, _0x51b3cc, _0x26e382, _0x2cf2f9) {        return _0xb15e30 = _0xb15e30 + (_0x6b5b0a & _0xd7818d | ~_0x6b5b0a & _0x582591) + _0x51b3cc + _0x2cf2f9, (_0xb15e30 << _0x26e382 | _0xb15e30 >>> 0x20 - _0x26e382) + _0x6b5b0a;    }    function _0x3c49a2(_0x54bbb4, _0x555841, _0x2e73e6, _0x1848bc, _0x7ea7ea, _0x5dc189, _0x4b1d7b) {        return _0x54bbb4 = _0x54bbb4 + (_0x555841 & _0x1848bc | _0x2e73e6 & ~_0x1848bc) + _0x7ea7ea + _0x4b1d7b, (_0x54bbb4 << _0x5dc189 | _0x54bbb4 >>> 0x20 - _0x5dc189) + _0x555841;    }    function _0x35f696(_0x5c842b, _0xe0dd9d, _0x5a57bf, _0x2235d4, _0xe74453, _0x7f798e, _0x160a2f) {        return _0x5c842b = _0x5c842b + (_0xe0dd9d ^ _0x5a57bf ^ _0x2235d4) + _0xe74453 + _0x160a2f, (_0x5c842b << _0x7f798e | _0x5c842b >>> 0x20 - _0x7f798e) + _0xe0dd9d;    }    function _0x5a1815(_0x554d42, _0x14d497, _0x1ff873, _0x8e950d, _0x1c2c4d, _0xdacd2b, _0x2bc668) {        return _0x554d42 = _0x554d42 + (_0x1ff873 ^ (_0x14d497 | ~_0x8e950d)) + _0x1c2c4d + _0x2bc668, (_0x554d42 << _0xdacd2b | _0x554d42 >>> 0x20 - _0xdacd2b) + _0x14d497;    }    for (var _0x348b11 = CryptoJS, _0x1dd27d = _0x348b11[_0x4fc7('0x1c')], _0x1a8159 = _0x1dd27d[_0x4fc7('0x68')], _0x1696b5 = _0x1dd27d[_0x4fc7('0x5c')], _0x1dd27d = _0x348b11[_0x4fc7('0x8')], _0x9f3fd4 = [], _0xa3f65a = 0x0; 0x40 > _0xa3f65a; _0xa3f65a++) _0x9f3fd4[_0xa3f65a] = 0x100000000 * _0x11d37f[_0x4fc7('0x15')](_0x11d37f[_0x4fc7('0x43')](_0xa3f65a + 0x1)) | 0x0;    _0x1dd27d = _0x1dd27d['MD5'] = _0x1696b5['extend']({        '_doReset': function () {            this[_0x4fc7('0x61')] = new _0x1a8159[(_0x4fc7('0x40'))]([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);        }, '_doProcessBlock': function (_0x565ebc, _0x10873f) {            for (var _0x5b1697 = 0x0; 0x10 > _0x5b1697; _0x5b1697++) {                var _0x539d9c = _0x10873f + _0x5b1697, _0x31ecce = _0x565ebc[_0x539d9c];                _0x565ebc[_0x539d9c] = (_0x31ecce << 0x8 | _0x31ecce >>> 0x18) & 0xff00ff | (_0x31ecce << 0x18 | _0x31ecce >>> 0x8) & 0xff00ff00;            }            var _0x5b1697 = this['_hash'][_0x4fc7('0x5d')], _0x539d9c = _0x565ebc[_0x10873f + 0x0],                _0x31ecce = _0x565ebc[_0x10873f + 0x1], _0x19e5ec = _0x565ebc[_0x10873f + 0x2],                _0x30a5d0 = _0x565ebc[_0x10873f + 0x3], _0xcb7515 = _0x565ebc[_0x10873f + 0x4],                _0x5aff99 = _0x565ebc[_0x10873f + 0x5], _0x2ba219 = _0x565ebc[_0x10873f + 0x6],                _0x116d77 = _0x565ebc[_0x10873f + 0x7], _0x369ef1 = _0x565ebc[_0x10873f + 0x8],                _0xce4086 = _0x565ebc[_0x10873f + 0x9], _0x8bafbd = _0x565ebc[_0x10873f + 0xa],                _0x124e89 = _0x565ebc[_0x10873f + 0xb], _0xf4c613 = _0x565ebc[_0x10873f + 0xc],                _0x2700da = _0x565ebc[_0x10873f + 0xd], _0x36e6a8 = _0x565ebc[_0x10873f + 0xe],                _0x43203c = _0x565ebc[_0x10873f + 0xf], _0x513999 = _0x5b1697[0x0], _0x52d5da = _0x5b1697[0x1],                _0x4100af = _0x5b1697[0x2], _0x377de7 = _0x5b1697[0x3],                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x539d9c, 0x7, _0x9f3fd4[0x0]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x31ecce, 0xc, _0x9f3fd4[0x1]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x19e5ec, 0x11, _0x9f3fd4[0x2]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x30a5d0, 0x16, _0x9f3fd4[0x3]),                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xcb7515, 0x7, _0x9f3fd4[0x4]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x5aff99, 0xc, _0x9f3fd4[0x5]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x2ba219, 0x11, _0x9f3fd4[0x6]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x116d77, 0x16, _0x9f3fd4[0x7]),                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x369ef1, 0x7, _0x9f3fd4[0x8]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0xce4086, 0xc, _0x9f3fd4[0x9]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x8bafbd, 0x11, _0x9f3fd4[0xa]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x124e89, 0x16, _0x9f3fd4[0xb]),                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xf4c613, 0x7, _0x9f3fd4[0xc]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x2700da, 0xc, _0x9f3fd4[0xd]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x36e6a8, 0x11, _0x9f3fd4[0xe]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x43203c, 0x16, _0x9f3fd4[0xf]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x31ecce, 0x5, _0x9f3fd4[0x10]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x2ba219, 0x9, _0x9f3fd4[0x11]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x124e89, 0xe, _0x9f3fd4[0x12]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x539d9c, 0x14, _0x9f3fd4[0x13]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x5aff99, 0x5, _0x9f3fd4[0x14]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x8bafbd, 0x9, _0x9f3fd4[0x15]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x43203c, 0xe, _0x9f3fd4[0x16]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0xcb7515, 0x14, _0x9f3fd4[0x17]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xce4086, 0x5, _0x9f3fd4[0x18]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x36e6a8, 0x9, _0x9f3fd4[0x19]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x30a5d0, 0xe, _0x9f3fd4[0x1a]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x369ef1, 0x14, _0x9f3fd4[0x1b]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x2700da, 0x5, _0x9f3fd4[0x1c]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x19e5ec, 0x9, _0x9f3fd4[0x1d]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x116d77, 0xe, _0x9f3fd4[0x1e]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0xf4c613, 0x14, _0x9f3fd4[0x1f]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x5aff99, 0x4, _0x9f3fd4[0x20]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x369ef1, 0xb, _0x9f3fd4[0x21]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x124e89, 0x10, _0x9f3fd4[0x22]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x36e6a8, 0x17, _0x9f3fd4[0x23]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x31ecce, 0x4, _0x9f3fd4[0x24]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0xcb7515, 0xb, _0x9f3fd4[0x25]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x116d77, 0x10, _0x9f3fd4[0x26]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x8bafbd, 0x17, _0x9f3fd4[0x27]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x2700da, 0x4, _0x9f3fd4[0x28]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x539d9c, 0xb, _0x9f3fd4[0x29]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x30a5d0, 0x10, _0x9f3fd4[0x2a]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x2ba219, 0x17, _0x9f3fd4[0x2b]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xce4086, 0x4, _0x9f3fd4[0x2c]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0xf4c613, 0xb, _0x9f3fd4[0x2d]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x43203c, 0x10, _0x9f3fd4[0x2e]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x19e5ec, 0x17, _0x9f3fd4[0x2f]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x539d9c, 0x6, _0x9f3fd4[0x30]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x116d77, 0xa, _0x9f3fd4[0x31]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x36e6a8, 0xf, _0x9f3fd4[0x32]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x5aff99, 0x15, _0x9f3fd4[0x33]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xf4c613, 0x6, _0x9f3fd4[0x34]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x30a5d0, 0xa, _0x9f3fd4[0x35]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x8bafbd, 0xf, _0x9f3fd4[0x36]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x31ecce, 0x15, _0x9f3fd4[0x37]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x369ef1, 0x6, _0x9f3fd4[0x38]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x43203c, 0xa, _0x9f3fd4[0x39]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x2ba219, 0xf, _0x9f3fd4[0x3a]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x2700da, 0x15, _0x9f3fd4[0x3b]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xcb7515, 0x6, _0x9f3fd4[0x3c]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x124e89, 0xa, _0x9f3fd4[0x3d]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x19e5ec, 0xf, _0x9f3fd4[0x3e]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0xce4086, 0x15, _0x9f3fd4[0x3f]);            _0x5b1697[0x0] = _0x5b1697[0x0] + _0x513999 | 0x0, _0x5b1697[0x1] = _0x5b1697[0x1] + _0x52d5da | 0x0, _0x5b1697[0x2] = _0x5b1697[0x2] + _0x4100af | 0x0, _0x5b1697[0x3] = _0x5b1697[0x3] + _0x377de7 | 0x0;        }, '_doFinalize': function () {            var _0x33f065 = this['_data'], _0xc44b4a = _0x33f065[_0x4fc7('0x5d')],                _0x1bc952 = 0x8 * this[_0x4fc7('0x1a')], _0x4c11db = 0x8 * _0x33f065[_0x4fc7('0x57')];            _0xc44b4a[_0x4c11db >>> 0x5] |= 0x80 << 0x18 - _0x4c11db % 0x20;            var _0x23cdb9 = _0x11d37f[_0x4fc7('0x31')](_0x1bc952 / 0x100000000);            _0xc44b4a[(_0x4c11db + 0x40 >>> 0x9 << 0x4) + 0xf] = (_0x23cdb9 << 0x8 | _0x23cdb9 >>> 0x18) & 0xff00ff | (_0x23cdb9 << 0x18 | _0x23cdb9 >>> 0x8) & 0xff00ff00, _0xc44b4a[(_0x4c11db + 0x40 >>> 0x9 << 0x4) + 0xe] = (_0x1bc952 << 0x8 | _0x1bc952 >>> 0x18) & 0xff00ff | (_0x1bc952 << 0x18 | _0x1bc952 >>> 0x8) & 0xff00ff00, _0x33f065[_0x4fc7('0x57')] = 0x4 * (_0xc44b4a[_0x4fc7('0x74')] + 0x1), this[_0x4fc7('0x3b')](), _0x33f065 = this[_0x4fc7('0x61')], _0xc44b4a = _0x33f065[_0x4fc7('0x5d')];            for (_0x1bc952 = 0x0; 0x4 > _0x1bc952; _0x1bc952++) _0x4c11db = _0xc44b4a[_0x1bc952], _0xc44b4a[_0x1bc952] = (_0x4c11db << 0x8 | _0x4c11db >>> 0x18) & 0xff00ff | (_0x4c11db << 0x18 | _0x4c11db >>> 0x8) & 0xff00ff00;            return _0x33f065;        }, 'clone': function () {            var _0x439e5d = _0x1696b5[_0x4fc7('0x32')][_0x4fc7('0x16')](this);            return _0x439e5d[_0x4fc7('0x61')] = this[_0x4fc7('0x61')]['clone'](), _0x439e5d;        }    }), _0x348b11[_0x4fc7('0x23')] = _0x1696b5[_0x4fc7('0x76')](_0x1dd27d), _0x348b11['HmacMD5'] = _0x1696b5[_0x4fc7('0x71')](_0x1dd27d);}(Math), function () {    var _0xab8130 = CryptoJS, _0xb5d22a = _0xab8130[_0x4fc7('0x1c')], _0x43aa20 = _0xb5d22a[_0x4fc7('0x1d')],        _0x29b4b3 = _0xb5d22a['WordArray'], _0xb5d22a = _0xab8130[_0x4fc7('0x8')],        _0x43cc82 = _0xb5d22a[_0x4fc7('0x22')] = _0x43aa20['extend']({            'cfg': _0x43aa20['extend']({                'keySize': 0x4,                'hasher': _0xb5d22a[_0x4fc7('0x23')],                'iterations': 0x1            }), 'init': function (_0x1df322) {                this[_0x4fc7('0x60')] = this[_0x4fc7('0x60')]['extend'](_0x1df322);            }, 'compute': function (_0x1d75dd, _0x45d4c1) {                for (var _0x1a8744 = this[_0x4fc7('0x60')], _0x23782b = _0x1a8744[_0x4fc7('0x69')]['create'](), _0x1dff5f = _0x29b4b3[_0x4fc7('0x7')](), _0x10ec3d = _0x1dff5f[_0x4fc7('0x5d')], _0x356a44 = _0x1a8744[_0x4fc7('0x14')], _0x1a8744 = _0x1a8744[_0x4fc7('0x44')]; _0x10ec3d[_0x4fc7('0x74')] < _0x356a44;) {                    _0x144a50 && _0x23782b[_0x4fc7('0x18')](_0x144a50);                    var _0x144a50 = _0x23782b[_0x4fc7('0x18')](_0x1d75dd)['finalize'](_0x45d4c1);                    _0x23782b[_0x4fc7('0x3')]();                    for (var _0x2f09e8 = 0x1; _0x2f09e8 < _0x1a8744; _0x2f09e8++) _0x144a50 = _0x23782b[_0x4fc7('0x41')](_0x144a50), _0x23782b[_0x4fc7('0x3')]();                    _0x1dff5f[_0x4fc7('0x75')](_0x144a50);                }                return _0x1dff5f['sigBytes'] = 0x4 * _0x356a44, _0x1dff5f;            }        });    _0xab8130[_0x4fc7('0x22')] = function (_0x495abf, _0x1d7aba, _0x3a7777) {        return _0x43cc82[_0x4fc7('0x7')](_0x3a7777)['compute'](_0x495abf, _0x1d7aba);    };}(), CryptoJS[_0x4fc7('0x1c')][_0x4fc7('0x1f')] || function (_0x41c971) {    var _0x24f2c9 = CryptoJS, _0x115c8c = _0x24f2c9[_0x4fc7('0x1c')], _0xa3b0cb = _0x115c8c[_0x4fc7('0x1d')],        _0x17ef2a = _0x115c8c[_0x4fc7('0x68')], _0x42c3d4 = _0x115c8c[_0x4fc7('0x39')],        _0x10c972 = _0x24f2c9[_0x4fc7('0x6d')][_0x4fc7('0x2a')], _0x1ad563 = _0x24f2c9[_0x4fc7('0x8')][_0x4fc7('0x22')],        _0x47d9b9 = _0x115c8c[_0x4fc7('0x1f')] = _0x42c3d4[_0x4fc7('0x27')]({            'cfg': _0xa3b0cb[_0x4fc7('0x27')](),            'createEncryptor': function (_0x2fcd67, _0x397d67) {                return this['create'](this[_0x4fc7('0x4f')], _0x2fcd67, _0x397d67);            },            'createDecryptor': function (_0x4468f0, _0x4645f7) {                return this[_0x4fc7('0x7')](this[_0x4fc7('0x53')], _0x4468f0, _0x4645f7);            },            'init': function (_0x2744f9, _0x25d9ac, _0x46ad11) {                this[_0x4fc7('0x60')] = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x46ad11), this[_0x4fc7('0x2c')] = _0x2744f9, this[_0x4fc7('0x37')] = _0x25d9ac, this[_0x4fc7('0x3')]();            },            'reset': function () {                _0x42c3d4[_0x4fc7('0x3')][_0x4fc7('0x16')](this), this[_0x4fc7('0x24')]();            },            'process': function (_0x2ecc27) {                return this[_0x4fc7('0x12')](_0x2ecc27), this[_0x4fc7('0x3b')]();            },            'finalize': function (_0x45eeac) {                return _0x45eeac && this[_0x4fc7('0x12')](_0x45eeac), this['_doFinalize']();            },            'keySize': 0x4,            'ivSize': 0x4,            '_ENC_XFORM_MODE': 0x1,            '_DEC_XFORM_MODE': 0x2,            '_createHelper': function (_0x10d41a) {                return {                    'encrypt': function (_0x4a19b4, _0x212b91, _0x53f38e) {                        return (_0x4fc7('0x17') == typeof _0x212b91 ? _0x32eb76 : _0x1428de)[_0x4fc7('0x4c')](_0x10d41a, _0x4a19b4, _0x212b91, _0x53f38e);                    }, 'decrypt': function (_0x5e54eb, _0x70c196, _0x436d7f) {                        return (_0x4fc7('0x17') == typeof _0x70c196 ? _0x32eb76 : _0x1428de)['decrypt'](_0x10d41a, _0x5e54eb, _0x70c196, _0x436d7f);                    }                };            }        });    _0x115c8c[_0x4fc7('0x2e')] = _0x47d9b9[_0x4fc7('0x27')]({        '_doFinalize': function () {            return this[_0x4fc7('0x3b')](!0x0);        }, 'blockSize': 0x1    });        var _0x43ed9a = _0x24f2c9['mode'] = {}, _0x25179a = function (_0x20d5f0, _0x318b9b, _0x1984f1) {        var _0x501ff8 = this[_0x4fc7('0x20')];        _0x501ff8 ? this[_0x4fc7('0x20')] = _0x41c971 : _0x501ff8 = this['_prevBlock'];        for (var _0x5ea32b = 0x0; _0x5ea32b < _0x1984f1; _0x5ea32b++) _0x20d5f0[_0x318b9b + _0x5ea32b] ^= _0x501ff8[_0x5ea32b];    }, _0x38b866 = (_0x115c8c[_0x4fc7('0x26')] = _0xa3b0cb[_0x4fc7('0x27')]({        'createEncryptor': function (_0x11eb52, _0x52b7c4) {            return this[_0x4fc7('0x1e')][_0x4fc7('0x7')](_0x11eb52, _0x52b7c4);        }, 'createDecryptor': function (_0x9f2ebe, _0x5a22ad) {            return this[_0x4fc7('0x35')][_0x4fc7('0x7')](_0x9f2ebe, _0x5a22ad);        }, 'init': function (_0x59b25e, _0x6167e2) {            this['_cipher'] = _0x59b25e, this['_iv'] = _0x6167e2;        }    }))[_0x4fc7('0x27')]();    _0x38b866[_0x4fc7('0x1e')] = _0x38b866[_0x4fc7('0x27')]({        'processBlock': function (_0x269718, _0x15063c) {            var _0xfd05e3 = this['_cipher'], _0x3f6a0e = _0xfd05e3[_0x4fc7('0x21')];            _0x25179a[_0x4fc7('0x16')](this, _0x269718, _0x15063c, _0x3f6a0e), _0xfd05e3[_0x4fc7('0x36')](_0x269718, _0x15063c), this[_0x4fc7('0x56')] = _0x269718[_0x4fc7('0x78')](_0x15063c, _0x15063c + _0x3f6a0e);        }    }), _0x38b866[_0x4fc7('0x35')] = _0x38b866['extend']({        'processBlock': function (_0x1c951e, _0x5ca3b3) {            var _0x3d5112 = this[_0x4fc7('0x6f')], _0x337b3b = _0x3d5112[_0x4fc7('0x21')],                _0x1c4e0d = _0x1c951e['slice'](_0x5ca3b3, _0x5ca3b3 + _0x337b3b);            _0x3d5112[_0x4fc7('0x19')](_0x1c951e, _0x5ca3b3), _0x25179a[_0x4fc7('0x16')](this, _0x1c951e, _0x5ca3b3, _0x337b3b), this[_0x4fc7('0x56')] = _0x1c4e0d;        }    }), _0x43ed9a = _0x43ed9a[_0x4fc7('0x29')] = _0x38b866, _0x38b866 = (_0x24f2c9[_0x4fc7('0x59')] = {})['Pkcs7'] = {        'pad': function (_0x1621ea, _0x185add) {            for (var _0xdc7dae = 0x4 * _0x185add, _0xdc7dae = _0xdc7dae - _0x1621ea[_0x4fc7('0x57')] % _0xdc7dae, _0x161a21 = _0xdc7dae << 0x18 | _0xdc7dae << 0x10 | _0xdc7dae << 0x8 | _0xdc7dae, _0x241783 = [], _0x355676 = 0x0; _0x355676 < _0xdc7dae; _0x355676 += 0x4) _0x241783[_0x4fc7('0x34')](_0x161a21);            _0xdc7dae = _0x17ef2a['create'](_0x241783, _0xdc7dae), _0x1621ea['concat'](_0xdc7dae);        }, 'unpad': function (_0x27c720) {            _0x27c720[_0x4fc7('0x57')] -= _0x27c720[_0x4fc7('0x5d')][_0x27c720[_0x4fc7('0x57')] - 0x1 >>> 0x2] & 0xff;        }    }, _0x115c8c[_0x4fc7('0x42')] = _0x47d9b9[_0x4fc7('0x27')]({        'cfg': _0x47d9b9['cfg'][_0x4fc7('0x27')]({            'mode': _0x43ed9a,            'padding': _0x38b866        }), 'reset': function () {            _0x47d9b9[_0x4fc7('0x3')][_0x4fc7('0x16')](this);            var _0x15ba74 = this['cfg'], _0x42f259 = _0x15ba74['iv'], _0x15ba74 = _0x15ba74['mode'];            if (this[_0x4fc7('0x2c')] == this[_0x4fc7('0x4f')]) var _0x1688a9 = _0x15ba74['createEncryptor']; else _0x1688a9 = _0x15ba74[_0x4fc7('0x77')], this[_0x4fc7('0x65')] = 0x1;            this[_0x4fc7('0x5e')] = _0x1688a9[_0x4fc7('0x16')](_0x15ba74, this, _0x42f259 && _0x42f259[_0x4fc7('0x5d')]);        }, '_doProcessBlock': function (_0x528c80, _0x373c3b) {            this[_0x4fc7('0x5e')]['processBlock'](_0x528c80, _0x373c3b);        }, '_doFinalize': function () {            var _0x9337f1 = this[_0x4fc7('0x60')][_0x4fc7('0x1b')];            if (this[_0x4fc7('0x2c')] == this['_ENC_XFORM_MODE']) {                _0x9337f1[_0x4fc7('0x59')](this['_data'], this[_0x4fc7('0x21')]);                var _0x3d25bd = this[_0x4fc7('0x3b')](!0x0);            } else _0x3d25bd = this['_process'](!0x0), _0x9337f1[_0x4fc7('0x5b')](_0x3d25bd);            return _0x3d25bd;        }, 'blockSize': 0x4    });        var _0x4677bd = _0x115c8c['CipherParams'] = _0xa3b0cb[_0x4fc7('0x27')]({        'init': function (_0x371c01) {            this[_0x4fc7('0x64')](_0x371c01);        }, 'toString': function (_0x59483c) {            return (_0x59483c || this[_0x4fc7('0x49')])[_0x4fc7('0x2')](this);        }    }), _0x43ed9a = (_0x24f2c9[_0x4fc7('0x62')] = {})[_0x4fc7('0x72')] = {        'stringify': function (_0x4ffa60) {            var _0x4aba18 = _0x4ffa60['ciphertext'];            return _0x4ffa60 = _0x4ffa60[_0x4fc7('0x25')], (_0x4ffa60 ? _0x17ef2a[_0x4fc7('0x7')]([0x53616c74, 0x65645f5f])['concat'](_0x4ffa60)[_0x4fc7('0x75')](_0x4aba18) : _0x4aba18)[_0x4fc7('0x55')](_0x10c972);        }, 'parse': function (_0x5c3acd) {            _0x5c3acd = _0x10c972[_0x4fc7('0x28')](_0x5c3acd);            var _0x332058 = _0x5c3acd[_0x4fc7('0x5d')];            if (0x53616c74 == _0x332058[0x0] && 0x65645f5f == _0x332058[0x1]) {                var _0x5945d7 = _0x17ef2a[_0x4fc7('0x7')](_0x332058[_0x4fc7('0x78')](0x2, 0x4));                _0x332058['splice'](0x0, 0x4), _0x5c3acd[_0x4fc7('0x57')] -= 0x10;            }            return _0x4677bd[_0x4fc7('0x7')]({'ciphertext': _0x5c3acd, 'salt': _0x5945d7});        }    }, _0x1428de = _0x115c8c[_0x4fc7('0x46')] = _0xa3b0cb[_0x4fc7('0x27')]({        'cfg': _0xa3b0cb[_0x4fc7('0x27')]({'format': _0x43ed9a}),        'encrypt': function (_0x105c39, _0x3721bb, _0x39f1ca, _0x537330) {            _0x537330 = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x537330);            var _0x4bf181 = _0x105c39[_0x4fc7('0x54')](_0x39f1ca, _0x537330);            return _0x3721bb = _0x4bf181[_0x4fc7('0x41')](_0x3721bb), _0x4bf181 = _0x4bf181['cfg'], _0x4677bd[_0x4fc7('0x7')]({                'ciphertext': _0x3721bb,                'key': _0x39f1ca,                'iv': _0x4bf181['iv'],                'algorithm': _0x105c39,                'mode': _0x4bf181[_0x4fc7('0x10')],                'padding': _0x4bf181['padding'],                'blockSize': _0x105c39[_0x4fc7('0x21')],                'formatter': _0x537330[_0x4fc7('0x62')]            });        },        'decrypt': function (_0x36acea, _0x2fa048, _0x3ee0d1, _0x1ff30a) {            return _0x1ff30a = this[_0x4fc7('0x60')]['extend'](_0x1ff30a), _0x2fa048 = this[_0x4fc7('0x58')](_0x2fa048, _0x1ff30a[_0x4fc7('0x62')]), _0x36acea[_0x4fc7('0x77')](_0x3ee0d1, _0x1ff30a)['finalize'](_0x2fa048[_0x4fc7('0x38')]);        },        '_parse': function (_0x15cae9, _0x308dd7) {            return 'string' == typeof _0x15cae9 ? _0x308dd7[_0x4fc7('0x28')](_0x15cae9, this) : _0x15cae9;        }    }), _0x24f2c9 = (_0x24f2c9['kdf'] = {})[_0x4fc7('0x72')] = {        'execute': function (_0x399b2c, _0x303d6f, _0x1b783f, _0x76f5e4) {            return _0x76f5e4 || (_0x76f5e4 = _0x17ef2a['random'](0x8)), _0x399b2c = _0x1ad563[_0x4fc7('0x7')]({'keySize': _0x303d6f + _0x1b783f})['compute'](_0x399b2c, _0x76f5e4), _0x1b783f = _0x17ef2a[_0x4fc7('0x7')](_0x399b2c['words'][_0x4fc7('0x78')](_0x303d6f), 0x4 * _0x1b783f), _0x399b2c[_0x4fc7('0x57')] = 0x4 * _0x303d6f, _0x4677bd['create']({                'key': _0x399b2c,                'iv': _0x1b783f,                'salt': _0x76f5e4            });        }    }, _0x32eb76 = _0x115c8c[_0x4fc7('0x51')] = _0x1428de['extend']({        'cfg': _0x1428de[_0x4fc7('0x60')][_0x4fc7('0x27')]({'kdf': _0x24f2c9}),        'encrypt': function (_0x38057a, _0x1d3a8b, _0x5ada81, _0x5bd9e5) {            return _0x5bd9e5 = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x5bd9e5), _0x5ada81 = _0x5bd9e5[_0x4fc7('0x2f')][_0x4fc7('0x6e')](_0x5ada81, _0x38057a[_0x4fc7('0x14')], _0x38057a['ivSize']), _0x5bd9e5['iv'] = _0x5ada81['iv'], _0x38057a = _0x1428de['encrypt'][_0x4fc7('0x16')](this, _0x38057a, _0x1d3a8b, _0x5ada81[_0x4fc7('0x63')], _0x5bd9e5), _0x38057a[_0x4fc7('0x64')](_0x5ada81), _0x38057a;        },        'decrypt': function (_0x488341, _0x3ef910, _0x380734, _0x4aec20) {            return _0x4aec20 = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x4aec20), _0x3ef910 = this[_0x4fc7('0x58')](_0x3ef910, _0x4aec20[_0x4fc7('0x62')]), _0x380734 = _0x4aec20[_0x4fc7('0x2f')][_0x4fc7('0x6e')](_0x380734, _0x488341[_0x4fc7('0x14')], _0x488341[_0x4fc7('0x73')], _0x3ef910[_0x4fc7('0x25')]), _0x4aec20['iv'] = _0x380734['iv'], _0x1428de['decrypt'][_0x4fc7('0x16')](this, _0x488341, _0x3ef910, _0x380734[_0x4fc7('0x63')], _0x4aec20);        }    });}(), function () {    for (var _0x345107 = CryptoJS, _0x287c31 = _0x345107['lib']['BlockCipher'], _0x47a802 = _0x345107[_0x4fc7('0x8')], _0x34c442 = [], _0x571a19 = [], _0x14bd42 = [], _0x36a240 = [], _0x4d7e91 = [], _0x4b8541 = [], _0x2a7ab6 = [], _0x235fb3 = [], _0x223f32 = [], _0x4df48b = [], _0x56cb1d = [], _0x258dce = 0x0; 0x100 > _0x258dce; _0x258dce++) _0x56cb1d[_0x258dce] = 0x80 > _0x258dce ? _0x258dce << 0x1 : _0x258dce << 0x1 ^ 0x11b;    for (var _0x5b7253 = 0x0, _0x3ba242 = 0x0, _0x258dce = 0x0; 0x100 > _0x258dce; _0x258dce++) {        var _0x574bf4 = _0x3ba242 ^ _0x3ba242 << 0x1 ^ _0x3ba242 << 0x2 ^ _0x3ba242 << 0x3 ^ _0x3ba242 << 0x4,            _0x574bf4 = _0x574bf4 >>> 0x8 ^ _0x574bf4 & 0xff ^ 0x63;        _0x34c442[_0x5b7253] = _0x574bf4, _0x571a19[_0x574bf4] = _0x5b7253;        var _0x2f6513 = _0x56cb1d[_0x5b7253], _0xa4f8d2 = _0x56cb1d[_0x2f6513], _0x108999 = _0x56cb1d[_0xa4f8d2],            _0x530d7e = 0x101 * _0x56cb1d[_0x574bf4] ^ 0x1010100 * _0x574bf4;        _0x14bd42[_0x5b7253] = _0x530d7e << 0x18 | _0x530d7e >>> 0x8, _0x36a240[_0x5b7253] = _0x530d7e << 0x10 | _0x530d7e >>> 0x10, _0x4d7e91[_0x5b7253] = _0x530d7e << 0x8 | _0x530d7e >>> 0x18, _0x4b8541[_0x5b7253] = _0x530d7e, _0x530d7e = 0x1010101 * _0x108999 ^ 0x10001 * _0xa4f8d2 ^ 0x101 * _0x2f6513 ^ 0x1010100 * _0x5b7253, _0x2a7ab6[_0x574bf4] = _0x530d7e << 0x18 | _0x530d7e >>> 0x8, _0x235fb3[_0x574bf4] = _0x530d7e << 0x10 | _0x530d7e >>> 0x10, _0x223f32[_0x574bf4] = _0x530d7e << 0x8 | _0x530d7e >>> 0x18, _0x4df48b[_0x574bf4] = _0x530d7e, _0x5b7253 ? (_0x5b7253 = _0x2f6513 ^ _0x56cb1d[_0x56cb1d[_0x56cb1d[_0x108999 ^ _0x2f6513]]], _0x3ba242 ^= _0x56cb1d[_0x56cb1d[_0x3ba242]]) : _0x5b7253 = _0x3ba242 = 0x1;    }    var _0x160ef5 = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36],        _0x47a802 = _0x47a802[_0x4fc7('0x6')] = _0x287c31[_0x4fc7('0x27')]({            '_doReset': function () {                for (var _0x374651 = this[_0x4fc7('0x37')], _0x3c20f7 = _0x374651[_0x4fc7('0x5d')], _0x1479eb = _0x374651[_0x4fc7('0x57')] / 0x4, _0x374651 = 0x4 * ((this[_0x4fc7('0xb')] = _0x1479eb + 0x6) + 0x1), _0x5f5a9b = this[_0x4fc7('0x4d')] = [], _0x4b932f = 0x0; _0x4b932f < _0x374651; _0x4b932f++) if (_0x4b932f < _0x1479eb) _0x5f5a9b[_0x4b932f] = _0x3c20f7[_0x4b932f]; else {                    var _0x4d5587 = _0x5f5a9b[_0x4b932f - 0x1];                    _0x4b932f % _0x1479eb ? 0x6 < _0x1479eb && 0x4 == _0x4b932f % _0x1479eb && (_0x4d5587 = _0x34c442[_0x4d5587 >>> 0x18] << 0x18 | _0x34c442[_0x4d5587 >>> 0x10 & 0xff] << 0x10 | _0x34c442[_0x4d5587 >>> 0x8 & 0xff] << 0x8 | _0x34c442[_0x4d5587 & 0xff]) : (_0x4d5587 = _0x4d5587 << 0x8 | _0x4d5587 >>> 0x18, _0x4d5587 = _0x34c442[_0x4d5587 >>> 0x18] << 0x18 | _0x34c442[_0x4d5587 >>> 0x10 & 0xff] << 0x10 | _0x34c442[_0x4d5587 >>> 0x8 & 0xff] << 0x8 | _0x34c442[_0x4d5587 & 0xff], _0x4d5587 ^= _0x160ef5[_0x4b932f / _0x1479eb | 0x0] << 0x18), _0x5f5a9b[_0x4b932f] = _0x5f5a9b[_0x4b932f - _0x1479eb] ^ _0x4d5587;                }                _0x3c20f7 = this[_0x4fc7('0x30')] = [];                for (_0x1479eb = 0x0; _0x1479eb < _0x374651; _0x1479eb++) _0x4b932f = _0x374651 - _0x1479eb, _0x4d5587 = _0x1479eb % 0x4 ? _0x5f5a9b[_0x4b932f] : _0x5f5a9b[_0x4b932f - 0x4], _0x3c20f7[_0x1479eb] = 0x4 > _0x1479eb || 0x4 >= _0x4b932f ? _0x4d5587 : _0x2a7ab6[_0x34c442[_0x4d5587 >>> 0x18]] ^ _0x235fb3[_0x34c442[_0x4d5587 >>> 0x10 & 0xff]] ^ _0x223f32[_0x34c442[_0x4d5587 >>> 0x8 & 0xff]] ^ _0x4df48b[_0x34c442[_0x4d5587 & 0xff]];            },            'encryptBlock': function (_0x5a9dca, _0x5eb326) {                this[_0x4fc7('0x6b')](_0x5a9dca, _0x5eb326, this[_0x4fc7('0x4d')], _0x14bd42, _0x36a240, _0x4d7e91, _0x4b8541, _0x34c442);            },            'decryptBlock': function (_0xee97b8, _0x581498) {                var _0xd36747 = _0xee97b8[_0x581498 + 0x1];                _0xee97b8[_0x581498 + 0x1] = _0xee97b8[_0x581498 + 0x3], _0xee97b8[_0x581498 + 0x3] = _0xd36747, this[_0x4fc7('0x6b')](_0xee97b8, _0x581498, this[_0x4fc7('0x30')], _0x2a7ab6, _0x235fb3, _0x223f32, _0x4df48b, _0x571a19), _0xd36747 = _0xee97b8[_0x581498 + 0x1], _0xee97b8[_0x581498 + 0x1] = _0xee97b8[_0x581498 + 0x3], _0xee97b8[_0x581498 + 0x3] = _0xd36747;            },            '_doCryptBlock': function (_0x4e7234, _0x16d2a8, _0x4ecbb0, _0x1500de, _0x1a5de5, _0x41ca52, _0x4b9cb8, _0x4c6ea2) {                for (var _0x282453 = this[_0x4fc7('0xb')], _0x2ba47f = _0x4e7234[_0x16d2a8] ^ _0x4ecbb0[0x0], _0x222512 = _0x4e7234[_0x16d2a8 + 0x1] ^ _0x4ecbb0[0x1], _0x31e3f6 = _0x4e7234[_0x16d2a8 + 0x2] ^ _0x4ecbb0[0x2], _0x3ee554 = _0x4e7234[_0x16d2a8 + 0x3] ^ _0x4ecbb0[0x3], _0x271595 = 0x4, _0x340bd5 = 0x1; _0x340bd5 < _0x282453; _0x340bd5++) var _0x326abd = _0x1500de[_0x2ba47f >>> 0x18] ^ _0x1a5de5[_0x222512 >>> 0x10 & 0xff] ^ _0x41ca52[_0x31e3f6 >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x3ee554 & 0xff] ^ _0x4ecbb0[_0x271595++], _0x3d2e7a = _0x1500de[_0x222512 >>> 0x18] ^ _0x1a5de5[_0x31e3f6 >>> 0x10 & 0xff] ^ _0x41ca52[_0x3ee554 >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x2ba47f & 0xff] ^ _0x4ecbb0[_0x271595++], _0x2d3dda = _0x1500de[_0x31e3f6 >>> 0x18] ^ _0x1a5de5[_0x3ee554 >>> 0x10 & 0xff] ^ _0x41ca52[_0x2ba47f >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x222512 & 0xff] ^ _0x4ecbb0[_0x271595++], _0x3ee554 = _0x1500de[_0x3ee554 >>> 0x18] ^ _0x1a5de5[_0x2ba47f >>> 0x10 & 0xff] ^ _0x41ca52[_0x222512 >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x31e3f6 & 0xff] ^ _0x4ecbb0[_0x271595++], _0x2ba47f = _0x326abd, _0x222512 = _0x3d2e7a, _0x31e3f6 = _0x2d3dda;                _0x326abd = (_0x4c6ea2[_0x2ba47f >>> 0x18] << 0x18 | _0x4c6ea2[_0x222512 >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x31e3f6 >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x3ee554 & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x3d2e7a = (_0x4c6ea2[_0x222512 >>> 0x18] << 0x18 | _0x4c6ea2[_0x31e3f6 >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x3ee554 >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x2ba47f & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x2d3dda = (_0x4c6ea2[_0x31e3f6 >>> 0x18] << 0x18 | _0x4c6ea2[_0x3ee554 >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x2ba47f >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x222512 & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x3ee554 = (_0x4c6ea2[_0x3ee554 >>> 0x18] << 0x18 | _0x4c6ea2[_0x2ba47f >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x222512 >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x31e3f6 & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x4e7234[_0x16d2a8] = _0x326abd, _0x4e7234[_0x16d2a8 + 0x1] = _0x3d2e7a, _0x4e7234[_0x16d2a8 + 0x2] = _0x2d3dda, _0x4e7234[_0x16d2a8 + 0x3] = _0x3ee554;            },            'keySize': 0x8        });    _0x345107[_0x4fc7('0x6')] = _0x287c31[_0x4fc7('0x76')](_0x47a802);}());var _0x451d = ['enc', 'return\\x20(function()\\x20', 'salt', 'ciphertext', 'error', 'lib', 'info', 'console', 'trace', 'parse', 'toString', 'create', 'length', '{}.constructor(\\x22return\\x20this\\x22)(\\x20)', 'bind', 'Base64', 'constructor', 'warn', 'apply', 'Hex', 'CipherParams'];(function (_0x29ac2a, _0x451dcf) {    var _0x2c8f37 = function (_0x1b4803) {        while (--_0x1b4803) {            _0x29ac2a['push'](_0x29ac2a['shift']());        }    };    _0x2c8f37(++_0x451dcf);}(_0x451d, 0x113));var _0x2c8f = function (_0x29ac2a, _0x451dcf) {    _0x29ac2a = _0x29ac2a - 0x0;    var _0x2c8f37 = _0x451d[_0x29ac2a];    return _0x2c8f37;};var CryptoJSAesJson = {    'stringify': function (_0x9cca12) {        var _0x1e989a = {'ct': _0x9cca12[_0x2c8f('0x1')][_0x2c8f('0x8')](CryptoJS[_0x2c8f('0x13')][_0x2c8f('0xd')])};        if (_0x9cca12['iv']) _0x1e989a['iv'] = _0x9cca12['iv'][_0x2c8f('0x8')]();        if (_0x9cca12[_0x2c8f('0x0')]) _0x1e989a['s'] = _0x9cca12[_0x2c8f('0x0')][_0x2c8f('0x8')]();        return JSON['stringify'](_0x1e989a)['replace'](/\\s/g, '');    }, 'parse': function (_0x589789) {        var _0x4b02ad = JSON['parse'](_0x589789),            _0xdd9a5b = CryptoJS[_0x2c8f('0x3')][_0x2c8f('0x12')][_0x2c8f('0x9')]({'ciphertext': CryptoJS[_0x2c8f('0x13')][_0x2c8f('0xd')]['parse'](_0x4b02ad['ct'])});        if (_0x4b02ad['iv']) _0xdd9a5b['iv'] = CryptoJS[_0x2c8f('0x13')][_0x2c8f('0x11')][_0x2c8f('0x7')](_0x4b02ad['iv']);        if (_0x4b02ad['s']) _0xdd9a5b[_0x2c8f('0x0')] = CryptoJS['enc']['Hex'][_0x2c8f('0x7')](_0x4b02ad['s']);        return _0xdd9a5b;    }};",
            "$Res2",
            ";",
            "$Res3",
            "`)"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$Result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$Result"
        },
        {
          "Id": 14,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "123tv",
      "Name": "123tvgo Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "Referer::http://123tvnow.com/",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "atob(?:[^;]*);",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=__\\+=')(?:.*)json(?:[^;]*)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$json"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$var_result",
          "From": "'",
          "To": "\\'",
          "Result": "$var_result"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob (s){var e = {}, r=\\\"\\\",i, k, v = [], w = String.fromCharCode;var n = [[65, 91], [97, 123], [48, 58], [43, 44], [47, 48]];for (z in n) {for (i = n[z][0]; i < n[z][1]; i++) {v.push(w(i)); }} for (i = 0; i < 64; i++)  {e[v[i]] = i;}for (i = 0; i < s.length; i+=72){var b = 0, c, x, l = 0, o = s.substring(i, i+72); for (x = 0; x < o.length; x++){c = e[o.charAt(x)];b = (b << 6) + c; l += 6; while (l >= 8){   r += w((b >>> (l -= 8)) % 256); }}} return r;};var __=",
            "$var_result",
            "__;')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 6,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$__"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "http(?:.*)m3u8",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$__",
          "Result": "$__"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "$__",
            "$json"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 9,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Referer::http://123tvnow.com/",
          "Result": "$Res"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$result",
          "From": "\\/",
          "To": "/",
          "Result": "$result"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "streamlive.to",
      "Name": "StreamLive Parser",
      "Stages": [
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0",
          "Result": "$Res"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 34,
          "Action": "CONCAT",
          "Targets": [
            "https:",
            "$result1"
          ],
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 36,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "livenewsmag",
      "Name": "livenewsmag Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "Referer::http://www.livenewsmag.com/",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "gomostream.com",
      "Name": "gomostream Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "MATCH",
          "String": "(?<=\\/)(?:\\d\\d\\d\\d\\d)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Link",
          "Result": "$id_channel"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "Referer::",
            "$Link"
          ],
          "Result": "$refer"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "https://www.streamlive.to/embedplayer_putlive.php?channel=",
            "$id_channel"
          ],
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$refer",
          "Result": "$Res"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 34,
          "Action": "CONCAT",
          "Targets": [
            "https:",
            "$result1"
          ],
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 36,
          "Action": "REPLACE",
          "In": "$result",
          "From": "1.streamlive.to",
          "To": "nlcache6.streamlive.to",
          "Result": "$result"
        },
        {
          "Id": 37,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "wstream.to",
      "Name": "WStream Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36::Accept-Encoding::*"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$Headers",
            "::content-type::text/html; charset=utf-8"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:[^\\n]*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "wlive.tv",
      "Name": "Vlive Parser",
      "Stages": [
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": "www.wlive.tv/crichd.php",
          "To": "www.vlive.pw/embed.php",
          "Result": "$Link"
        },
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36::Accept-Encoding::*"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$Headers",
            "::content-type::text/html; charset=utf-8"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result1",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "\\/tv\\/(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$result",
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "CONCAT",
          "Targets": [
            "http://tv.wlive.tv",
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 34,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "jantv.live",
      "Name": "Jantv Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36::Accept-Encoding::*"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$Headers",
            "::content-type::text/html; charset=utf-8"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result1",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 34,
          "Action": "CONCAT",
          "Targets": [
            "http:",
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "pkcast.com",
      "Name": "pkcast Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36::Accept-Encoding::*"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$Headers",
            "::content-type::text/html; charset=utf-8"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result1",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 34,
          "Action": "CONCAT",
          "Targets": [
            "http:",
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "b4ucast",
      "Name": "b4ucast Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36::Accept-Encoding::*"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$Headers",
            "::content-type::text/html; charset=utf-8"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result1",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 34,
          "Action": "CONCAT",
          "Targets": [
            "http:",
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 35,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "vlive.pw",
      "Name": "Vlive Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 28,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 30,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 31,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 32,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 33,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 34,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "247bay",
      "Name": "247bay Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=enableVideo\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "",
          "Target": "$Res",
          "Result": "$pk"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "\"http(?:[^=]*?)m3u8(?:[^;]*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "http(?:[^ ]*?)loadbalancer",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$loadbalancer"
        },
        {
          "Id": 12,
          "Action": "GET",
          "Link": "$loadbalancer",
          "Result": "$balancer"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$balancer",
          "Result": "$ip"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 16,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 17,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            "$pk"
          ],
          "Result": "$result"
        },
        {
          "Id": 19,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "wcast",
      "Name": "wcast",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "$Link",
            "__requestHeader=User-Agent::Safari/537.36"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$o_Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=enableVideo\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "Default": "@",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$pk"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "\"http(?:[^=]*?)m3u8(?:[^;]*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res_r"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "\"http(?:[^=]*?)m3u8(?:[^,]*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$eval_link",
          "Target": "$Res_r",
          "Result": "$eval_link"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "http(?:[^ ]*?)loadbalancer",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$loadbalancer"
        },
        {
          "Id": 14,
          "Action": "GET",
          "Link": "$loadbalancer",
          "Result": "$balancer"
        },
        {
          "Id": 15,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$balancer",
          "Result": "$ip"
        },
        {
          "Id": 16,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 17,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 19,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 20,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            "$pk"
          ],
          "Result": "$result"
        },
        {
          "Id": 21,
          "Action": "REPLACE",
          "In": "$result",
          "From": "@",
          "To": "",
          "Result": "$result"
        },
        {
          "Id": 22,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "crichd.tv",
      "Name": "CrichdTV Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)update(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Res1",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=fid=\")(?:.*?)(?=\";)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$fid"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?<=v_width=)(?:.*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$v_width"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=v_height=)(?:.*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$v_height"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "http://www.vvcast.tv/embed.php?live=",
            "$fid",
            "&vw=",
            "$v_width",
            "&vh=",
            "$v_height"
          ],
          "Result": "$location"
        },
        {
          "Id": 10,
          "Action": "GET",
          "Link": "$location",
          "Headers": "Referer::http://cdn2.crichd.info/::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 15,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 16,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 18,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 20,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 23,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 24,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 25,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$Result"
        },
        {
          "Id": 26,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "showskorner",
      "Name": "Showskorner Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=channel=')(?:.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Channel"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=g=')(?:.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$g"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "http://www.janjuaplayer.com/hembedplayer/",
            "$Channel",
            "/",
            "$g",
            "/280/250"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Referer::http://www.showskorner.com/::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=\"src\",)(?:.*?)m3u8(?:.*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "http://dedicated.janjuapublisher.com:1935/loadbalancer",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$ip"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "baqiworld",
      "Name": "Baqiworld Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=channel=')(?:.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Channel"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=g=')(?:.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$g"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "http://www.janjuaplayer.com/hembedplayer/",
            "$Channel",
            "/",
            "$g",
            "/280/250"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Referer::http://www.showskorner.com/::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=\"src\",)(?:.*?)m3u8(?:.*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "http://dedicated.janjuapublisher.com:1935/loadbalancer",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$ip"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "cricfree",
      "Name": "CricFree Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http(?:[\\S]*?)update(?:[\\S]*?)php",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Res",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=fid=[\"|'])(?:.*?)(?=[\"|'];)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$fid"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "(?<=v_width=)(?:.*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$v_width"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=v_height=)(?:.*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$v_height"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "http://www.webtv.ws/embed.php?live=",
            "$fid",
            "&vw=",
            "$v_width",
            "&vh=",
            "$v_height"
          ],
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Res",
          "Headers": "Referer::http://cricfree.sc/",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "http(?:[\\S]*?)m3u8(?:[\\S]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$link"
        },
        {
          "Id": 10,
          "Action": "FINAL",
          "Result": "$link"
        }
      ]
    },
    {
      "Match": "hulku",
      "Name": "Hulkus Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=channel=')(?:.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Channel"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=g=')(?:.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$g"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "http://www.janjuaplayer.com/hembedplayer/",
            "$Channel",
            "/",
            "$g",
            "/280/250"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "Referer::",
            "$Link",
            "::User-Agent::Safari/537.36"
          ],
          "Result": "$header"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "$header",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=\"src\",)(?:.*?)m3u8(?:.*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "http://www.janjuapublisher.com:1935/loadbalancer",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$ip"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "vvcast",
      "Name": "VVcast Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "Referer::http://cdn2.crichd.info/::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$Result"
        },
        {
          "Id": 17,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "livetv",
      "Name": "LiveTV Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)update(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Res1",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)livetv(?:[^\"]*)Channel(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=ch=')(?:[^']*)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$ch"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?<=ch_width=)(?:[^;]*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$ch_width"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=ch_height=)(?:[^;]*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$ch_height"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "http://arembed.com/live.php?ch=",
            "$ch",
            "&vw=",
            "$ch_width",
            "&vh=",
            "$ch_height",
            "&domain=livetv.sc"
          ],
          "Result": "$location"
        },
        {
          "Id": 10,
          "Action": "GET",
          "Link": "$location",
          "Headers": "Referer::http://livetv.sc/::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "(?<=channel=')(?:[^']*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$channel"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "(?<=width=)(?:[^,]*?)(?=,)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$width"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=height=)(?:[^,]*?)(?=,)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$height"
        },
        {
          "Id": 14,
          "Action": "MATCH",
          "String": "(?<=g=')(?:[^']*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$g"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "http://www.247bay.tv/hembedplayer/",
            "$channel",
            "/",
            "$g",
            "/",
            "$width",
            "/",
            "$height"
          ],
          "Result": "$location"
        },
        {
          "Id": 16,
          "Action": "GET",
          "Link": "$location",
          "Headers": "Referer::http://arembed.com/::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "(?<=\")(?:[^\"]*)m3u8(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$link"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)loadbalancer(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$loadbalancer"
        },
        {
          "Id": 19,
          "Action": "GET",
          "Link": "$loadbalancer",
          "Headers": "Referer::http://www.247bay.tv/::User-Agent::Safari/537.36",
          "Result": "$ip"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$ip",
          "Result": "$ip"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "(?<=enableVideo\\(\")(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$pk"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "http://",
            "$ip",
            "$link",
            "$pk"
          ],
          "Result": "$link"
        },
        {
          "Id": 23,
          "Action": "FINAL",
          "Result": "$link"
        }
      ]
    },
    {
      "Match": "freehdsport",
      "Name": "freehdsport Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http://sportzonline(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "GET",
          "Link": "$Res",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "whostreams(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "http://",
            "$Res"
          ],
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "GET",
          "Link": "$Res",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " parseM3U8=0"
          ],
          "Result": "$result"
        },
        {
          "Id": 9,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "whostream",
      "Name": "Whowstream Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "<script>",
          "To": "@",
          "Result": "$Res"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "</script>",
          "To": "@",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:[^@]*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 8,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 10,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 14,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "firstone",
      "Name": "Firstone Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=country)(.*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=')(.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$country"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=channelID)(.*?)(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "(?<=')(.*?)(?=')",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$ID"
        },
        {
          "Id": 6,
          "Action": "POST",
          "Link": "https://www.firstonetv.live/api/",
          "Headers": "User-Agent::Safari/537.36",
          "Params": "action::hiro::result::get",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?<=\"hash\":\")(.*?)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$hash"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=\"time\":)([\\d]*)(?=[^\\d])",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$time"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=\"hiro\":\")(.*?)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$hiro"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$hiro",
          "From": "p",
          "To": "186",
          "Result": "$hiro"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$hiro",
            "').toFixed(0);"
          ],
          "Result": "$hiro"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$hiro",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=\"rss\":)([\\d]*)(?=[^\\d])",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$rss"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "action::hiro::result::",
            "$result",
            "::time::",
            "$time",
            "::hash::",
            "$hash"
          ],
          "Result": "$param"
        },
        {
          "Id": 15,
          "Action": "POST",
          "Link": "https://www.firstonetv.live/api/",
          "Headers": "User-Agent::Safari/537.36",
          "Params": "$param",
          "Result": "$Res1"
        },
        {
          "Id": 16,
          "Action": "MATCH",
          "String": "(?<=\"ctoken\":\")(.*?)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$ctoken"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "action::channel::ctoken::",
            "$ctoken",
            "::c::",
            "$country",
            "::id::",
            "$ID"
          ],
          "Result": "$param"
        },
        {
          "Id": 18,
          "Action": "POST",
          "Link": "https://www.firstonetv.live/api/",
          "Headers": "User-Agent::Safari/537.36",
          "Params": "$param",
          "Result": "$Res1"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "(?<=\"surl\":\")(.*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "Quality(?:.*?)m3u8",
          "MatchId": "1",
          "GroupId": "0",
          "Target": "$Res2",
          "Default": "@",
          "Result": "$item1"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "http(?:.*?)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res2",
          "Default": "$Res2",
          "Result": "$item2"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "$item1",
            "$item2",
            "@"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 23,
          "Action": "MATCH",
          "String": "http(?:.*?)m3u8(?:[^\"|^@]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res2"
        },
        {
          "Id": 24,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "\\",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 25,
          "Action": "CONCAT",
          "Targets": [
            "eval('link=\"",
            "$Res2",
            "\";pos=link.indexOf(\"://\");res=\"\";if(link.indexOf(\"par\")>0||!isNaN(link[pos+3])) res=link+\" engineOptions=user_agent::Safari/537.36\";else res=link;res');"
          ],
          "Result": "$Res1"
        },
        {
          "Id": 26,
          "Action": "EVAL",
          "String": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 27,
          "Action": "FINAL",
          "Result": "$Res2"
        }
      ]
    },
    {
      "Match": "streamfare",
      "Name": "streamfare Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "channel=.*?g=.*?(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "channel=\\\"",
            "$Res1",
            "\\\";channel=channel.split(',')[0].split('=')[1].replace(/'/g,'');channel",
            "\")"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "g=\\\"",
            "$Res1",
            "\\\";g=g.split(',')[1].split('=')[1].replace(/'/g,'');g",
            "\")"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$Res2",
          "Result": "$Res2"
        },
        {
          "Id": 24,
          "Action": "EVAL",
          "String": "$Res3",
          "Result": "$Res3"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "https://www.janjua.tv/hembedplayer/",
            "$Res2",
            "/",
            "$Res3",
            "/",
            "600",
            "/",
            "400"
          ],
          "Result": "$o_Link"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$o_Link",
          "Headers": "Referer::https://streamfare.com::User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=enableVideo\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$pk"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "https://janjua.pw/resources/scripts/newjanjua.js([^'\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$js_link"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$js_link",
          "Result": "$pk_js"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "function enableVideo(?:[^\\}]*)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$pk_js",
          "Result": "$pk_func"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "pk=\\\"",
            "$pk",
            "\\\";",
            "$pk_func",
            "pk = enableVideo(pk);pk\")"
          ],
          "Result": "$pk"
        },
        {
          "Id": 10,
          "Action": "EVAL",
          "String": "$pk",
          "Result": "$pk"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "\"http(?:[^=]*?)m3u8(?:[^;]*?)\"",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "http(?:[^ ]*?)loadbalancer(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$loadbalancer"
        },
        {
          "Id": 13,
          "Action": "GET",
          "Link": "$loadbalancer",
          "Result": "$balancer"
        },
        {
          "Id": 14,
          "Action": "MATCH",
          "String": "(?<=redirect=)(?:.*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$balancer",
          "Result": "$ip"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$ip",
            "\""
          ],
          "Result": "$ip"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": " ea ",
          "To": "$ip",
          "Result": "$eval_link"
        },
        {
          "Id": 16,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$eval_link",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 17,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            "$pk"
          ],
          "Result": "$result"
        },
        {
          "Id": 19,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 20,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "cobar",
      "Name": "cobar.live Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"if(\\\"",
            "$result",
            "\\\"==\\\"@\\\") 24; else 37;\")"
          ],
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$Res",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "GOTO",
          "Stage": "$Res"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "User-Agent::Safari/537.36::Referer::",
            "$Link"
          ],
          "Result": "$Header"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=iframe)(?:.*?src=\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "1",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Link"
        },
        {
          "Id": 9,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Header",
          "Result": "$Res"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:.*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "MATCH",
          "String": "(?<=streamdelay=)(?:.*?;)(.*?)(?=function)",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$out_code",
          "Result": "$Res2"
        },
        {
          "Id": 17,
          "Action": "EVAL",
          "String": "$Res2",
          "Result": "$Res3"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res2",
            "')"
          ],
          "Result": "$Res9"
        },
        {
          "Id": 19,
          "Action": "EVAL",
          "String": "$Res9",
          "Result": "$Res9"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "(?<=ajax)(?:.*?url:)(.*?)(?=,)",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$out_code",
          "Result": "$Res3"
        },
        {
          "Id": 21,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "window.",
          "To": "",
          "Result": "$Res3"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "function dameVuelta.*?\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$out_code",
          "Result": "$Res4"
        },
        {
          "Id": 23,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "window.",
          "To": "",
          "Result": "$Res4"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "(?:function changlasmuy.*?)(var.*?)(?=if)",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$out_code",
          "Result": "$Res5"
        },
        {
          "Id": 25,
          "Action": "REPLACE",
          "In": "$Res5",
          "From": "window.",
          "To": "",
          "Result": "$Res5"
        },
        {
          "Id": 26,
          "Action": "MATCH",
          "String": "(?<=done\\(function\\()(.*?)(?=\\))",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$out_code",
          "Result": "$Res6"
        },
        {
          "Id": 27,
          "Action": "MATCH",
          "String": "(?<=done\\(function\\()(?:.*?)(?=\\))(?:.*?else.*?\\{)(.*?)(?=if)",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$out_code",
          "Result": "$Res7"
        },
        {
          "Id": 28,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i}",
            "$Res2",
            "$Res3",
            "')"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 29,
          "Action": "EVAL",
          "String": "$Res3",
          "Result": "$Link2"
        },
        {
          "Id": 30,
          "Action": "CONCAT",
          "Targets": [
            "Referer::",
            "$Link1",
            "::User-Agent::Safari/537.36::Cookie::elVolumen=100;_ga=GA1.2.12685464.1575619943; _gid=GA1.2.1904256481.1575619943"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 31,
          "Action": "CONCAT",
          "Targets": [
            "https://telerium.tv",
            "$Link2"
          ],
          "Result": "$Link2"
        },
        {
          "Id": 32,
          "Action": "GET",
          "Link": "$Link2",
          "Headers": "$Headers",
          "Result": "$Res8"
        },
        {
          "Id": 33,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i}; ",
            "$Res2",
            ";",
            "$Res4",
            "$Res5",
            ";",
            "$Res6",
            "=",
            "$Res8",
            ";",
            "$Res7",
            "')"
          ],
          "Result": "$Res8"
        },
        {
          "Id": 34,
          "Action": "EVAL",
          "String": "$Res8",
          "Result": "$result1"
        },
        {
          "Id": 35,
          "Action": "MATCH",
          "String": "\\/\\/(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$result1",
          "Result": "$result"
        },
        {
          "Id": 36,
          "Action": "CONCAT",
          "Targets": [
            "https:",
            "$result"
          ],
          "Result": "$result"
        },
        {
          "Id": 37,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 38,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "usnewslive",
      "Name": "usnewslive Parser",
      "Stages": [
        {
          "Id": 0,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 1,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?<=var filePath = ).*?(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$function_name"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i}",
            "$function_name",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 20,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$Result"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$Result"
        },
        {
          "Id": 22,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "ustv247",
      "Name": "ustv247 Parser",
      "Stages": [
        {
          "Id": 0,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 1,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "https://ustv247.tv",
            "$Res2"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Accept::text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3::Accept-Language::vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7,fr;q=0.6,fr-FR;q=0.5::Connection::keep-alive::Upgrade-Insecure-Requests::1::User-Agent::Safari/537.36::Referer::https://ustv247.tv/",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "var encrypted.*(?=var player)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": ";\\w+\\(\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res2",
          "Result": "$loop_function"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "$loop_function",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<='file':).*?(?=,)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res3"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval(`var _0x1a7c = ['Encryptor', 'Cipher', '_iv', 'blockSize', 'EvpKDF', 'MD5', '_doReset', 'salt', 'BlockCipherMode', 'extend', 'parse', 'CBC', 'Base64', '_doFinalize', '_xformMode', 'substr', 'StreamCipher', 'kdf', '_invKeySchedule', 'floor', 'clone', 'Utf8', 'push', 'Decryptor', 'encryptBlock', '_key', 'ciphertext', 'BufferedBlockAlgorithm', 'Malformed\\x20UTF-8\\x20data', '_process', 'log', 'warn', 'indexOf', '{}.constructor(\\x22return\\x20this\\x22)(\\x20)', 'init', 'finalize', 'BlockCipher', 'sin', 'iterations', '__proto__', 'SerializableCipher', 'min', 'constructor', 'formatter', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', 'exception', 'encrypt', '_keySchedule', 'splice', '_ENC_XFORM_MODE', 'console', 'PasswordBasedCipher', 'join', '_DEC_XFORM_MODE', 'createEncryptor', 'toString', '_prevBlock', 'sigBytes', '_parse', 'pad', 'hasOwnProperty', 'unpad', 'Hasher', 'words', '_mode', 'bind', 'cfg', '_hash', 'format', 'key', 'mixIn', '_minBufferSize', '$super', 'return\\x20(function()\\x20', 'WordArray', 'hasher', '_map', '_doCryptBlock', 'Hex', 'enc', 'execute', '_cipher', 'charCodeAt', '_createHmacHelper', 'OpenSSL', 'ivSize', 'length', 'concat', '_createHelper', 'createDecryptor', 'slice', 'HMAC', 'clamp', 'error', 'stringify', 'reset', '_data', '_doProcessBlock', 'AES', 'create', 'algo', 'Latin1', 'charAt', '_nRounds', 'random', 'prototype', 'apply', 'ceil', 'mode', 'info', '_append', 'trace', 'keySize', 'abs', 'call', 'string', 'update', 'decryptBlock', '_nDataBytes', 'padding', 'lib', 'Base'];(function (_0x1b20a4, _0x1a7c28) {    var _0x4fc7d8 = function (_0x71da2a) {        while (--_0x71da2a) {            _0x1b20a4['push'](_0x1b20a4['shift']());        }    };    _0x4fc7d8(++_0x1a7c28);}(_0x1a7c, 0xd6));var _0x4fc7 = function (_0x1b20a4, _0x1a7c28) {    _0x1b20a4 = _0x1b20a4 - 0x0;    var _0x4fc7d8 = _0x1a7c[_0x1b20a4];    return _0x4fc7d8;};var CryptoJS = CryptoJS || function (_0x4963fa, _0x402c5d) {    var _0x511283 = function () {        var _0x12b1ac = !![];        return function (_0x328238, _0x182073) {            var _0x8064f3 = _0x12b1ac ? function () {                if (_0x182073) {                    var _0x2b2483 = _0x182073[_0x4fc7('0xe')](_0x328238, arguments);                    return _0x182073 = null, _0x2b2483;                }            } : function () {            };            return _0x12b1ac = ![], _0x8064f3;        };    }(), _0x40be5c = _0x511283(this, function () {        var _0x3bf99c;        try {            var _0x5a33fd = Function(_0x4fc7('0x67') + _0x4fc7('0x3f') + ');');            _0x3bf99c = _0x5a33fd();        } catch (_0x9da12e) {            _0x3bf99c = window;        }        var _0x4c391f = _0x3bf99c[_0x4fc7('0x50')] = _0x3bf99c[_0x4fc7('0x50')] || {},            _0x173e7d = [_0x4fc7('0x3c'), _0x4fc7('0x3d'), _0x4fc7('0x11'), _0x4fc7('0x1'), _0x4fc7('0x4b'), 'table', _0x4fc7('0x13')];        for (var _0x266c30 = 0x0; _0x266c30 < _0x173e7d[_0x4fc7('0x74')]; _0x266c30++) {            var _0x88664a = _0x511283[_0x4fc7('0x48')]['prototype'][_0x4fc7('0x5f')](_0x511283),                _0x1f516a = _0x173e7d[_0x266c30], _0x565e1a = _0x4c391f[_0x1f516a] || _0x88664a;            _0x88664a[_0x4fc7('0x45')] = _0x511283[_0x4fc7('0x5f')](_0x511283), _0x88664a[_0x4fc7('0x55')] = _0x565e1a['toString'][_0x4fc7('0x5f')](_0x565e1a), _0x4c391f[_0x1f516a] = _0x88664a;        }    });    var _0x52bf9a = {}, _0x490cd9 = _0x52bf9a[_0x4fc7('0x1c')] = {}, _0x5d64ef = function () {    }, _0x16adfa = _0x490cd9[_0x4fc7('0x1d')] = {        'extend': function (_0x1f41fd) {            _0x5d64ef[_0x4fc7('0xd')] = this;            var _0x4a4358 = new _0x5d64ef();            return _0x1f41fd && _0x4a4358['mixIn'](_0x1f41fd), _0x4a4358[_0x4fc7('0x5a')](_0x4fc7('0x40')) || (_0x4a4358[_0x4fc7('0x40')] = function () {                _0x4a4358[_0x4fc7('0x66')][_0x4fc7('0x40')]['apply'](this, arguments);            }), _0x4a4358[_0x4fc7('0x40')][_0x4fc7('0xd')] = _0x4a4358, _0x4a4358[_0x4fc7('0x66')] = this, _0x4a4358;        }, 'create': function () {            var _0x2a5de1 = this[_0x4fc7('0x27')]();            return _0x2a5de1[_0x4fc7('0x40')][_0x4fc7('0xe')](_0x2a5de1, arguments), _0x2a5de1;        }, 'init': function () {        }, 'mixIn': function (_0x22c330) {            for (var _0x384121 in _0x22c330) _0x22c330['hasOwnProperty'](_0x384121) && (this[_0x384121] = _0x22c330[_0x384121]);            _0x22c330[_0x4fc7('0x5a')](_0x4fc7('0x55')) && (this['toString'] = _0x22c330[_0x4fc7('0x55')]);        }, 'clone': function () {            return this[_0x4fc7('0x40')][_0x4fc7('0xd')]['extend'](this);        }    }, _0x2fcb56 = _0x490cd9[_0x4fc7('0x68')] = _0x16adfa['extend']({        'init': function (_0x119e68, _0x2c7f51) {            _0x119e68 = this[_0x4fc7('0x5d')] = _0x119e68 || [], this[_0x4fc7('0x57')] = _0x2c7f51 != _0x402c5d ? _0x2c7f51 : 0x4 * _0x119e68['length'];        }, 'toString': function (_0x3b9187) {            return (_0x3b9187 || _0x526b12)[_0x4fc7('0x2')](this);        }, 'concat': function (_0x441153) {            var _0x11b5ac = this[_0x4fc7('0x5d')], _0x18f725 = _0x441153[_0x4fc7('0x5d')],                _0x482008 = this[_0x4fc7('0x57')];            _0x441153 = _0x441153[_0x4fc7('0x57')], this[_0x4fc7('0x0')]();            if (_0x482008 % 0x4) for (var _0x404fe1 = 0x0; _0x404fe1 < _0x441153; _0x404fe1++) _0x11b5ac[_0x482008 + _0x404fe1 >>> 0x2] |= (_0x18f725[_0x404fe1 >>> 0x2] >>> 0x18 - 0x8 * (_0x404fe1 % 0x4) & 0xff) << 0x18 - 0x8 * ((_0x482008 + _0x404fe1) % 0x4); else {                if (0xffff < _0x18f725[_0x4fc7('0x74')]) for (_0x404fe1 = 0x0; _0x404fe1 < _0x441153; _0x404fe1 += 0x4) _0x11b5ac[_0x482008 + _0x404fe1 >>> 0x2] = _0x18f725[_0x404fe1 >>> 0x2]; else _0x11b5ac[_0x4fc7('0x34')][_0x4fc7('0xe')](_0x11b5ac, _0x18f725);            }            return this[_0x4fc7('0x57')] += _0x441153, this;        }, 'clamp': function () {            var _0x36e302 = this['words'], _0x33738e = this['sigBytes'];            _0x36e302[_0x33738e >>> 0x2] &= 0xffffffff << 0x20 - 0x8 * (_0x33738e % 0x4), _0x36e302['length'] = _0x4963fa[_0x4fc7('0xf')](_0x33738e / 0x4);        }, 'clone': function () {            var _0x5a6e2a = _0x16adfa[_0x4fc7('0x32')][_0x4fc7('0x16')](this);            return _0x5a6e2a['words'] = this[_0x4fc7('0x5d')]['slice'](0x0), _0x5a6e2a;        }, 'random': function (_0x301375) {            for (var _0x23d5ab = [], _0x473b3d = 0x0; _0x473b3d < _0x301375; _0x473b3d += 0x4) _0x23d5ab['push'](0x100000000 * _0x4963fa[_0x4fc7('0xc')]() | 0x0);            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x23d5ab, _0x301375);        }    }), _0x14b006 = _0x52bf9a[_0x4fc7('0x6d')] = {}, _0x526b12 = _0x14b006[_0x4fc7('0x6c')] = {        'stringify': function (_0x1ba92b) {            var _0x3ad148 = _0x1ba92b[_0x4fc7('0x5d')];            _0x1ba92b = _0x1ba92b[_0x4fc7('0x57')];            for (var _0x11c542 = [], _0x262784 = 0x0; _0x262784 < _0x1ba92b; _0x262784++) {                var _0x5b2462 = _0x3ad148[_0x262784 >>> 0x2] >>> 0x18 - 0x8 * (_0x262784 % 0x4) & 0xff;                _0x11c542[_0x4fc7('0x34')]((_0x5b2462 >>> 0x4)['toString'](0x10)), _0x11c542['push']((_0x5b2462 & 0xf)[_0x4fc7('0x55')](0x10));            }            return _0x11c542['join']('');        }, 'parse': function (_0x324a4f) {            for (var _0x43e5b4 = _0x324a4f[_0x4fc7('0x74')], _0x22da21 = [], _0x5be37f = 0x0; _0x5be37f < _0x43e5b4; _0x5be37f += 0x2) _0x22da21[_0x5be37f >>> 0x3] |= parseInt(_0x324a4f[_0x4fc7('0x2d')](_0x5be37f, 0x2), 0x10) << 0x18 - 0x4 * (_0x5be37f % 0x8);            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x22da21, _0x43e5b4 / 0x2);        }    }, _0x2a5b74 = _0x14b006[_0x4fc7('0x9')] = {        'stringify': function (_0x11b4fc) {            var _0x4a9754 = _0x11b4fc[_0x4fc7('0x5d')];            _0x11b4fc = _0x11b4fc[_0x4fc7('0x57')];            for (var _0x2ab2ea = [], _0x448418 = 0x0; _0x448418 < _0x11b4fc; _0x448418++) _0x2ab2ea[_0x4fc7('0x34')](String['fromCharCode'](_0x4a9754[_0x448418 >>> 0x2] >>> 0x18 - 0x8 * (_0x448418 % 0x4) & 0xff));            return _0x2ab2ea[_0x4fc7('0x52')]('');        }, 'parse': function (_0x5e2af9) {            for (var _0x5d4601 = _0x5e2af9[_0x4fc7('0x74')], _0x795699 = [], _0x2f1731 = 0x0; _0x2f1731 < _0x5d4601; _0x2f1731++) _0x795699[_0x2f1731 >>> 0x2] |= (_0x5e2af9[_0x4fc7('0x70')](_0x2f1731) & 0xff) << 0x18 - 0x8 * (_0x2f1731 % 0x4);            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x795699, _0x5d4601);        }    }, _0x4702f3 = _0x14b006[_0x4fc7('0x33')] = {        'stringify': function (_0x48a8ad) {            try {                return decodeURIComponent(escape(_0x2a5b74[_0x4fc7('0x2')](_0x48a8ad)));            } catch (_0x369552) {                throw Error(_0x4fc7('0x3a'));            }        }, 'parse': function (_0x38a2e0) {            return _0x2a5b74['parse'](unescape(encodeURIComponent(_0x38a2e0)));        }    }, _0x2c5fc0 = _0x490cd9[_0x4fc7('0x39')] = _0x16adfa[_0x4fc7('0x27')]({        'reset': function () {            this[_0x4fc7('0x4')] = new _0x2fcb56[(_0x4fc7('0x40'))](), this[_0x4fc7('0x1a')] = 0x0;        }, '_append': function (_0x234729) {            'string' == typeof _0x234729 && (_0x234729 = _0x4702f3[_0x4fc7('0x28')](_0x234729)), this['_data'][_0x4fc7('0x75')](_0x234729), this[_0x4fc7('0x1a')] += _0x234729[_0x4fc7('0x57')];        }, '_process': function (_0x4a9e65) {            var _0x79cd35 = this[_0x4fc7('0x4')], _0x3f65b4 = _0x79cd35[_0x4fc7('0x5d')],                _0x296204 = _0x79cd35['sigBytes'], _0x4028c3 = this[_0x4fc7('0x21')],                _0x518b6e = _0x296204 / (0x4 * _0x4028c3),                _0x518b6e = _0x4a9e65 ? _0x4963fa[_0x4fc7('0xf')](_0x518b6e) : _0x4963fa['max']((_0x518b6e | 0x0) - this[_0x4fc7('0x65')], 0x0);            _0x4a9e65 = _0x518b6e * _0x4028c3, _0x296204 = _0x4963fa[_0x4fc7('0x47')](0x4 * _0x4a9e65, _0x296204);            if (_0x4a9e65) {                for (var _0x504d3a = 0x0; _0x504d3a < _0x4a9e65; _0x504d3a += _0x4028c3) this[_0x4fc7('0x5')](_0x3f65b4, _0x504d3a);                _0x504d3a = _0x3f65b4[_0x4fc7('0x4e')](0x0, _0x4a9e65), _0x79cd35[_0x4fc7('0x57')] -= _0x296204;            }            return new _0x2fcb56[(_0x4fc7('0x40'))](_0x504d3a, _0x296204);        }, 'clone': function () {            var _0x3f9176 = _0x16adfa[_0x4fc7('0x32')][_0x4fc7('0x16')](this);            return _0x3f9176[_0x4fc7('0x4')] = this[_0x4fc7('0x4')][_0x4fc7('0x32')](), _0x3f9176;        }, '_minBufferSize': 0x0    });        _0x490cd9[_0x4fc7('0x5c')] = _0x2c5fc0['extend']({        'cfg': _0x16adfa[_0x4fc7('0x27')](),        'init': function (_0x31887c) {            this[_0x4fc7('0x60')] = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x31887c), this['reset']();        },        'reset': function () {            _0x2c5fc0[_0x4fc7('0x3')][_0x4fc7('0x16')](this), this[_0x4fc7('0x24')]();        },        'update': function (_0x1b2501) {            return this[_0x4fc7('0x12')](_0x1b2501), this[_0x4fc7('0x3b')](), this;        },        'finalize': function (_0x35a534) {            return _0x35a534 && this[_0x4fc7('0x12')](_0x35a534), this[_0x4fc7('0x2b')]();        },        'blockSize': 0x10,        '_createHelper': function (_0x173aa4) {            return function (_0x504070, _0xa73737) {                return new _0x173aa4['init'](_0xa73737)[_0x4fc7('0x41')](_0x504070);            };        },        '_createHmacHelper': function (_0x33a9ee) {            return function (_0x10697b, _0x3dabb4) {                return new _0x404418[(_0x4fc7('0x79'))][(_0x4fc7('0x40'))](_0x33a9ee, _0x3dabb4)[_0x4fc7('0x41')](_0x10697b);            };        }    });    var _0x404418 = _0x52bf9a['algo'] = {};    return _0x52bf9a;}(Math);(function () {    var _0x121f6b = CryptoJS, _0x357d2d = _0x121f6b[_0x4fc7('0x1c')][_0x4fc7('0x68')];    _0x121f6b['enc'][_0x4fc7('0x2a')] = {        'stringify': function (_0x2bf03e) {            var _0x444a27 = _0x2bf03e[_0x4fc7('0x5d')], _0x5683fb = _0x2bf03e[_0x4fc7('0x57')],                _0x197234 = this[_0x4fc7('0x6a')];            _0x2bf03e[_0x4fc7('0x0')](), _0x2bf03e = [];            for (var _0x14be15 = 0x0; _0x14be15 < _0x5683fb; _0x14be15 += 0x3) for (var _0x43bf1a = (_0x444a27[_0x14be15 >>> 0x2] >>> 0x18 - 0x8 * (_0x14be15 % 0x4) & 0xff) << 0x10 | (_0x444a27[_0x14be15 + 0x1 >>> 0x2] >>> 0x18 - 0x8 * ((_0x14be15 + 0x1) % 0x4) & 0xff) << 0x8 | _0x444a27[_0x14be15 + 0x2 >>> 0x2] >>> 0x18 - 0x8 * ((_0x14be15 + 0x2) % 0x4) & 0xff, _0x122c70 = 0x0; 0x4 > _0x122c70 && _0x14be15 + 0.75 * _0x122c70 < _0x5683fb; _0x122c70++) _0x2bf03e[_0x4fc7('0x34')](_0x197234[_0x4fc7('0xa')](_0x43bf1a >>> 0x6 * (0x3 - _0x122c70) & 0x3f));            if (_0x444a27 = _0x197234[_0x4fc7('0xa')](0x40)) for (; _0x2bf03e[_0x4fc7('0x74')] % 0x4;) _0x2bf03e['push'](_0x444a27);            return _0x2bf03e[_0x4fc7('0x52')]('');        }, 'parse': function (_0x531e9e) {            var _0x4a0e3e = _0x531e9e[_0x4fc7('0x74')], _0x5560fb = this['_map'], _0x40a137 = _0x5560fb['charAt'](0x40);            _0x40a137 && (_0x40a137 = _0x531e9e[_0x4fc7('0x3e')](_0x40a137), -0x1 != _0x40a137 && (_0x4a0e3e = _0x40a137));            for (var _0x40a137 = [], _0x4ccf92 = 0x0, _0x405427 = 0x0; _0x405427 < _0x4a0e3e; _0x405427++) if (_0x405427 % 0x4) {                var _0x85b3c1 = _0x5560fb['indexOf'](_0x531e9e[_0x4fc7('0xa')](_0x405427 - 0x1)) << 0x2 * (_0x405427 % 0x4),                    _0x5a5a5f = _0x5560fb[_0x4fc7('0x3e')](_0x531e9e[_0x4fc7('0xa')](_0x405427)) >>> 0x6 - 0x2 * (_0x405427 % 0x4);                _0x40a137[_0x4ccf92 >>> 0x2] |= (_0x85b3c1 | _0x5a5a5f) << 0x18 - 0x8 * (_0x4ccf92 % 0x4), _0x4ccf92++;            }            return _0x357d2d[_0x4fc7('0x7')](_0x40a137, _0x4ccf92);        }, '_map': _0x4fc7('0x4a')    };}(), function (_0x11d37f) {    function _0x44b1b0(_0xb15e30, _0x6b5b0a, _0xd7818d, _0x582591, _0x51b3cc, _0x26e382, _0x2cf2f9) {        return _0xb15e30 = _0xb15e30 + (_0x6b5b0a & _0xd7818d | ~_0x6b5b0a & _0x582591) + _0x51b3cc + _0x2cf2f9, (_0xb15e30 << _0x26e382 | _0xb15e30 >>> 0x20 - _0x26e382) + _0x6b5b0a;    }    function _0x3c49a2(_0x54bbb4, _0x555841, _0x2e73e6, _0x1848bc, _0x7ea7ea, _0x5dc189, _0x4b1d7b) {        return _0x54bbb4 = _0x54bbb4 + (_0x555841 & _0x1848bc | _0x2e73e6 & ~_0x1848bc) + _0x7ea7ea + _0x4b1d7b, (_0x54bbb4 << _0x5dc189 | _0x54bbb4 >>> 0x20 - _0x5dc189) + _0x555841;    }    function _0x35f696(_0x5c842b, _0xe0dd9d, _0x5a57bf, _0x2235d4, _0xe74453, _0x7f798e, _0x160a2f) {        return _0x5c842b = _0x5c842b + (_0xe0dd9d ^ _0x5a57bf ^ _0x2235d4) + _0xe74453 + _0x160a2f, (_0x5c842b << _0x7f798e | _0x5c842b >>> 0x20 - _0x7f798e) + _0xe0dd9d;    }    function _0x5a1815(_0x554d42, _0x14d497, _0x1ff873, _0x8e950d, _0x1c2c4d, _0xdacd2b, _0x2bc668) {        return _0x554d42 = _0x554d42 + (_0x1ff873 ^ (_0x14d497 | ~_0x8e950d)) + _0x1c2c4d + _0x2bc668, (_0x554d42 << _0xdacd2b | _0x554d42 >>> 0x20 - _0xdacd2b) + _0x14d497;    }    for (var _0x348b11 = CryptoJS, _0x1dd27d = _0x348b11[_0x4fc7('0x1c')], _0x1a8159 = _0x1dd27d[_0x4fc7('0x68')], _0x1696b5 = _0x1dd27d[_0x4fc7('0x5c')], _0x1dd27d = _0x348b11[_0x4fc7('0x8')], _0x9f3fd4 = [], _0xa3f65a = 0x0; 0x40 > _0xa3f65a; _0xa3f65a++) _0x9f3fd4[_0xa3f65a] = 0x100000000 * _0x11d37f[_0x4fc7('0x15')](_0x11d37f[_0x4fc7('0x43')](_0xa3f65a + 0x1)) | 0x0;    _0x1dd27d = _0x1dd27d['MD5'] = _0x1696b5['extend']({        '_doReset': function () {            this[_0x4fc7('0x61')] = new _0x1a8159[(_0x4fc7('0x40'))]([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);        }, '_doProcessBlock': function (_0x565ebc, _0x10873f) {            for (var _0x5b1697 = 0x0; 0x10 > _0x5b1697; _0x5b1697++) {                var _0x539d9c = _0x10873f + _0x5b1697, _0x31ecce = _0x565ebc[_0x539d9c];                _0x565ebc[_0x539d9c] = (_0x31ecce << 0x8 | _0x31ecce >>> 0x18) & 0xff00ff | (_0x31ecce << 0x18 | _0x31ecce >>> 0x8) & 0xff00ff00;            }            var _0x5b1697 = this['_hash'][_0x4fc7('0x5d')], _0x539d9c = _0x565ebc[_0x10873f + 0x0],                _0x31ecce = _0x565ebc[_0x10873f + 0x1], _0x19e5ec = _0x565ebc[_0x10873f + 0x2],                _0x30a5d0 = _0x565ebc[_0x10873f + 0x3], _0xcb7515 = _0x565ebc[_0x10873f + 0x4],                _0x5aff99 = _0x565ebc[_0x10873f + 0x5], _0x2ba219 = _0x565ebc[_0x10873f + 0x6],                _0x116d77 = _0x565ebc[_0x10873f + 0x7], _0x369ef1 = _0x565ebc[_0x10873f + 0x8],                _0xce4086 = _0x565ebc[_0x10873f + 0x9], _0x8bafbd = _0x565ebc[_0x10873f + 0xa],                _0x124e89 = _0x565ebc[_0x10873f + 0xb], _0xf4c613 = _0x565ebc[_0x10873f + 0xc],                _0x2700da = _0x565ebc[_0x10873f + 0xd], _0x36e6a8 = _0x565ebc[_0x10873f + 0xe],                _0x43203c = _0x565ebc[_0x10873f + 0xf], _0x513999 = _0x5b1697[0x0], _0x52d5da = _0x5b1697[0x1],                _0x4100af = _0x5b1697[0x2], _0x377de7 = _0x5b1697[0x3],                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x539d9c, 0x7, _0x9f3fd4[0x0]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x31ecce, 0xc, _0x9f3fd4[0x1]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x19e5ec, 0x11, _0x9f3fd4[0x2]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x30a5d0, 0x16, _0x9f3fd4[0x3]),                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xcb7515, 0x7, _0x9f3fd4[0x4]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x5aff99, 0xc, _0x9f3fd4[0x5]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x2ba219, 0x11, _0x9f3fd4[0x6]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x116d77, 0x16, _0x9f3fd4[0x7]),                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x369ef1, 0x7, _0x9f3fd4[0x8]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0xce4086, 0xc, _0x9f3fd4[0x9]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x8bafbd, 0x11, _0x9f3fd4[0xa]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x124e89, 0x16, _0x9f3fd4[0xb]),                _0x513999 = _0x44b1b0(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xf4c613, 0x7, _0x9f3fd4[0xc]),                _0x377de7 = _0x44b1b0(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x2700da, 0xc, _0x9f3fd4[0xd]),                _0x4100af = _0x44b1b0(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x36e6a8, 0x11, _0x9f3fd4[0xe]),                _0x52d5da = _0x44b1b0(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x43203c, 0x16, _0x9f3fd4[0xf]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x31ecce, 0x5, _0x9f3fd4[0x10]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x2ba219, 0x9, _0x9f3fd4[0x11]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x124e89, 0xe, _0x9f3fd4[0x12]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x539d9c, 0x14, _0x9f3fd4[0x13]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x5aff99, 0x5, _0x9f3fd4[0x14]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x8bafbd, 0x9, _0x9f3fd4[0x15]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x43203c, 0xe, _0x9f3fd4[0x16]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0xcb7515, 0x14, _0x9f3fd4[0x17]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xce4086, 0x5, _0x9f3fd4[0x18]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x36e6a8, 0x9, _0x9f3fd4[0x19]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x30a5d0, 0xe, _0x9f3fd4[0x1a]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x369ef1, 0x14, _0x9f3fd4[0x1b]),                _0x513999 = _0x3c49a2(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x2700da, 0x5, _0x9f3fd4[0x1c]),                _0x377de7 = _0x3c49a2(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x19e5ec, 0x9, _0x9f3fd4[0x1d]),                _0x4100af = _0x3c49a2(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x116d77, 0xe, _0x9f3fd4[0x1e]),                _0x52d5da = _0x3c49a2(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0xf4c613, 0x14, _0x9f3fd4[0x1f]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x5aff99, 0x4, _0x9f3fd4[0x20]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x369ef1, 0xb, _0x9f3fd4[0x21]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x124e89, 0x10, _0x9f3fd4[0x22]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x36e6a8, 0x17, _0x9f3fd4[0x23]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x31ecce, 0x4, _0x9f3fd4[0x24]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0xcb7515, 0xb, _0x9f3fd4[0x25]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x116d77, 0x10, _0x9f3fd4[0x26]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x8bafbd, 0x17, _0x9f3fd4[0x27]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x2700da, 0x4, _0x9f3fd4[0x28]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x539d9c, 0xb, _0x9f3fd4[0x29]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x30a5d0, 0x10, _0x9f3fd4[0x2a]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x2ba219, 0x17, _0x9f3fd4[0x2b]),                _0x513999 = _0x35f696(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xce4086, 0x4, _0x9f3fd4[0x2c]),                _0x377de7 = _0x35f696(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0xf4c613, 0xb, _0x9f3fd4[0x2d]),                _0x4100af = _0x35f696(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x43203c, 0x10, _0x9f3fd4[0x2e]),                _0x52d5da = _0x35f696(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x19e5ec, 0x17, _0x9f3fd4[0x2f]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x539d9c, 0x6, _0x9f3fd4[0x30]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x116d77, 0xa, _0x9f3fd4[0x31]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x36e6a8, 0xf, _0x9f3fd4[0x32]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x5aff99, 0x15, _0x9f3fd4[0x33]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xf4c613, 0x6, _0x9f3fd4[0x34]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x30a5d0, 0xa, _0x9f3fd4[0x35]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x8bafbd, 0xf, _0x9f3fd4[0x36]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x31ecce, 0x15, _0x9f3fd4[0x37]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0x369ef1, 0x6, _0x9f3fd4[0x38]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x43203c, 0xa, _0x9f3fd4[0x39]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x2ba219, 0xf, _0x9f3fd4[0x3a]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0x2700da, 0x15, _0x9f3fd4[0x3b]),                _0x513999 = _0x5a1815(_0x513999, _0x52d5da, _0x4100af, _0x377de7, _0xcb7515, 0x6, _0x9f3fd4[0x3c]),                _0x377de7 = _0x5a1815(_0x377de7, _0x513999, _0x52d5da, _0x4100af, _0x124e89, 0xa, _0x9f3fd4[0x3d]),                _0x4100af = _0x5a1815(_0x4100af, _0x377de7, _0x513999, _0x52d5da, _0x19e5ec, 0xf, _0x9f3fd4[0x3e]),                _0x52d5da = _0x5a1815(_0x52d5da, _0x4100af, _0x377de7, _0x513999, _0xce4086, 0x15, _0x9f3fd4[0x3f]);            _0x5b1697[0x0] = _0x5b1697[0x0] + _0x513999 | 0x0, _0x5b1697[0x1] = _0x5b1697[0x1] + _0x52d5da | 0x0, _0x5b1697[0x2] = _0x5b1697[0x2] + _0x4100af | 0x0, _0x5b1697[0x3] = _0x5b1697[0x3] + _0x377de7 | 0x0;        }, '_doFinalize': function () {            var _0x33f065 = this['_data'], _0xc44b4a = _0x33f065[_0x4fc7('0x5d')],                _0x1bc952 = 0x8 * this[_0x4fc7('0x1a')], _0x4c11db = 0x8 * _0x33f065[_0x4fc7('0x57')];            _0xc44b4a[_0x4c11db >>> 0x5] |= 0x80 << 0x18 - _0x4c11db % 0x20;            var _0x23cdb9 = _0x11d37f[_0x4fc7('0x31')](_0x1bc952 / 0x100000000);            _0xc44b4a[(_0x4c11db + 0x40 >>> 0x9 << 0x4) + 0xf] = (_0x23cdb9 << 0x8 | _0x23cdb9 >>> 0x18) & 0xff00ff | (_0x23cdb9 << 0x18 | _0x23cdb9 >>> 0x8) & 0xff00ff00, _0xc44b4a[(_0x4c11db + 0x40 >>> 0x9 << 0x4) + 0xe] = (_0x1bc952 << 0x8 | _0x1bc952 >>> 0x18) & 0xff00ff | (_0x1bc952 << 0x18 | _0x1bc952 >>> 0x8) & 0xff00ff00, _0x33f065[_0x4fc7('0x57')] = 0x4 * (_0xc44b4a[_0x4fc7('0x74')] + 0x1), this[_0x4fc7('0x3b')](), _0x33f065 = this[_0x4fc7('0x61')], _0xc44b4a = _0x33f065[_0x4fc7('0x5d')];            for (_0x1bc952 = 0x0; 0x4 > _0x1bc952; _0x1bc952++) _0x4c11db = _0xc44b4a[_0x1bc952], _0xc44b4a[_0x1bc952] = (_0x4c11db << 0x8 | _0x4c11db >>> 0x18) & 0xff00ff | (_0x4c11db << 0x18 | _0x4c11db >>> 0x8) & 0xff00ff00;            return _0x33f065;        }, 'clone': function () {            var _0x439e5d = _0x1696b5[_0x4fc7('0x32')][_0x4fc7('0x16')](this);            return _0x439e5d[_0x4fc7('0x61')] = this[_0x4fc7('0x61')]['clone'](), _0x439e5d;        }    }), _0x348b11[_0x4fc7('0x23')] = _0x1696b5[_0x4fc7('0x76')](_0x1dd27d), _0x348b11['HmacMD5'] = _0x1696b5[_0x4fc7('0x71')](_0x1dd27d);}(Math), function () {    var _0xab8130 = CryptoJS, _0xb5d22a = _0xab8130[_0x4fc7('0x1c')], _0x43aa20 = _0xb5d22a[_0x4fc7('0x1d')],        _0x29b4b3 = _0xb5d22a['WordArray'], _0xb5d22a = _0xab8130[_0x4fc7('0x8')],        _0x43cc82 = _0xb5d22a[_0x4fc7('0x22')] = _0x43aa20['extend']({            'cfg': _0x43aa20['extend']({                'keySize': 0x4,                'hasher': _0xb5d22a[_0x4fc7('0x23')],                'iterations': 0x1            }), 'init': function (_0x1df322) {                this[_0x4fc7('0x60')] = this[_0x4fc7('0x60')]['extend'](_0x1df322);            }, 'compute': function (_0x1d75dd, _0x45d4c1) {                for (var _0x1a8744 = this[_0x4fc7('0x60')], _0x23782b = _0x1a8744[_0x4fc7('0x69')]['create'](), _0x1dff5f = _0x29b4b3[_0x4fc7('0x7')](), _0x10ec3d = _0x1dff5f[_0x4fc7('0x5d')], _0x356a44 = _0x1a8744[_0x4fc7('0x14')], _0x1a8744 = _0x1a8744[_0x4fc7('0x44')]; _0x10ec3d[_0x4fc7('0x74')] < _0x356a44;) {                    _0x144a50 && _0x23782b[_0x4fc7('0x18')](_0x144a50);                    var _0x144a50 = _0x23782b[_0x4fc7('0x18')](_0x1d75dd)['finalize'](_0x45d4c1);                    _0x23782b[_0x4fc7('0x3')]();                    for (var _0x2f09e8 = 0x1; _0x2f09e8 < _0x1a8744; _0x2f09e8++) _0x144a50 = _0x23782b[_0x4fc7('0x41')](_0x144a50), _0x23782b[_0x4fc7('0x3')]();                    _0x1dff5f[_0x4fc7('0x75')](_0x144a50);                }                return _0x1dff5f['sigBytes'] = 0x4 * _0x356a44, _0x1dff5f;            }        });    _0xab8130[_0x4fc7('0x22')] = function (_0x495abf, _0x1d7aba, _0x3a7777) {        return _0x43cc82[_0x4fc7('0x7')](_0x3a7777)['compute'](_0x495abf, _0x1d7aba);    };}(), CryptoJS[_0x4fc7('0x1c')][_0x4fc7('0x1f')] || function (_0x41c971) {    var _0x24f2c9 = CryptoJS, _0x115c8c = _0x24f2c9[_0x4fc7('0x1c')], _0xa3b0cb = _0x115c8c[_0x4fc7('0x1d')],        _0x17ef2a = _0x115c8c[_0x4fc7('0x68')], _0x42c3d4 = _0x115c8c[_0x4fc7('0x39')],        _0x10c972 = _0x24f2c9[_0x4fc7('0x6d')][_0x4fc7('0x2a')], _0x1ad563 = _0x24f2c9[_0x4fc7('0x8')][_0x4fc7('0x22')],        _0x47d9b9 = _0x115c8c[_0x4fc7('0x1f')] = _0x42c3d4[_0x4fc7('0x27')]({            'cfg': _0xa3b0cb[_0x4fc7('0x27')](),            'createEncryptor': function (_0x2fcd67, _0x397d67) {                return this['create'](this[_0x4fc7('0x4f')], _0x2fcd67, _0x397d67);            },            'createDecryptor': function (_0x4468f0, _0x4645f7) {                return this[_0x4fc7('0x7')](this[_0x4fc7('0x53')], _0x4468f0, _0x4645f7);            },            'init': function (_0x2744f9, _0x25d9ac, _0x46ad11) {                this[_0x4fc7('0x60')] = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x46ad11), this[_0x4fc7('0x2c')] = _0x2744f9, this[_0x4fc7('0x37')] = _0x25d9ac, this[_0x4fc7('0x3')]();            },            'reset': function () {                _0x42c3d4[_0x4fc7('0x3')][_0x4fc7('0x16')](this), this[_0x4fc7('0x24')]();            },            'process': function (_0x2ecc27) {                return this[_0x4fc7('0x12')](_0x2ecc27), this[_0x4fc7('0x3b')]();            },            'finalize': function (_0x45eeac) {                return _0x45eeac && this[_0x4fc7('0x12')](_0x45eeac), this['_doFinalize']();            },            'keySize': 0x4,            'ivSize': 0x4,            '_ENC_XFORM_MODE': 0x1,            '_DEC_XFORM_MODE': 0x2,            '_createHelper': function (_0x10d41a) {                return {                    'encrypt': function (_0x4a19b4, _0x212b91, _0x53f38e) {                        return (_0x4fc7('0x17') == typeof _0x212b91 ? _0x32eb76 : _0x1428de)[_0x4fc7('0x4c')](_0x10d41a, _0x4a19b4, _0x212b91, _0x53f38e);                    }, 'decrypt': function (_0x5e54eb, _0x70c196, _0x436d7f) {                        return (_0x4fc7('0x17') == typeof _0x70c196 ? _0x32eb76 : _0x1428de)['decrypt'](_0x10d41a, _0x5e54eb, _0x70c196, _0x436d7f);                    }                };            }        });    _0x115c8c[_0x4fc7('0x2e')] = _0x47d9b9[_0x4fc7('0x27')]({        '_doFinalize': function () {            return this[_0x4fc7('0x3b')](!0x0);        }, 'blockSize': 0x1    });        var _0x43ed9a = _0x24f2c9['mode'] = {}, _0x25179a = function (_0x20d5f0, _0x318b9b, _0x1984f1) {        var _0x501ff8 = this[_0x4fc7('0x20')];        _0x501ff8 ? this[_0x4fc7('0x20')] = _0x41c971 : _0x501ff8 = this['_prevBlock'];        for (var _0x5ea32b = 0x0; _0x5ea32b < _0x1984f1; _0x5ea32b++) _0x20d5f0[_0x318b9b + _0x5ea32b] ^= _0x501ff8[_0x5ea32b];    }, _0x38b866 = (_0x115c8c[_0x4fc7('0x26')] = _0xa3b0cb[_0x4fc7('0x27')]({        'createEncryptor': function (_0x11eb52, _0x52b7c4) {            return this[_0x4fc7('0x1e')][_0x4fc7('0x7')](_0x11eb52, _0x52b7c4);        }, 'createDecryptor': function (_0x9f2ebe, _0x5a22ad) {            return this[_0x4fc7('0x35')][_0x4fc7('0x7')](_0x9f2ebe, _0x5a22ad);        }, 'init': function (_0x59b25e, _0x6167e2) {            this['_cipher'] = _0x59b25e, this['_iv'] = _0x6167e2;        }    }))[_0x4fc7('0x27')]();    _0x38b866[_0x4fc7('0x1e')] = _0x38b866[_0x4fc7('0x27')]({        'processBlock': function (_0x269718, _0x15063c) {            var _0xfd05e3 = this['_cipher'], _0x3f6a0e = _0xfd05e3[_0x4fc7('0x21')];            _0x25179a[_0x4fc7('0x16')](this, _0x269718, _0x15063c, _0x3f6a0e), _0xfd05e3[_0x4fc7('0x36')](_0x269718, _0x15063c), this[_0x4fc7('0x56')] = _0x269718[_0x4fc7('0x78')](_0x15063c, _0x15063c + _0x3f6a0e);        }    }), _0x38b866[_0x4fc7('0x35')] = _0x38b866['extend']({        'processBlock': function (_0x1c951e, _0x5ca3b3) {            var _0x3d5112 = this[_0x4fc7('0x6f')], _0x337b3b = _0x3d5112[_0x4fc7('0x21')],                _0x1c4e0d = _0x1c951e['slice'](_0x5ca3b3, _0x5ca3b3 + _0x337b3b);            _0x3d5112[_0x4fc7('0x19')](_0x1c951e, _0x5ca3b3), _0x25179a[_0x4fc7('0x16')](this, _0x1c951e, _0x5ca3b3, _0x337b3b), this[_0x4fc7('0x56')] = _0x1c4e0d;        }    }), _0x43ed9a = _0x43ed9a[_0x4fc7('0x29')] = _0x38b866, _0x38b866 = (_0x24f2c9[_0x4fc7('0x59')] = {})['Pkcs7'] = {        'pad': function (_0x1621ea, _0x185add) {            for (var _0xdc7dae = 0x4 * _0x185add, _0xdc7dae = _0xdc7dae - _0x1621ea[_0x4fc7('0x57')] % _0xdc7dae, _0x161a21 = _0xdc7dae << 0x18 | _0xdc7dae << 0x10 | _0xdc7dae << 0x8 | _0xdc7dae, _0x241783 = [], _0x355676 = 0x0; _0x355676 < _0xdc7dae; _0x355676 += 0x4) _0x241783[_0x4fc7('0x34')](_0x161a21);            _0xdc7dae = _0x17ef2a['create'](_0x241783, _0xdc7dae), _0x1621ea['concat'](_0xdc7dae);        }, 'unpad': function (_0x27c720) {            _0x27c720[_0x4fc7('0x57')] -= _0x27c720[_0x4fc7('0x5d')][_0x27c720[_0x4fc7('0x57')] - 0x1 >>> 0x2] & 0xff;        }    }, _0x115c8c[_0x4fc7('0x42')] = _0x47d9b9[_0x4fc7('0x27')]({        'cfg': _0x47d9b9['cfg'][_0x4fc7('0x27')]({            'mode': _0x43ed9a,            'padding': _0x38b866        }), 'reset': function () {            _0x47d9b9[_0x4fc7('0x3')][_0x4fc7('0x16')](this);            var _0x15ba74 = this['cfg'], _0x42f259 = _0x15ba74['iv'], _0x15ba74 = _0x15ba74['mode'];            if (this[_0x4fc7('0x2c')] == this[_0x4fc7('0x4f')]) var _0x1688a9 = _0x15ba74['createEncryptor']; else _0x1688a9 = _0x15ba74[_0x4fc7('0x77')], this[_0x4fc7('0x65')] = 0x1;            this[_0x4fc7('0x5e')] = _0x1688a9[_0x4fc7('0x16')](_0x15ba74, this, _0x42f259 && _0x42f259[_0x4fc7('0x5d')]);        }, '_doProcessBlock': function (_0x528c80, _0x373c3b) {            this[_0x4fc7('0x5e')]['processBlock'](_0x528c80, _0x373c3b);        }, '_doFinalize': function () {            var _0x9337f1 = this[_0x4fc7('0x60')][_0x4fc7('0x1b')];            if (this[_0x4fc7('0x2c')] == this['_ENC_XFORM_MODE']) {                _0x9337f1[_0x4fc7('0x59')](this['_data'], this[_0x4fc7('0x21')]);                var _0x3d25bd = this[_0x4fc7('0x3b')](!0x0);            } else _0x3d25bd = this['_process'](!0x0), _0x9337f1[_0x4fc7('0x5b')](_0x3d25bd);            return _0x3d25bd;        }, 'blockSize': 0x4    });        var _0x4677bd = _0x115c8c['CipherParams'] = _0xa3b0cb[_0x4fc7('0x27')]({        'init': function (_0x371c01) {            this[_0x4fc7('0x64')](_0x371c01);        }, 'toString': function (_0x59483c) {            return (_0x59483c || this[_0x4fc7('0x49')])[_0x4fc7('0x2')](this);        }    }), _0x43ed9a = (_0x24f2c9[_0x4fc7('0x62')] = {})[_0x4fc7('0x72')] = {        'stringify': function (_0x4ffa60) {            var _0x4aba18 = _0x4ffa60['ciphertext'];            return _0x4ffa60 = _0x4ffa60[_0x4fc7('0x25')], (_0x4ffa60 ? _0x17ef2a[_0x4fc7('0x7')]([0x53616c74, 0x65645f5f])['concat'](_0x4ffa60)[_0x4fc7('0x75')](_0x4aba18) : _0x4aba18)[_0x4fc7('0x55')](_0x10c972);        }, 'parse': function (_0x5c3acd) {            _0x5c3acd = _0x10c972[_0x4fc7('0x28')](_0x5c3acd);            var _0x332058 = _0x5c3acd[_0x4fc7('0x5d')];            if (0x53616c74 == _0x332058[0x0] && 0x65645f5f == _0x332058[0x1]) {                var _0x5945d7 = _0x17ef2a[_0x4fc7('0x7')](_0x332058[_0x4fc7('0x78')](0x2, 0x4));                _0x332058['splice'](0x0, 0x4), _0x5c3acd[_0x4fc7('0x57')] -= 0x10;            }            return _0x4677bd[_0x4fc7('0x7')]({'ciphertext': _0x5c3acd, 'salt': _0x5945d7});        }    }, _0x1428de = _0x115c8c[_0x4fc7('0x46')] = _0xa3b0cb[_0x4fc7('0x27')]({        'cfg': _0xa3b0cb[_0x4fc7('0x27')]({'format': _0x43ed9a}),        'encrypt': function (_0x105c39, _0x3721bb, _0x39f1ca, _0x537330) {            _0x537330 = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x537330);            var _0x4bf181 = _0x105c39[_0x4fc7('0x54')](_0x39f1ca, _0x537330);            return _0x3721bb = _0x4bf181[_0x4fc7('0x41')](_0x3721bb), _0x4bf181 = _0x4bf181['cfg'], _0x4677bd[_0x4fc7('0x7')]({                'ciphertext': _0x3721bb,                'key': _0x39f1ca,                'iv': _0x4bf181['iv'],                'algorithm': _0x105c39,                'mode': _0x4bf181[_0x4fc7('0x10')],                'padding': _0x4bf181['padding'],                'blockSize': _0x105c39[_0x4fc7('0x21')],                'formatter': _0x537330[_0x4fc7('0x62')]            });        },        'decrypt': function (_0x36acea, _0x2fa048, _0x3ee0d1, _0x1ff30a) {            return _0x1ff30a = this[_0x4fc7('0x60')]['extend'](_0x1ff30a), _0x2fa048 = this[_0x4fc7('0x58')](_0x2fa048, _0x1ff30a[_0x4fc7('0x62')]), _0x36acea[_0x4fc7('0x77')](_0x3ee0d1, _0x1ff30a)['finalize'](_0x2fa048[_0x4fc7('0x38')]);        },        '_parse': function (_0x15cae9, _0x308dd7) {            return 'string' == typeof _0x15cae9 ? _0x308dd7[_0x4fc7('0x28')](_0x15cae9, this) : _0x15cae9;        }    }), _0x24f2c9 = (_0x24f2c9['kdf'] = {})[_0x4fc7('0x72')] = {        'execute': function (_0x399b2c, _0x303d6f, _0x1b783f, _0x76f5e4) {            return _0x76f5e4 || (_0x76f5e4 = _0x17ef2a['random'](0x8)), _0x399b2c = _0x1ad563[_0x4fc7('0x7')]({'keySize': _0x303d6f + _0x1b783f})['compute'](_0x399b2c, _0x76f5e4), _0x1b783f = _0x17ef2a[_0x4fc7('0x7')](_0x399b2c['words'][_0x4fc7('0x78')](_0x303d6f), 0x4 * _0x1b783f), _0x399b2c[_0x4fc7('0x57')] = 0x4 * _0x303d6f, _0x4677bd['create']({                'key': _0x399b2c,                'iv': _0x1b783f,                'salt': _0x76f5e4            });        }    }, _0x32eb76 = _0x115c8c[_0x4fc7('0x51')] = _0x1428de['extend']({        'cfg': _0x1428de[_0x4fc7('0x60')][_0x4fc7('0x27')]({'kdf': _0x24f2c9}),        'encrypt': function (_0x38057a, _0x1d3a8b, _0x5ada81, _0x5bd9e5) {            return _0x5bd9e5 = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x5bd9e5), _0x5ada81 = _0x5bd9e5[_0x4fc7('0x2f')][_0x4fc7('0x6e')](_0x5ada81, _0x38057a[_0x4fc7('0x14')], _0x38057a['ivSize']), _0x5bd9e5['iv'] = _0x5ada81['iv'], _0x38057a = _0x1428de['encrypt'][_0x4fc7('0x16')](this, _0x38057a, _0x1d3a8b, _0x5ada81[_0x4fc7('0x63')], _0x5bd9e5), _0x38057a[_0x4fc7('0x64')](_0x5ada81), _0x38057a;        },        'decrypt': function (_0x488341, _0x3ef910, _0x380734, _0x4aec20) {            return _0x4aec20 = this[_0x4fc7('0x60')][_0x4fc7('0x27')](_0x4aec20), _0x3ef910 = this[_0x4fc7('0x58')](_0x3ef910, _0x4aec20[_0x4fc7('0x62')]), _0x380734 = _0x4aec20[_0x4fc7('0x2f')][_0x4fc7('0x6e')](_0x380734, _0x488341[_0x4fc7('0x14')], _0x488341[_0x4fc7('0x73')], _0x3ef910[_0x4fc7('0x25')]), _0x4aec20['iv'] = _0x380734['iv'], _0x1428de['decrypt'][_0x4fc7('0x16')](this, _0x488341, _0x3ef910, _0x380734[_0x4fc7('0x63')], _0x4aec20);        }    });}(), function () {    for (var _0x345107 = CryptoJS, _0x287c31 = _0x345107['lib']['BlockCipher'], _0x47a802 = _0x345107[_0x4fc7('0x8')], _0x34c442 = [], _0x571a19 = [], _0x14bd42 = [], _0x36a240 = [], _0x4d7e91 = [], _0x4b8541 = [], _0x2a7ab6 = [], _0x235fb3 = [], _0x223f32 = [], _0x4df48b = [], _0x56cb1d = [], _0x258dce = 0x0; 0x100 > _0x258dce; _0x258dce++) _0x56cb1d[_0x258dce] = 0x80 > _0x258dce ? _0x258dce << 0x1 : _0x258dce << 0x1 ^ 0x11b;    for (var _0x5b7253 = 0x0, _0x3ba242 = 0x0, _0x258dce = 0x0; 0x100 > _0x258dce; _0x258dce++) {        var _0x574bf4 = _0x3ba242 ^ _0x3ba242 << 0x1 ^ _0x3ba242 << 0x2 ^ _0x3ba242 << 0x3 ^ _0x3ba242 << 0x4,            _0x574bf4 = _0x574bf4 >>> 0x8 ^ _0x574bf4 & 0xff ^ 0x63;        _0x34c442[_0x5b7253] = _0x574bf4, _0x571a19[_0x574bf4] = _0x5b7253;        var _0x2f6513 = _0x56cb1d[_0x5b7253], _0xa4f8d2 = _0x56cb1d[_0x2f6513], _0x108999 = _0x56cb1d[_0xa4f8d2],            _0x530d7e = 0x101 * _0x56cb1d[_0x574bf4] ^ 0x1010100 * _0x574bf4;        _0x14bd42[_0x5b7253] = _0x530d7e << 0x18 | _0x530d7e >>> 0x8, _0x36a240[_0x5b7253] = _0x530d7e << 0x10 | _0x530d7e >>> 0x10, _0x4d7e91[_0x5b7253] = _0x530d7e << 0x8 | _0x530d7e >>> 0x18, _0x4b8541[_0x5b7253] = _0x530d7e, _0x530d7e = 0x1010101 * _0x108999 ^ 0x10001 * _0xa4f8d2 ^ 0x101 * _0x2f6513 ^ 0x1010100 * _0x5b7253, _0x2a7ab6[_0x574bf4] = _0x530d7e << 0x18 | _0x530d7e >>> 0x8, _0x235fb3[_0x574bf4] = _0x530d7e << 0x10 | _0x530d7e >>> 0x10, _0x223f32[_0x574bf4] = _0x530d7e << 0x8 | _0x530d7e >>> 0x18, _0x4df48b[_0x574bf4] = _0x530d7e, _0x5b7253 ? (_0x5b7253 = _0x2f6513 ^ _0x56cb1d[_0x56cb1d[_0x56cb1d[_0x108999 ^ _0x2f6513]]], _0x3ba242 ^= _0x56cb1d[_0x56cb1d[_0x3ba242]]) : _0x5b7253 = _0x3ba242 = 0x1;    }    var _0x160ef5 = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36],        _0x47a802 = _0x47a802[_0x4fc7('0x6')] = _0x287c31[_0x4fc7('0x27')]({            '_doReset': function () {                for (var _0x374651 = this[_0x4fc7('0x37')], _0x3c20f7 = _0x374651[_0x4fc7('0x5d')], _0x1479eb = _0x374651[_0x4fc7('0x57')] / 0x4, _0x374651 = 0x4 * ((this[_0x4fc7('0xb')] = _0x1479eb + 0x6) + 0x1), _0x5f5a9b = this[_0x4fc7('0x4d')] = [], _0x4b932f = 0x0; _0x4b932f < _0x374651; _0x4b932f++) if (_0x4b932f < _0x1479eb) _0x5f5a9b[_0x4b932f] = _0x3c20f7[_0x4b932f]; else {                    var _0x4d5587 = _0x5f5a9b[_0x4b932f - 0x1];                    _0x4b932f % _0x1479eb ? 0x6 < _0x1479eb && 0x4 == _0x4b932f % _0x1479eb && (_0x4d5587 = _0x34c442[_0x4d5587 >>> 0x18] << 0x18 | _0x34c442[_0x4d5587 >>> 0x10 & 0xff] << 0x10 | _0x34c442[_0x4d5587 >>> 0x8 & 0xff] << 0x8 | _0x34c442[_0x4d5587 & 0xff]) : (_0x4d5587 = _0x4d5587 << 0x8 | _0x4d5587 >>> 0x18, _0x4d5587 = _0x34c442[_0x4d5587 >>> 0x18] << 0x18 | _0x34c442[_0x4d5587 >>> 0x10 & 0xff] << 0x10 | _0x34c442[_0x4d5587 >>> 0x8 & 0xff] << 0x8 | _0x34c442[_0x4d5587 & 0xff], _0x4d5587 ^= _0x160ef5[_0x4b932f / _0x1479eb | 0x0] << 0x18), _0x5f5a9b[_0x4b932f] = _0x5f5a9b[_0x4b932f - _0x1479eb] ^ _0x4d5587;                }                _0x3c20f7 = this[_0x4fc7('0x30')] = [];                for (_0x1479eb = 0x0; _0x1479eb < _0x374651; _0x1479eb++) _0x4b932f = _0x374651 - _0x1479eb, _0x4d5587 = _0x1479eb % 0x4 ? _0x5f5a9b[_0x4b932f] : _0x5f5a9b[_0x4b932f - 0x4], _0x3c20f7[_0x1479eb] = 0x4 > _0x1479eb || 0x4 >= _0x4b932f ? _0x4d5587 : _0x2a7ab6[_0x34c442[_0x4d5587 >>> 0x18]] ^ _0x235fb3[_0x34c442[_0x4d5587 >>> 0x10 & 0xff]] ^ _0x223f32[_0x34c442[_0x4d5587 >>> 0x8 & 0xff]] ^ _0x4df48b[_0x34c442[_0x4d5587 & 0xff]];            },            'encryptBlock': function (_0x5a9dca, _0x5eb326) {                this[_0x4fc7('0x6b')](_0x5a9dca, _0x5eb326, this[_0x4fc7('0x4d')], _0x14bd42, _0x36a240, _0x4d7e91, _0x4b8541, _0x34c442);            },            'decryptBlock': function (_0xee97b8, _0x581498) {                var _0xd36747 = _0xee97b8[_0x581498 + 0x1];                _0xee97b8[_0x581498 + 0x1] = _0xee97b8[_0x581498 + 0x3], _0xee97b8[_0x581498 + 0x3] = _0xd36747, this[_0x4fc7('0x6b')](_0xee97b8, _0x581498, this[_0x4fc7('0x30')], _0x2a7ab6, _0x235fb3, _0x223f32, _0x4df48b, _0x571a19), _0xd36747 = _0xee97b8[_0x581498 + 0x1], _0xee97b8[_0x581498 + 0x1] = _0xee97b8[_0x581498 + 0x3], _0xee97b8[_0x581498 + 0x3] = _0xd36747;            },            '_doCryptBlock': function (_0x4e7234, _0x16d2a8, _0x4ecbb0, _0x1500de, _0x1a5de5, _0x41ca52, _0x4b9cb8, _0x4c6ea2) {                for (var _0x282453 = this[_0x4fc7('0xb')], _0x2ba47f = _0x4e7234[_0x16d2a8] ^ _0x4ecbb0[0x0], _0x222512 = _0x4e7234[_0x16d2a8 + 0x1] ^ _0x4ecbb0[0x1], _0x31e3f6 = _0x4e7234[_0x16d2a8 + 0x2] ^ _0x4ecbb0[0x2], _0x3ee554 = _0x4e7234[_0x16d2a8 + 0x3] ^ _0x4ecbb0[0x3], _0x271595 = 0x4, _0x340bd5 = 0x1; _0x340bd5 < _0x282453; _0x340bd5++) var _0x326abd = _0x1500de[_0x2ba47f >>> 0x18] ^ _0x1a5de5[_0x222512 >>> 0x10 & 0xff] ^ _0x41ca52[_0x31e3f6 >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x3ee554 & 0xff] ^ _0x4ecbb0[_0x271595++], _0x3d2e7a = _0x1500de[_0x222512 >>> 0x18] ^ _0x1a5de5[_0x31e3f6 >>> 0x10 & 0xff] ^ _0x41ca52[_0x3ee554 >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x2ba47f & 0xff] ^ _0x4ecbb0[_0x271595++], _0x2d3dda = _0x1500de[_0x31e3f6 >>> 0x18] ^ _0x1a5de5[_0x3ee554 >>> 0x10 & 0xff] ^ _0x41ca52[_0x2ba47f >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x222512 & 0xff] ^ _0x4ecbb0[_0x271595++], _0x3ee554 = _0x1500de[_0x3ee554 >>> 0x18] ^ _0x1a5de5[_0x2ba47f >>> 0x10 & 0xff] ^ _0x41ca52[_0x222512 >>> 0x8 & 0xff] ^ _0x4b9cb8[_0x31e3f6 & 0xff] ^ _0x4ecbb0[_0x271595++], _0x2ba47f = _0x326abd, _0x222512 = _0x3d2e7a, _0x31e3f6 = _0x2d3dda;                _0x326abd = (_0x4c6ea2[_0x2ba47f >>> 0x18] << 0x18 | _0x4c6ea2[_0x222512 >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x31e3f6 >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x3ee554 & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x3d2e7a = (_0x4c6ea2[_0x222512 >>> 0x18] << 0x18 | _0x4c6ea2[_0x31e3f6 >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x3ee554 >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x2ba47f & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x2d3dda = (_0x4c6ea2[_0x31e3f6 >>> 0x18] << 0x18 | _0x4c6ea2[_0x3ee554 >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x2ba47f >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x222512 & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x3ee554 = (_0x4c6ea2[_0x3ee554 >>> 0x18] << 0x18 | _0x4c6ea2[_0x2ba47f >>> 0x10 & 0xff] << 0x10 | _0x4c6ea2[_0x222512 >>> 0x8 & 0xff] << 0x8 | _0x4c6ea2[_0x31e3f6 & 0xff]) ^ _0x4ecbb0[_0x271595++], _0x4e7234[_0x16d2a8] = _0x326abd, _0x4e7234[_0x16d2a8 + 0x1] = _0x3d2e7a, _0x4e7234[_0x16d2a8 + 0x2] = _0x2d3dda, _0x4e7234[_0x16d2a8 + 0x3] = _0x3ee554;            },            'keySize': 0x8        });    _0x345107[_0x4fc7('0x6')] = _0x287c31[_0x4fc7('0x76')](_0x47a802);}());var _0x451d = ['enc', 'return\\x20(function()\\x20', 'salt', 'ciphertext', 'error', 'lib', 'info', 'console', 'trace', 'parse', 'toString', 'create', 'length', '{}.constructor(\\x22return\\x20this\\x22)(\\x20)', 'bind', 'Base64', 'constructor', 'warn', 'apply', 'Hex', 'CipherParams'];(function (_0x29ac2a, _0x451dcf) {    var _0x2c8f37 = function (_0x1b4803) {        while (--_0x1b4803) {            _0x29ac2a['push'](_0x29ac2a['shift']());        }    };    _0x2c8f37(++_0x451dcf);}(_0x451d, 0x113));var _0x2c8f = function (_0x29ac2a, _0x451dcf) {    _0x29ac2a = _0x29ac2a - 0x0;    var _0x2c8f37 = _0x451d[_0x29ac2a];    return _0x2c8f37;};var CryptoJSAesJson = {    'stringify': function (_0x9cca12) {        var _0x1e989a = {'ct': _0x9cca12[_0x2c8f('0x1')][_0x2c8f('0x8')](CryptoJS[_0x2c8f('0x13')][_0x2c8f('0xd')])};        if (_0x9cca12['iv']) _0x1e989a['iv'] = _0x9cca12['iv'][_0x2c8f('0x8')]();        if (_0x9cca12[_0x2c8f('0x0')]) _0x1e989a['s'] = _0x9cca12[_0x2c8f('0x0')][_0x2c8f('0x8')]();        return JSON['stringify'](_0x1e989a)['replace'](/\\s/g, '');    }, 'parse': function (_0x589789) {        var _0x4b02ad = JSON['parse'](_0x589789),            _0xdd9a5b = CryptoJS[_0x2c8f('0x3')][_0x2c8f('0x12')][_0x2c8f('0x9')]({'ciphertext': CryptoJS[_0x2c8f('0x13')][_0x2c8f('0xd')]['parse'](_0x4b02ad['ct'])});        if (_0x4b02ad['iv']) _0xdd9a5b['iv'] = CryptoJS[_0x2c8f('0x13')][_0x2c8f('0x11')][_0x2c8f('0x7')](_0x4b02ad['iv']);        if (_0x4b02ad['s']) _0xdd9a5b[_0x2c8f('0x0')] = CryptoJS['enc']['Hex'][_0x2c8f('0x7')](_0x4b02ad['s']);        return _0xdd9a5b;    }};",
            "$Res2",
            ";",
            "$Res3",
            "`)"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$Result"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Result",
          "From": "\r\n",
          "To": "",
          "Result": "$Result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$Result"
        },
        {
          "Id": 14,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "watchnewslive",
      "Name": "watchnewslive Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "https://watchnewslive.tv/",
            "$Res2"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Accept::text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3::Accept-Language::vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7,fr;q=0.6,fr-FR;q=0.5::Connection::keep-alive::Upgrade-Insecure-Requests::1::User-Agent::Safari/537.36",
          "Result": "$Res3"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "'",
          "To": "\"",
          "Result": "$Res3"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "\n",
          "To": "",
          "Result": "$Res3"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "var .*?(?=var player)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res3",
          "Result": "$Res4"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "function.*?\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res3",
          "Result": "$Res5"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<=document.getElementById\\(\\\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res5",
          "Result": "$Res6"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res6",
            ">).*?(?=<\\/)"
          ],
          "Result": "$Res8"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "$Res8",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res3",
          "Result": "$Res7"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "document.getElementById(\"",
            "$Res6",
            "\").innerHTML"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\""
          ],
          "Result": "$Res7"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$Res5",
          "From": "$Res6",
          "To": "$Res7",
          "Result": "$Res5"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "(?<=function ).*?(?=\\()",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res5",
          "Result": "$Res8"
        },
        {
          "Id": 16,
          "Action": "CONCAT",
          "Targets": [
            "$Res4",
            "$Res5",
            "$Res8",
            "();"
          ],
          "Result": "$Res5"
        },
        {
          "Id": 17,
          "Action": "EVAL",
          "String": "$Res5",
          "Result": "$Res5"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "$Res5",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 19,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "watch.crichd",
      "Name": "watch.crichd.to Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "var locations.*?;",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "var len.*?(?=\\$\\(\\\\\\\"\\.play_action)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res2"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?:attr\\(\\\\\\\"src\\\\\\\".*?)(\\w+.*?)(?=\\))",
          "MatchId": "1",
          "GroupId": "1",
          "Target": "$Res",
          "Result": "$Res3"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            "$Res2",
            "$Res3",
            "\")"
          ],
          "Result": "$Link1"
        },
        {
          "Id": 9,
          "Action": "EVAL",
          "String": "$Link1",
          "Result": "$Link1"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"if(\\\"",
            "$Link1",
            "\\\".indexOf(\\\"http\\\")===0) encodeURI(\\\"",
            "$Link1",
            "\\\"); else 'http:' + encodeURI(\\\"",
            "$Link1",
            "\\\");\")"
          ],
          "Result": "$Link1"
        },
        {
          "Id": 11,
          "Action": "EVAL",
          "String": "$Link1",
          "Result": "$Link1"
        },
        {
          "Id": 12,
          "Action": "GET",
          "Link": "$Link1",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=<script>fid=\").*?(?=\";)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "http://www.freecast123.com/crichd.php?player=desktop&live=",
            "$Res1",
            "&vw=620&vh=490"
          ],
          "Result": "$Link2"
        },
        {
          "Id": 15,
          "Action": "GET",
          "Link": "$Link2",
          "Result": "$Res"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 17,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 18,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "var .*?(?=var playerElement)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "function \\w+(?:[^\\}]*)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "(?<=document.getElementById\\(\\\\\")\\w+",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res2"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res2",
            ">).*?(?=<)"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 23,
          "Action": "MATCH",
          "String": "$Res2",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res3"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "(?<=function )\\w+",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$function_name"
        },
        {
          "Id": 25,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"'",
            "$function_result",
            "'.replace(/document.*?(?=\\\\);)/gm,\\\"\\\\\\\"",
            "$Res3",
            "\\\\\\\"\\\")\")"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 26,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$function_result"
        },
        {
          "Id": 27,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "'",
          "To": "\"",
          "Result": "$function_result"
        },
        {
          "Id": 28,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "\"",
          "To": "\\\"",
          "Result": "$function_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            "$function_result",
            "$function_name",
            "()",
            "\")"
          ],
          "Result": "$result"
        },
        {
          "Id": 30,
          "Action": "EVAL",
          "String": "$result",
          "Result": "$result"
        },
        {
          "Id": 31,
          "Action": "CONCAT",
          "Targets": [
            "http:",
            "$result",
            " engineOptions=headers::Referer:",
            "$Link2",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 32,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "telerium",
      "Name": "telerium.tv Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::*",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\r",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$out_code"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "function reverse.*?\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$out_code",
          "Result": "$Res2"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "token=.*?\\)(?=,)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$out_code",
          "Result": "$Res3"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=,)(?:[^\\)]*)",
          "Default": "$Res3",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res3"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "token=",
            "$Res3"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "'",
          "To": "\\'",
          "Result": "$Res3"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?<=embed\\/).*(?=.html)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Link",
          "Result": "$Res4"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"var date = new Date(); date.setDate(date.getDate() + 1); date.setSeconds(0);",
            "'https://telerium.tv/streams/' + ",
            "$Res4",
            "+ '/' + date.getTime() + '.json'\")"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 9,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "Referer::",
            "$Link",
            "::User-Agent::*"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 10,
          "Action": "GET",
          "Link": "$Res4",
          "Headers": "$Headers",
          "Result": "$Res5"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('(",
            "$Res5",
            ").tokenurl')"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$Res6",
          "Result": "$Res6"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"if(\\\"",
            "$Res6",
            "\\\".indexOf(\\\"https://telerium.tv\\\")===0) encodeURI(\\\"",
            "$Res6",
            "\\\"); else 'https://telerium.tv' + encodeURI(\\\"",
            "$Res6",
            "\\\");\")"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$Res6",
          "Result": "$Res6"
        },
        {
          "Id": 16,
          "Action": "GET",
          "Link": "$Res6",
          "Headers": "$Headers",
          "Result": "$Res6"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "_.*?(?=\\[)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res7"
        },
        {
          "Id": 18,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "$Res7",
          "To": "$Res6",
          "Result": "$Res3"
        },
        {
          "Id": 19,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "function reverse(arr){ return arr.split(\\'\\').reverse().join(\\'\\')};",
            "$Res3",
            ";(",
            "$Res5",
            ").url + (token.includes(\\'token\\')?token:reverse(token))",
            "')"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 20,
          "Action": "EVAL",
          "String": "$Res7",
          "Result": "$Res7"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "eval('if(\\\"",
            "$Res7",
            "\\\".indexOf(\\\"http\\\")==-1){$Res7=\\\"http:\\\"+\\\"",
            "$Res7",
            "\\\"}')"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 22,
          "Action": "EVAL",
          "String": "$Res7",
          "Result": "$result"
        },
        {
          "Id": 37,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::*"
          ],
          "Result": "$result"
        },
        {
          "Id": 38,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "limetvv.com",
      "Name": "limetvv.com Parser",
      "Stages": [
        {
          "Id": 9,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "http.*?m3u8.*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 37,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 38,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "sports24",
      "Name": "sports24.club",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=iframe)(?:.*?src=\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "1",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Link1"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "eval('if(\\\"",
            "$Link1",
            "\\\".indexOf(\\\"http\\\")==-1){$Res7=\\\"http:\\\"+\\\"",
            "$Link1",
            "\\\"}')"
          ],
          "Result": "$Link1"
        },
        {
          "Id": 6,
          "Action": "EVAL",
          "String": "$Link1",
          "Result": "$Link1"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "Referer::",
            "$Link"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link1",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "atob(?:[^;]*);",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$var_result",
          "From": "'",
          "To": "\"",
          "Result": "$var_result"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i};var __=",
            "$var_result",
            ";if (__.indexOf(\"/\")===0 && __[1]!==\"/\"){__ = \"https://sports24.club\"+__} if(__.indexOf(\"https:\")===-1){__ = \"https:\"+__} __;')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link1",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 14,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "freecast123",
      "Name": "freecast123.com",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 17,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 18,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 19,
          "Action": "MATCH",
          "String": "var .*?(?=var playerElement)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 20,
          "Action": "MATCH",
          "String": "function \\w+(?:[^\\}]*)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 21,
          "Action": "MATCH",
          "String": "(?<=document.getElementById\\(\\\\\")\\w+",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res2"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res2",
            ">).*?(?=<)"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 23,
          "Action": "MATCH",
          "String": "$Res2",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res3"
        },
        {
          "Id": 24,
          "Action": "MATCH",
          "String": "(?<=function )\\w+",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$function_name"
        },
        {
          "Id": 25,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"'",
            "$function_result",
            "'.replace(/document.*?(?=\\\\);)/gm,\\\"\\\\\\\"",
            "$Res3",
            "\\\\\\\"\\\")\")"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 26,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$function_result"
        },
        {
          "Id": 27,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "'",
          "To": "\"",
          "Result": "$function_result"
        },
        {
          "Id": 28,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "\"",
          "To": "\\\"",
          "Result": "$function_result"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            "$function_result",
            "$function_name",
            "()",
            "\")"
          ],
          "Result": "$result"
        },
        {
          "Id": 30,
          "Action": "EVAL",
          "String": "$result",
          "Result": "$result"
        },
        {
          "Id": 31,
          "Action": "CONCAT",
          "Targets": [
            "http:",
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 32,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "buffstreams",
      "Name": "buffstreams.tv",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "pdettxt.*?(?=<\\/script>)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "zmid.*?(?=<\\/script>)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res2"
        },
        {
          "Id": 6,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            ";",
            "$Res2",
            ";'https://'+edm+'/sdembed?v='+zmid\")"
          ],
          "Result": "$iframe_link"
        },
        {
          "Id": 7,
          "Action": "EVAL",
          "String": "$iframe_link",
          "Result": "$iframe_link"
        },
        {
          "Id": 8,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            ";",
            "$Res2",
            "; 'pid::' + pid + '::ptxt::' + pdettxt\")"
          ],
          "Result": "$iframe_params"
        },
        {
          "Id": 9,
          "Action": "EVAL",
          "String": "$iframe_params",
          "Result": "$iframe_params"
        },
        {
          "Id": 10,
          "Action": "POST",
          "Link": "$iframe_link",
          "Headers": "User-Agent::Safari/537.36::origin::https://buffstreams.tv",
          "Params": "$iframe_params",
          "Result": "$Res3"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "\n",
          "To": "",
          "Result": "$Res3"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "'",
          "To": "\"",
          "Result": "$Res3"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res3"
        },
        {
          "Id": 14,
          "Action": "MATCH",
          "String": "(?<=<script>)(\\s)?.*var.*?eval.*?(?=<\\/script>)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res4"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "eval",
          "To": "",
          "Result": "$Res4"
        },
        {
          "Id": 19,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res4",
            "')"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "soureUrl.*?;",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 18,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "'",
          "To": "\"",
          "Result": "$Res4"
        },
        {
          "Id": 19,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i} ",
            "$Res4",
            " atob(soureUrl)",
            "')"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 20,
          "Action": "EVAL",
          "String": "$result_link",
          "Result": "$result_link"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "$result_link",
            " engineOptions=headers::Referer:https://www.plytv.me/::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 22,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "123ecast.com",
      "Name": "123ecast.com",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "(?<=source: )\\w+(?=\\(\\))",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_name"
        },
        {
          "Id": 6,
          "Action": "CONCAT",
          "Targets": [
            "function ",
            "$function_name",
            ".*?\\}"
          ],
          "Result": "$function_result"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "$function_result",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "var.*?(?=var playerElement)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\\\\\")([^\"]*)(?=\\\\\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res1",
            "$function_result",
            ";",
            "$function_name",
            "()')"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$result_link",
          "Result": "$result_link"
        },
        {
          "Id": 18,
          "Action": "FINAL",
          "Result": "$result_link"
        }
      ]
    },
    {
      "Match": "mixcasthd.com",
      "Name": "mixcasthd.com",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "(?<=source: )\\w+(?=\\(\\))",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_name"
        },
        {
          "Id": 6,
          "Action": "CONCAT",
          "Targets": [
            "function ",
            "$function_name",
            ".*?\\}"
          ],
          "Result": "$function_result"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "$function_result",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "var.*?(?=var playerElement)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\\\\\")([^\"]*)(?=\\\\\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res1",
            "$function_result",
            ";",
            "$function_name",
            "()')"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$result_link",
          "Result": "$result_link"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "$result_link",
            " engineOptions=headers::Referer:https://www.mixcasthd.com"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 18,
          "Action": "FINAL",
          "Result": "$result_link"
        }
      ]
    },
    {
      "Match": "totalhdsport.xyz",
      "Name": "totalhdsport.xyz Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "wigistream.to",
      "Name": "wigistream.to Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "</script>",
          "To": "@",
          "Result": "$Res1"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "function\\(p,a,c,k,e,d\\)(?:[^@]*)\\{\\}\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res1",
          "Result": "$code"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"eval(",
            "$code",
            ")\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 14,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$result",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 16,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    }
  ]
}

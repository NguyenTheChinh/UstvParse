{
  "Version": "1.00",
  "Rules": [
    {
      "Match": "123tv",
      "Name": "123tvnow 123tv.live parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.128 Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "const _0x.*?(?=var options)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res1"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "var",
          "To": ";var",
          "Result": "$Res1"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\"",
          "To": "'",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "(?<=reverse\\(\\).join\\(''\\);\\};;var ).*?(?=\\=)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$function_name"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "CryptoJS=function(h,r){var k={},l=k.lib={},n=function(){},f=l.Base={extend:function(a){n.prototype=this;var b=new n;a&&b.mixIn(a);b.hasOwnProperty(\\\"init\\\")||(b.init=function(){b.$super.init.apply(this,arguments)});b.init.prototype=b;b.$super=this;return b},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);a.hasOwnProperty(\\\"toString\\\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},j=l.WordArray=f.extend({init:function(a,b){a=this.words=a||[];this.sigBytes=b!=r?b:4*a.length},toString:function(a){return(a||s).stringify(this)},concat:function(a){var b=this.words,d=a.words,c=this.sigBytes;a=a.sigBytes;this.clamp();if(c%4)for(var e=0;e<a;e++)b[c+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((c+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)b[c+e>>>2]=d[e>>>2];else b.push.apply(b,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,b=this.sigBytes;a[b>>>2]&=4294967295<<32-8*(b%4);a.length=h.ceil(b/4)},clone:function(){var a=f.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var b=[],d=0;d<a;d+=4)b.push(4294967296*h.random()|0);return new j.init(b,a)}}),m=k.enc={},s=m.Hex={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++){var e=b[c>>>2]>>>24-8*(c%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\\\"\\\")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c+=2)d[c>>>3]|=parseInt(a.substr(c,2),16)<<24-4*(c%8);return new j.init(d,b/2)}},p=m.Latin1={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++)d.push(String.fromCharCode(b[c>>>2]>>>24-8*(c%4)&255));return d.join(\\\"\\\")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c++)d[c>>>2]|=(a.charCodeAt(c)&255)<<24-8*(c%4);return new j.init(d,b)}},t=m.Utf8={stringify:function(a){try{return decodeURIComponent(escape(p.stringify(a)))}catch(b){throw Error(\\\"Malformed UTF-8 data\\\");}},parse:function(a){return p.parse(unescape(encodeURIComponent(a)))}},q=l.BufferedBlockAlgorithm=f.extend({reset:function(){this._data=new j.init;this._nDataBytes=0},_append:function(a){\\\"string\\\"==typeof a&&(a=t.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var b=this._data,d=b.words,c=b.sigBytes,e=this.blockSize,f=c/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;c=h.min(4*a,c);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);b.sigBytes-=c}return new j.init(g,c)},clone:function(){var a=f.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:f.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,d){return(new a.init(d)).finalize(b)}},_createHmacHelper:function(a){return function(b,d){return(new u.HMAC.init(a,d)).finalize(b)}}});var u=k.algo={};return k}(Math);",
            "(function(g){var a=CryptoJS,f=a.lib,e=f.Base,h=f.WordArray,a=a.x64={};a.Word=e.extend({init:function(b,c){this.high=b;this.low=c}});a.WordArray=e.extend({init:function(b,c){b=this.words=b||[];this.sigBytes=c!=g?c:8*b.length},toX32:function(){for(var b=this.words,c=b.length,a=[],d=0;d<c;d++){var e=b[d];a.push(e.high);a.push(e.low)}return h.create(a,this.sigBytes)},clone:function(){for(var b=e.clone.call(this),c=b.words=this.words.slice(0),a=c.length,d=0;d<a;d++)c[d]=c[d].clone();return b}});return 0}());",
            "(function(){var c = CryptoJS,k = c.enc.Utf8;c.algo.HMAC = c.lib.Base.extend({init: function(a, b) {a = this._hasher = new a.init;\\\"string\\\"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++)h[d]^=1549556828,j[d]^=909522486;f.sigBytes=g.sigBytes=e;this.reset()},reset:function(){var a=this._hasher;a.reset();a.update(this._iKey)},update: function(a) {this._hasher.update(a);return this},finalize: function(a) {var b = this._hasher;a = b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a))}});return 0;}());",
            "(function(){function a(){return d.create.apply(d,arguments)}for(var n=CryptoJS,r=n.lib.Hasher,e=n.x64,d=e.Word,T=e.WordArray,e=n.algo,ea=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),a(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),a(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],v=[],w=0;80>w;w++)v[w]=a();e=e.SHA512=r.extend({_doReset:function(){this._hash=new T.init([new d.init(1779033703,4089235720),new d.init(3144134277,2227873595),new d.init(1013904242,4271175723),new d.init(2773480762,1595750129),new d.init(1359893119,2917565137),new d.init(2600822924,725511199),new d.init(528734635,4215389547),new d.init(1541459225,327033209)])},_doProcessBlock:function(a,d){for(var f=this._hash.words,F=f[0],e=f[1],n=f[2],r=f[3],G=f[4],H=f[5],I=f[6],f=f[7],w=F.high,J=F.low,X=e.high,K=e.low,Y=n.high,L=n.low,Z=r.high,M=r.low,$=G.high,N=G.low,aa=H.high,O=H.low,ba=I.high,P=I.low,ca=f.high,Q=f.low,k=w,g=J,z=X,x=K,A=Y,y=L,U=Z,B=M,l=$,h=N,R=aa,C=O,S=ba,D=P,V=ca,E=Q,m=0;80>m;m++){var s=v[m];if(16>m)var j=s.high=a[d+2*m]|0,b=s.low=a[d+2*m+1]|0;else{var j=v[m-15],b=j.high,p=j.low,j=(b>>>1|p<<31)^(b>>>8|p<<24)^b>>>7,p=(p>>>1|b<<31)^(p>>>8|b<<24)^(p>>>7|b<<25),u=v[m-2],b=u.high,c=u.low,u=(b>>>19|c<<13)^(b<<3|c>>>29)^b>>>6,c=(c>>>19|b<<13)^(c<<3|b>>>29)^(c>>>6|b<<26),b=v[m-7],W=b.high,t=v[m-16],q=t.high,t=t.low,b=p+b.low,j=j+W+(b>>>0<p>>>0?1:0),b=b+c,j=j+u+(b>>>0<c>>>0?1:0),b=b+t,j=j+q+(b>>>0<t>>>0?1:0);s.high=j;s.low=b}var W=l&R^~l&S,t=h&C^~h&D,s=k&z^k&A^z&A,T=g&x^g&y^x&y,p=(k>>>28|g<<4)^(k<<30|g>>>2)^(k<<25|g>>>7),u=(g>>>28|k<<4)^(g<<30|k>>>2)^(g<<25|k>>>7),c=ea[m],fa=c.high,da=c.low,c=E+((h>>>14|l<<18)^(h>>>18|l<<14)^(h<<23|l>>>9)),q=V+((l>>>14|h<<18)^(l>>>18|h<<14)^(l<<23|h>>>9))+(c>>>0<E>>>0?1:0),c=c+t,q=q+W+(c>>>0<t>>>0?1:0),c=c+da,q=q+fa+(c>>>0<da>>>0?1:0),c=c+b,q=q+j+(c>>>0<b>>>0?1:0),b=u+T,s=p+s+(b>>>0<u>>>0?1:0),V=S,E=D,S=R,D=C,R=l,C=h,h=B+c|0,l=U+q+(h>>>0<B>>>0?1:0)|0,U=A,B=y,A=z,y=x,z=k,x=g,g=c+b|0,k=q+s+(g>>>0<c>>>0?1:0)|0}J=F.low=J+g;F.high=w+k+(J>>>0<g>>>0?1:0);K=e.low=K+x;e.high=X+z+(K>>>0<x>>>0?1:0);L=n.low=L+y;n.high=Y+A+(L>>>0<y>>>0?1:0);M=r.low=M+B;r.high=Z+U+(M>>>0<B>>>0?1:0);N=G.low=N+h;G.high=$+l+(N>>>0<h>>>0?1:0);O=H.low=O+C;H.high=aa+R+(O>>>0<C>>>0?1:0);P=I.low=P+D;I.high=ba+S+(P>>>0<D>>>0?1:0);Q=f.low=Q+E;f.high=ca+V+(Q>>>0<E>>>0?1:0)},_doFinalize:function(){var a=this._data,d=a.words,f=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+128>>>10<<5)+30]=Math.floor(f/4294967296);d[(e+128>>>10<<5)+31]=f;a.sigBytes=4*d.length;this._process();return this._hash.toX32()},clone:function(){var a=r.clone.call(this);a._hash=this._hash.clone();return a},blockSize:32});n.SHA512=r._createHelper(e);n.HmacSHA512=r._createHmacHelper(e);return 0;}());",
            "(function(){var b=CryptoJS,a=b.lib,d=a.Base,m=a.WordArray,a=b.algo,q=a.HMAC,l=a.PBKDF2=d.extend({cfg:d.extend({keySize:4,hasher:a.SHA1,iterations:1}),init:function(a){this.cfg=this.cfg.extend(a)},compute:function(a,b){for(var c=this.cfg,f=q.create(c.hasher,a),g=m.create(),d=m.create([1]),l=g.words,r=d.words,n=c.keySize,c=c.iterations;l.length<n;){var h=f.update(b).finalize(d);f.reset();for(var j=h.words,s=j.length,k=h,p=1;p<c;p++){k=f.finalize(k);f.reset();for(var t=k.words,e=0;e<s;e++)j[e]^=t[e]}g.concat(h);r[0]++}g.sigBytes=4*n;return g}});b.PBKDF2=function(a,b,c){return l.create(c).compute(a,b)};return 0;}());",
            "(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\\\"\\\")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"};return 0}());",
            "CryptoJS.lib.Cipher || function(u) { var g = CryptoJS, f = g.lib, k = f.Base, l = f.WordArray, q = f.BufferedBlockAlgorithm, r = g.enc.Base64, v = g.algo.EvpKDF, n = f.Cipher = q.extend({ cfg: k.extend(), createEncryptor: function(a, b) { return this.create(this._ENC_XFORM_MODE, a, b) }, createDecryptor: function(a, b) { return this.create(this._DEC_XFORM_MODE, a, b) }, init: function(a, b, c) { this.cfg = this.cfg.extend(c); this._xformMode = a; this._key = b; this.reset() }, reset: function() { q.reset.call(this); this._doReset() }, process: function(a) { this._append(a); return this._process() }, finalize: function(a) { a && this._append(a); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function(a) { return { encrypt: function(b, c, d) { return (\\\"string\\\" == typeof c ? s : j).encrypt(a, b, c, d) }, decrypt: function(b, c, d) { return (\\\"string\\\" == typeof c ? s : j).decrypt(a, b, c, d) } } } }); f.StreamCipher = n.extend({ _doFinalize: function() { return this._process(!0) }, blockSize: 1 }); var m = g.mode = {}, t = function(a, b, c) { var d = this._iv; d ? this._iv = u : d = this._prevBlock; for (var e = 0; e < c; e++) a[b + e] ^= d[e] }, h = (f.BlockCipherMode = k.extend({ createEncryptor: function(a, b) { return this.Encryptor.create(a, b) }, createDecryptor: function(a, b) { return this.Decryptor.create(a, b) }, init: function(a, b) { this._cipher = a; this._iv = b } })).extend(); h.Encryptor = h.extend({ processBlock: function(a, b) { var c = this._cipher, d = c.blockSize; t.call(this, a, b, d); c.encryptBlock(a, b); this._prevBlock = a.slice(b, b + d) } }); h.Decryptor = h.extend({ processBlock: function(a, b) { var c = this._cipher, d = c.blockSize, e = a.slice(b, b + d); c.decryptBlock(a, b); t.call(this, a, b, d); this._prevBlock = e } }); m = m.CBC = h; h = (g.pad = {}).Pkcs7 = { pad: function(a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, e = [], f = 0; f < c; f += 4) e.push(d); c = l.create(e, c); a.concat(c) }, unpad: function(a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; f.BlockCipher = n.extend({ cfg: n.cfg.extend({ mode: m, padding: h }), reset: function() { n.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a, this, b && b.words) }, _doProcessBlock: function(a, b) { this._mode.processBlock(a, b) }, _doFinalize: function() { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4 }); var p = f.CipherParams = k.extend({ init: function(a) { this.mixIn(a) }, toString: function(a) { return (a || this.formatter).stringify(this) } }), m = (g.format = {}).OpenSSL = { stringify: function(a) { var b = a.ciphertext; a = a.salt; return (a ? l.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r) }, parse: function(a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = l.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return p.create({ ciphertext: a, salt: c }) } }, j = f.SerializableCipher = k.extend({ cfg: k.extend({ format: m }), encrypt: function(a, b, c, d) { d = this.cfg.extend(d); var e = a.createEncryptor(c, d); b = e.finalize(b); e = e.cfg; return p.create({ ciphertext: b, key: c, iv: e.iv, algorithm: a, mode: e.mode, padding: e.padding, blockSize: a.blockSize, formatter: d.format }) }, decrypt: function(a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function(a, b) { return \\\"string\\\" == typeof a ? b.parse(a, this) : a } }), g = (g.kdf = {}).OpenSSL = { execute: function(a, b, c, d) { d || (d = l.random(8)); a = v.create({ keySize: b + c }).compute(a, d); c = l.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return p.create({ key: a, iv: c, salt: d }) } }, s = f.PasswordBasedCipher = j.extend({ cfg: j.cfg.extend({ kdf: g }), encrypt: function(a, b, c, d) { d = this.cfg.extend(d); c = d.kdf.execute(c, a.keySize, a.ivSize); d.iv = c.iv; a = j.encrypt.call(this, a, b, c.key, d); a.mixIn(c); return a }, decrypt: function(a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); c = d.kdf.execute(c, a.keySize, a.ivSize, b.salt); d.iv = c.iv; return j.decrypt.call(this, a, b, c.key, d) } });return 0;}();",
            "(function(){for(var q=CryptoJS,x=q.lib.BlockCipher,r=q.algo,j=[],y=[],z=[],A=[],B=[],C=[],s=[],u=[],v=[],w=[],g=[],k=0;256>k;k++)g[k]=128>k?k<<1:k<<1^283;for(var n=0,l=0,k=0;256>k;k++){var f=l^l<<1^l<<2^l<<3^l<<4,f=f>>>8^f&255^99;j[n]=f;y[f]=n;var t=g[n],D=g[t],E=g[D],b=257*g[f]^16843008*f;z[n]=b<<24|b>>>8;A[n]=b<<16|b>>>16;B[n]=b<<8|b>>>24;C[n]=b;b=16843009*E^65537*D^257*t^16843008*n;s[f]=b<<24|b>>>8;u[f]=b<<16|b>>>16;v[f]=b<<8|b>>>24;w[f]=b;n?(n=t^g[g[g[E^t]]],l^=g[g[l]]):n=l=1}var F=[0,1,2,4,8,16,32,64,128,27,54],r=r.AES=x.extend({_doReset:function(){for(var c=this._key,e=c.words,a=c.sigBytes/4,c=4*((this._nRounds=a+6)+1),b=this._keySchedule=[],h=0;h<c;h++)if(h<a)b[h]=e[h];else{var d=b[h-1];h%a?6<a&&4==h%a&&(d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255]):(d=d<<8|d>>>24,d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255],d^=F[h/a|0]<<24);b[h]=b[h-a]^d}e=this._invKeySchedule=[];for(a=0;a<c;a++)h=c-a,d=a%4?b[h]:b[h-4],e[a]=4>a||4>=h?d:s[j[d>>>24]]^u[j[d>>>16&255]]^v[j[d>>>8&255]]^w[j[d&255]]},encryptBlock:function(c,e){this._doCryptBlock(c,e,this._keySchedule,z,A,B,C,j)},decryptBlock:function(c,e){var a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;this._doCryptBlock(c,e,this._invKeySchedule,s,u,v,w,y);a=c[e+1];c[e+1]=c[e+3];c[e+3]=a},_doCryptBlock:function(c,e,a,b,h,d,j,m){for(var n=this._nRounds,f=c[e]^a[0],g=c[e+1]^a[1],k=c[e+2]^a[2],p=c[e+3]^a[3],l=4,t=1;t<n;t++)var q=b[f>>>24]^h[g>>>16&255]^d[k>>>8&255]^j[p&255]^a[l++],r=b[g>>>24]^h[k>>>16&255]^d[p>>>8&255]^j[f&255]^a[l++],s=b[k>>>24]^h[p>>>16&255]^d[f>>>8&255]^j[g&255]^a[l++],p=b[p>>>24]^h[f>>>16&255]^d[g>>>8&255]^j[k&255]^a[l++],f=q,g=r,k=s;q=(m[f>>>24]<<24|m[g>>>16&255]<<16|m[k>>>8&255]<<8|m[p&255])^a[l++];r=(m[g>>>24]<<24|m[k>>>16&255]<<16|m[p>>>8&255]<<8|m[f&255])^a[l++];s=(m[k>>>24]<<24|m[p>>>16&255]<<16|m[f>>>8&255]<<8|m[g&255])^a[l++];p=(m[p>>>24]<<24|m[f>>>16&255]<<16|m[g>>>8&255]<<8|m[k&255])^a[l++];c[e]=q;c[e+1]=r;c[e+2]=s;c[e+3]=p},keySize:8});q.AES=x._createHelper(r); return 0;}());",
            "function decode(r,t){var e=JSON.parse(CryptoJS.enc.Utf8.stringify(CryptoJS.enc.Base64.parse(r))),o=CryptoJS.enc.Hex.parse(e.salt),p=CryptoJS.enc.Hex.parse(e.iv),a=e.ciphertext,S=parseInt(e.iterations);S<=0&&(S=999);var i=256/4,n=CryptoJS.PBKDF2(t,o,{hasher:CryptoJS.algo.SHA512,keySize:i/8,iterations:S});return CryptoJS.AES.decrypt(a,n,{mode:CryptoJS.mode.CBC,iv:p}).toString(CryptoJS.enc.Utf8); return 0;}",
            ";var E = {d: decode};",
            "$Res1",
            ";",
            "$function_name",
            "();\")"
          ],
          "Result": "$Res5"
        },
        {
          "Id": 8,
          "Action": "EVAL",
          "String": "$Res5",
          "Result": "$o_Link"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "Origin::",
            "$Link",
            "::Referer::",
            "$Link",
            "::User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.128 Safari/537.36"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 10,
          "Action": "GET",
          "Link": "$o_Link",
          "Headers": "$Headers",
          "Result": "$Res7"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$Res7",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res7"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res7",
            "[0].file\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 13,
          "Action": "EVAL",
          "String": "$Res7",
          "Result": "$Res8"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "$Res8",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 15,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "liveonlinetv",
      "Name": "liveonlinetv247 liveonlinetv.org Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=<iframe src=\\\").*?(?=\\\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$Link",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval('result=\\\"",
            "$Res1",
            "\\\";if(\\\"",
            "$Res1",
            "\\\".indexOf(\\\"http\\\")==-1){result=new URL(\\\"",
            "$Link",
            "\\\").origin+\\\"",
            "$Res1",
            "\\\"} result;')"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$Res2",
          "Result": "$Res1"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res1",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "(?<=<script>)var.*?forEach(?:.*)\\} \\);",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=var ).*?(?= =)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "$Res1",
            ";",
            "$Res2",
            ";"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 10,
          "Action": "EVAL",
          "String": "$Res3",
          "Result": "$Res4"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res4",
          "Result": "$result"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/9.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "rocketmediaworld",
      "Name": "rocketmediaworld Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "https:",
            "$result1"
          ],
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 19,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "ustvgo",
      "Name": "ustvgo Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "eval('if(\\\"",
            "$Res2",
            "\\\".indexOf(\\\"http\\\")==-1){$Res2=new URL(\\\"",
            "$Link",
            "\\\").origin+\\\"",
            "$Res2",
            "\\\"}')"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "EVAL",
          "String": "$Res2",
          "Result": "$Res2"
        },
        {
          "Id": 6,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "Accept::text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3::Accept-Language::vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7,fr;q=0.6,fr-FR;q=0.5::Connection::keep-alive::Upgrade-Insecure-Requests::1::User-Agent::Safari/537.36::Referer::https://ustv247.tv/",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 8,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\r",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=InitPlayer)(?:.*?url: \")(.*?)(?=\")",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<=InitPlayer)(?:.*?stream: ')(.*?)(?=')",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$Res1",
          "Result": "$Res3"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('if(\\\"",
            "$Res2",
            "\\\".indexOf(\\\"http\\\")==-1){$Res2=new URL(\\\"",
            "$Link",
            "\\\").origin+\\\"",
            "$Res2",
            "\\\"}')"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "stream::",
            "$Res3"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 13,
          "Action": "EVAL",
          "String": "$Res2",
          "Result": "$Res2"
        },
        {
          "Id": 14,
          "Action": "POST",
          "Link": "$Res2",
          "Headers": "User-Agent::Safari/537.36::Referer::https://ustvgo.tv/clappr.php::Content-Type::text/plain",
          "Params": "$Res3",
          "Result": "$Result"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$Result"
        },
        {
          "Id": 16,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "streamlive.to",
      "Name": "StreamLive Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "function(?:[^\\}]*)\"m\",\"3\",\"u\",\"8\"(?:[^\\}]*?)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=function)(?:.*?)\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$func_name"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "(?<=\\+ )(.*)(?=.join)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$var_name"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "var ",
            "$var_name",
            "(?:[^;]*);"
          ],
          "Result": "$var_regex"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "$var_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$var_result",
            "$function_result",
            "$func_name",
            ";",
            "')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\r",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 15,
          "Action": "REPLACE",
          "In": "$eval_link",
          "From": "\n",
          "To": "",
          "Result": "$eval_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result1"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "https:",
            "$result1"
          ],
          "Result": "$result"
        },
        {
          "Id": 18,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 19,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "livenewsmag",
      "Name": "livenewsmag.com Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "Referer::http://www.livenewsmag.com/",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "usnewslive",
      "Name": "usnewslive Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "REPLACE",
          "In": "$Link",
          "From": "usnewslive",
          "To": "ustv247",
          "Result": "$Link"
        },
        {
          "Id": 2,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "https://ustv247.tv",
            "$Res2"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 6,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "User-Agent::Safari/537.36::Referer::https://ustv247.tv/",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 8,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=stream: \\\").*?(?=\\\"\\})",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "stream::",
            "$Res2"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 11,
          "Action": "POST",
          "Link": "https://ustv247.tv/data.php",
          "Headers": "User-Agent::Safari/537.36::content-type::application/x-www-form-urlencoded; charset=UTF-8",
          "Params": "$Res3",
          "Result": "$Result"
        },
        {
          "Id": 12,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$Result"
        },
        {
          "Id": 13,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "ustv247",
      "Name": "ustv247 Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "https://ustv247.tv",
            "$Res2"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "User-Agent::Safari/537.36::Referer::https://ustv247.tv/",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=stream: \\\").*?(?=\\\"\\})",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "stream::",
            "$Res2"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 10,
          "Action": "POST",
          "Link": "https://ustv247.tv/data.php",
          "Headers": "User-Agent::Safari/537.36::content-type::application/x-www-form-urlencoded; charset=UTF-8",
          "Params": "$Res3",
          "Result": "$Result"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$Result"
        },
        {
          "Id": 12,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "watchnewslive",
      "Name": "watchnewslive Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res1"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "(?<=iframe src=\").*?(?=\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "https://ustv247.tv",
            "$Res2"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Res2",
          "Headers": "User-Agent::Safari/537.36::Referer::https://ustv247.tv/",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "\n",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "'",
          "To": "\"",
          "Result": "$Res1"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=stream: \\\").*?(?=\\\"\\})",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$Res2"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "stream::",
            "$Res2"
          ],
          "Result": "$Res3"
        },
        {
          "Id": 10,
          "Action": "POST",
          "Link": "https://ustv247.tv/data.php",
          "Headers": "User-Agent::Safari/537.36::content-type::application/x-www-form-urlencoded; charset=UTF-8",
          "Params": "$Res3",
          "Result": "$Result"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "$Result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$Result"
        },
        {
          "Id": 12,
          "Action": "FINAL",
          "Result": "$Result"
        }
      ]
    },
    {
      "Match": "telerium",
      "Name": "telerium.tv Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\r",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$out_code"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "function reverse.*?\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$out_code",
          "Result": "$Res2"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "token=.*?\\)(?=,)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$out_code",
          "Result": "$Res3"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "'",
          "To": "\\'",
          "Result": "$Res3"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "(?<=embed\\/).*(?=.html)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Link",
          "Result": "$Res4"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"var date = new Date(); date.setDate(date.getDate() + 1); date.setSeconds(0);",
            "'https://telerium.tv/streams/' + ",
            "$Res4",
            "+ '/' + date.getTime() + '.json'\")"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 10,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "Referer::",
            "$Link",
            "::User-Agent::Safari/537.36"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 12,
          "Action": "GET",
          "Link": "$Res4",
          "Headers": "$Headers",
          "Result": "$Res5"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "eval('(",
            "$Res5",
            ").tokenurl')"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 14,
          "Action": "EVAL",
          "String": "$Res6",
          "Result": "$Res6"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"if(\\\"",
            "$Res6",
            "\\\".indexOf(\\\"https://telerium.tv\\\")===0) encodeURI(\\\"",
            "$Res6",
            "\\\"); else 'https://telerium.tv' + encodeURI(\\\"",
            "$Res6",
            "\\\");\")"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$Res6",
          "Result": "$Res6"
        },
        {
          "Id": 17,
          "Action": "GET",
          "Link": "$Res6",
          "Headers": "$Headers",
          "Result": "$Res6"
        },
        {
          "Id": 18,
          "Action": "MATCH",
          "String": "_.*?(?=\\[)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res7"
        },
        {
          "Id": 19,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "$Res7",
          "To": "$Res6",
          "Result": "$Res3"
        },
        {
          "Id": 20,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "function reverse(arr){ return arr.split(\\'\\').reverse().join(\\'\\')};",
            "$Res3",
            ";(",
            "$Res5",
            ").url + token",
            "')"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 21,
          "Action": "EVAL",
          "String": "$Res7",
          "Result": "$Res7"
        },
        {
          "Id": 22,
          "Action": "CONCAT",
          "Targets": [
            "eval('if(\\\"",
            "$Res7",
            "\\\".indexOf(\\\"http\\\")==-1){$Res7=\\\"http:\\\"+\\\"",
            "$Res7",
            "\\\"}')"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 23,
          "Action": "EVAL",
          "String": "$Res7",
          "Result": "$result"
        },
        {
          "Id": 24,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 25,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "sports24",
      "Name": "sports24.stream",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Mozilla/5.0(Macintosh)",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "MATCH",
          "String": "(?<=iframe)(.*?embed-responsive-item)(?:.*?src=\")([^\"]*)(?=\")",
          "MatchId": "0",
          "GroupId": "2",
          "Default": "$Link",
          "Target": "$Res",
          "Result": "$Link1"
        },
        {
          "Id": 5,
          "Action": "CONCAT",
          "Targets": [
            "eval('$Res7=\\\"",
            "$Link1",
            "\\\"; if($Res7.indexOf(\\\"https\\\")==-1){$Res7=\\\"https:\\\"+\\\"",
            "$Link1",
            "\\\"} $Res7",
            "')"
          ],
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "EVAL",
          "String": "$Res1",
          "Result": "$Link1"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "User-Agent::Mozilla/5.0(Macintosh)::Referer::",
            "$Link"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 8,
          "Action": "GET",
          "Link": "$Link1",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "atob(?:[^;]*);|(?<=source: ).*?(?=,)|(?<=var hls = )(\".*?\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$var_result"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$var_result",
          "From": "'",
          "To": "\"",
          "Result": "$var_result"
        },
        {
          "Id": 11,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i};var __=",
            "$var_result",
            ";if (__.indexOf(\"/\")===0 && __[1]!==\"/\"){__ = \"https://sports24.club\"+__} if(__.indexOf(\"https:\")===-1){__ = \"https:\"+__} __;')"
          ],
          "Result": "$eval_link"
        },
        {
          "Id": 12,
          "Action": "EVAL",
          "String": "$eval_link",
          "Result": "$result"
        },
        {
          "Id": 13,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link1",
            "::user_agent::Mozilla/5.0(Macintosh)"
          ],
          "Result": "$result"
        },
        {
          "Id": 14,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "freecast123",
      "Name": "freecast123.com",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 10,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "var .*?(?=var playerElement)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "function \\w+(?:[^\\}]*)\\}",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=document.getElementById\\(\\\\\")\\w+",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res2"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res2",
            ">).*?(?=<)"
          ],
          "Result": "$Res2"
        },
        {
          "Id": 15,
          "Action": "MATCH",
          "String": "$Res2",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res3"
        },
        {
          "Id": 16,
          "Action": "MATCH",
          "String": "(?<=function )\\w+",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$function_name"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"'",
            "$function_result",
            "'.replace(/document.*?(?=\\\\);)/gm,\\\"\\\\\\\"",
            "$Res3",
            "\\\\\\\"\\\")\")"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 18,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "'",
          "To": "\"",
          "Result": "$function_result"
        },
        {
          "Id": 20,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "\"",
          "To": "\\\"",
          "Result": "$function_result"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            "$function_result",
            "$function_name",
            "()",
            "\")"
          ],
          "Result": "$result"
        },
        {
          "Id": 22,
          "Action": "EVAL",
          "String": "$result",
          "Result": "$result"
        },
        {
          "Id": 23,
          "Action": "CONCAT",
          "Targets": [
            "eval('result=\\\"",
            "$result",
            "\\\";if(\\\"",
            "$result",
            "\\\".indexOf(\\\"http\\\")==-1){result=\\\"http:\\\"+\\\"",
            "$result",
            "\\\"};result;",
            "')"
          ],
          "Result": "$result"
        },
        {
          "Id": 24,
          "Action": "EVAL",
          "String": "$result",
          "Result": "$result"
        },
        {
          "Id": 25,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 26,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "buffstreams",
      "Name": "buffstreams.tv",
      "Player": "exo",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "<script.*?(https:\\/\\/cdn.tvply.me.*?)(?=\\\\\")",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$Res",
          "Result": "$script_link"
        },
        {
          "Id": 6,
          "Action": "GET",
          "Link": "$script_link",
          "Result": "$script"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "const e=.*?(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$script",
          "Result": "$request_script"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$request_script",
          "From": "\"",
          "To": "\\\"",
          "Result": "$request_script"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "(<script>pdett.*?)(<script>.*?)(?:<script.*?src=\\\\\"",
            "$script_link",
            "\\\\\")"
          ],
          "Result": "$match_variables"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "$match_variables",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "$match_variables",
          "MatchId": "0",
          "GroupId": "2",
          "Target": "$Res",
          "Result": "$Res2"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "<script>",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "</script>",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "<script>",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "</script>",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            ";",
            "$Res2",
            ";",
            "$request_script",
            "; e;\")"
          ],
          "Result": "$iframe_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$iframe_link",
          "Result": "$iframe_link"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            ";",
            "$Res2",
            ";",
            "$request_script",
            "; var keys = Object.keys(t), iframParams=[]; for(var i=0; i<keys.length; i++){ iframParams.push(keys[i].toString()+'::'+t[keys[i]]) } iframParams.join('::')\")"
          ],
          "Result": "$iframe_params"
        },
        {
          "Id": 18,
          "Action": "EVAL",
          "String": "$iframe_params",
          "Result": "$iframe_params"
        },
        {
          "Id": 19,
          "Action": "POST",
          "Link": "$iframe_link",
          "Headers": "User-Agent::Safari/537.36::Origin::https://buffstreams.tv::Referer::https://buffstreams.tv",
          "Params": "$iframe_params",
          "Result": "$Res3"
        },
        {
          "Id": 20,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "\n",
          "To": "",
          "Result": "$Res3"
        },
        {
          "Id": 21,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "'",
          "To": "\\'",
          "Result": "$Res3"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "(?<=<script>)(\\s)?.*let.*?eval.*?(?=<\\/script>)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res4"
        },
        {
          "Id": 23,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "eval",
          "To": "",
          "Result": "$Res4"
        },
        {
          "Id": 24,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res4",
            "')"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 25,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 26,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 27,
          "Action": "MATCH",
          "String": "playUrl|(?<=file: window\\.atob\\().*?(?=\\))",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res4",
          "Result": "$url_var"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "$url_var",
            "(\\s)?.*?(?=;)"
          ],
          "Result": "$match_regex"
        },
        {
          "Id": 27,
          "Action": "MATCH",
          "String": "$match_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 28,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "'",
          "To": "\"",
          "Result": "$Res4"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i} ",
            "$Res4",
            "; atob(",
            "$url_var",
            ")",
            "')"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 30,
          "Action": "EVAL",
          "String": "$result_link",
          "Result": "$result_link"
        },
        {
          "Id": 31,
          "Action": "CONCAT",
          "Targets": [
            "$result_link",
            " engineOptions=headers::Referer:https://www.tvply.me/::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 32,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "totalhdsport.xyz",
      "Name": "totalhdsport.xyz Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 5,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "newslive",
      "Name": "www.newslive.com Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 5,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "wigistream.to",
      "Name": "wigistream.to Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 10,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "streammart",
      "Name": "xgey27gkukpm4q.streammart.club Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 7,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$result"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 10,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "castmax.net",
      "Name": "castmax.net Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "CryptoJS=function(h,r){var k={},l=k.lib={},n=function(){},f=l.Base={extend:function(a){n.prototype=this;var b=new n;a&&b.mixIn(a);b.hasOwnProperty(\\\"init\\\")||(b.init=function(){b.$super.init.apply(this,arguments)});b.init.prototype=b;b.$super=this;return b},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);a.hasOwnProperty(\\\"toString\\\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},j=l.WordArray=f.extend({init:function(a,b){a=this.words=a||[];this.sigBytes=b!=r?b:4*a.length},toString:function(a){return(a||s).stringify(this)},concat:function(a){var b=this.words,d=a.words,c=this.sigBytes;a=a.sigBytes;this.clamp();if(c%4)for(var e=0;e<a;e++)b[c+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((c+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)b[c+e>>>2]=d[e>>>2];else b.push.apply(b,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,b=this.sigBytes;a[b>>>2]&=4294967295<<32-8*(b%4);a.length=h.ceil(b/4)},clone:function(){var a=f.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var b=[],d=0;d<a;d+=4)b.push(4294967296*h.random()|0);return new j.init(b,a)}}),m=k.enc={},s=m.Hex={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++){var e=b[c>>>2]>>>24-8*(c%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\\\"\\\")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c+=2)d[c>>>3]|=parseInt(a.substr(c,2),16)<<24-4*(c%8);return new j.init(d,b/2)}},p=m.Latin1={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++)d.push(String.fromCharCode(b[c>>>2]>>>24-8*(c%4)&255));return d.join(\\\"\\\")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c++)d[c>>>2]|=(a.charCodeAt(c)&255)<<24-8*(c%4);return new j.init(d,b)}},t=m.Utf8={stringify:function(a){try{return decodeURIComponent(escape(p.stringify(a)))}catch(b){throw Error(\\\"Malformed UTF-8 data\\\");}},parse:function(a){return p.parse(unescape(encodeURIComponent(a)))}},q=l.BufferedBlockAlgorithm=f.extend({reset:function(){this._data=new j.init;this._nDataBytes=0},_append:function(a){\\\"string\\\"==typeof a&&(a=t.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var b=this._data,d=b.words,c=b.sigBytes,e=this.blockSize,f=c/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;c=h.min(4*a,c);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);b.sigBytes-=c}return new j.init(g,c)},clone:function(){var a=f.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:f.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,d){return(new a.init(d)).finalize(b)}},_createHmacHelper:function(a){return function(b,d){return(new u.HMAC.init(a,d)).finalize(b)}}});var u=k.algo={};return k}(Math);",
            "(function(g){var a=CryptoJS,f=a.lib,e=f.Base,h=f.WordArray,a=a.x64={};a.Word=e.extend({init:function(b,c){this.high=b;this.low=c}});a.WordArray=e.extend({init:function(b,c){b=this.words=b||[];this.sigBytes=c!=g?c:8*b.length},toX32:function(){for(var b=this.words,c=b.length,a=[],d=0;d<c;d++){var e=b[d];a.push(e.high);a.push(e.low)}return h.create(a,this.sigBytes)},clone:function(){for(var b=e.clone.call(this),c=b.words=this.words.slice(0),a=c.length,d=0;d<a;d++)c[d]=c[d].clone();return b}});return 0}());",
            "(function(){var c = CryptoJS,k = c.enc.Utf8;c.algo.HMAC = c.lib.Base.extend({init: function(a, b) {a = this._hasher = new a.init;\\\"string\\\"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++)h[d]^=1549556828,j[d]^=909522486;f.sigBytes=g.sigBytes=e;this.reset()},reset:function(){var a=this._hasher;a.reset();a.update(this._iKey)},update: function(a) {this._hasher.update(a);return this},finalize: function(a) {var b = this._hasher;a = b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a))}});return 0;}());",
            "(function(){function a(){return d.create.apply(d,arguments)}for(var n=CryptoJS,r=n.lib.Hasher,e=n.x64,d=e.Word,T=e.WordArray,e=n.algo,ea=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),a(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),a(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],v=[],w=0;80>w;w++)v[w]=a();e=e.SHA512=r.extend({_doReset:function(){this._hash=new T.init([new d.init(1779033703,4089235720),new d.init(3144134277,2227873595),new d.init(1013904242,4271175723),new d.init(2773480762,1595750129),new d.init(1359893119,2917565137),new d.init(2600822924,725511199),new d.init(528734635,4215389547),new d.init(1541459225,327033209)])},_doProcessBlock:function(a,d){for(var f=this._hash.words,F=f[0],e=f[1],n=f[2],r=f[3],G=f[4],H=f[5],I=f[6],f=f[7],w=F.high,J=F.low,X=e.high,K=e.low,Y=n.high,L=n.low,Z=r.high,M=r.low,$=G.high,N=G.low,aa=H.high,O=H.low,ba=I.high,P=I.low,ca=f.high,Q=f.low,k=w,g=J,z=X,x=K,A=Y,y=L,U=Z,B=M,l=$,h=N,R=aa,C=O,S=ba,D=P,V=ca,E=Q,m=0;80>m;m++){var s=v[m];if(16>m)var j=s.high=a[d+2*m]|0,b=s.low=a[d+2*m+1]|0;else{var j=v[m-15],b=j.high,p=j.low,j=(b>>>1|p<<31)^(b>>>8|p<<24)^b>>>7,p=(p>>>1|b<<31)^(p>>>8|b<<24)^(p>>>7|b<<25),u=v[m-2],b=u.high,c=u.low,u=(b>>>19|c<<13)^(b<<3|c>>>29)^b>>>6,c=(c>>>19|b<<13)^(c<<3|b>>>29)^(c>>>6|b<<26),b=v[m-7],W=b.high,t=v[m-16],q=t.high,t=t.low,b=p+b.low,j=j+W+(b>>>0<p>>>0?1:0),b=b+c,j=j+u+(b>>>0<c>>>0?1:0),b=b+t,j=j+q+(b>>>0<t>>>0?1:0);s.high=j;s.low=b}var W=l&R^~l&S,t=h&C^~h&D,s=k&z^k&A^z&A,T=g&x^g&y^x&y,p=(k>>>28|g<<4)^(k<<30|g>>>2)^(k<<25|g>>>7),u=(g>>>28|k<<4)^(g<<30|k>>>2)^(g<<25|k>>>7),c=ea[m],fa=c.high,da=c.low,c=E+((h>>>14|l<<18)^(h>>>18|l<<14)^(h<<23|l>>>9)),q=V+((l>>>14|h<<18)^(l>>>18|h<<14)^(l<<23|h>>>9))+(c>>>0<E>>>0?1:0),c=c+t,q=q+W+(c>>>0<t>>>0?1:0),c=c+da,q=q+fa+(c>>>0<da>>>0?1:0),c=c+b,q=q+j+(c>>>0<b>>>0?1:0),b=u+T,s=p+s+(b>>>0<u>>>0?1:0),V=S,E=D,S=R,D=C,R=l,C=h,h=B+c|0,l=U+q+(h>>>0<B>>>0?1:0)|0,U=A,B=y,A=z,y=x,z=k,x=g,g=c+b|0,k=q+s+(g>>>0<c>>>0?1:0)|0}J=F.low=J+g;F.high=w+k+(J>>>0<g>>>0?1:0);K=e.low=K+x;e.high=X+z+(K>>>0<x>>>0?1:0);L=n.low=L+y;n.high=Y+A+(L>>>0<y>>>0?1:0);M=r.low=M+B;r.high=Z+U+(M>>>0<B>>>0?1:0);N=G.low=N+h;G.high=$+l+(N>>>0<h>>>0?1:0);O=H.low=O+C;H.high=aa+R+(O>>>0<C>>>0?1:0);P=I.low=P+D;I.high=ba+S+(P>>>0<D>>>0?1:0);Q=f.low=Q+E;f.high=ca+V+(Q>>>0<E>>>0?1:0)},_doFinalize:function(){var a=this._data,d=a.words,f=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+128>>>10<<5)+30]=Math.floor(f/4294967296);d[(e+128>>>10<<5)+31]=f;a.sigBytes=4*d.length;this._process();return this._hash.toX32()},clone:function(){var a=r.clone.call(this);a._hash=this._hash.clone();return a},blockSize:32});n.SHA512=r._createHelper(e);n.HmacSHA512=r._createHmacHelper(e);return 0;}());",
            "(function(){var b=CryptoJS,a=b.lib,d=a.Base,m=a.WordArray,a=b.algo,q=a.HMAC,l=a.PBKDF2=d.extend({cfg:d.extend({keySize:4,hasher:a.SHA1,iterations:1}),init:function(a){this.cfg=this.cfg.extend(a)},compute:function(a,b){for(var c=this.cfg,f=q.create(c.hasher,a),g=m.create(),d=m.create([1]),l=g.words,r=d.words,n=c.keySize,c=c.iterations;l.length<n;){var h=f.update(b).finalize(d);f.reset();for(var j=h.words,s=j.length,k=h,p=1;p<c;p++){k=f.finalize(k);f.reset();for(var t=k.words,e=0;e<s;e++)j[e]^=t[e]}g.concat(h);r[0]++}g.sigBytes=4*n;return g}});b.PBKDF2=function(a,b,c){return l.create(c).compute(a,b)};return 0;}());",
            "(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join(\\\"\\\")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"};return 0}());",
            "CryptoJS.lib.Cipher || function(u) { var g = CryptoJS, f = g.lib, k = f.Base, l = f.WordArray, q = f.BufferedBlockAlgorithm, r = g.enc.Base64, v = g.algo.EvpKDF, n = f.Cipher = q.extend({ cfg: k.extend(), createEncryptor: function(a, b) { return this.create(this._ENC_XFORM_MODE, a, b) }, createDecryptor: function(a, b) { return this.create(this._DEC_XFORM_MODE, a, b) }, init: function(a, b, c) { this.cfg = this.cfg.extend(c); this._xformMode = a; this._key = b; this.reset() }, reset: function() { q.reset.call(this); this._doReset() }, process: function(a) { this._append(a); return this._process() }, finalize: function(a) { a && this._append(a); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function(a) { return { encrypt: function(b, c, d) { return (\\\"string\\\" == typeof c ? s : j).encrypt(a, b, c, d) }, decrypt: function(b, c, d) { return (\\\"string\\\" == typeof c ? s : j).decrypt(a, b, c, d) } } } }); f.StreamCipher = n.extend({ _doFinalize: function() { return this._process(!0) }, blockSize: 1 }); var m = g.mode = {}, t = function(a, b, c) { var d = this._iv; d ? this._iv = u : d = this._prevBlock; for (var e = 0; e < c; e++) a[b + e] ^= d[e] }, h = (f.BlockCipherMode = k.extend({ createEncryptor: function(a, b) { return this.Encryptor.create(a, b) }, createDecryptor: function(a, b) { return this.Decryptor.create(a, b) }, init: function(a, b) { this._cipher = a; this._iv = b } })).extend(); h.Encryptor = h.extend({ processBlock: function(a, b) { var c = this._cipher, d = c.blockSize; t.call(this, a, b, d); c.encryptBlock(a, b); this._prevBlock = a.slice(b, b + d) } }); h.Decryptor = h.extend({ processBlock: function(a, b) { var c = this._cipher, d = c.blockSize, e = a.slice(b, b + d); c.decryptBlock(a, b); t.call(this, a, b, d); this._prevBlock = e } }); m = m.CBC = h; h = (g.pad = {}).Pkcs7 = { pad: function(a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, e = [], f = 0; f < c; f += 4) e.push(d); c = l.create(e, c); a.concat(c) }, unpad: function(a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; f.BlockCipher = n.extend({ cfg: n.cfg.extend({ mode: m, padding: h }), reset: function() { n.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a, this, b && b.words) }, _doProcessBlock: function(a, b) { this._mode.processBlock(a, b) }, _doFinalize: function() { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4 }); var p = f.CipherParams = k.extend({ init: function(a) { this.mixIn(a) }, toString: function(a) { return (a || this.formatter).stringify(this) } }), m = (g.format = {}).OpenSSL = { stringify: function(a) { var b = a.ciphertext; a = a.salt; return (a ? l.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r) }, parse: function(a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = l.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return p.create({ ciphertext: a, salt: c }) } }, j = f.SerializableCipher = k.extend({ cfg: k.extend({ format: m }), encrypt: function(a, b, c, d) { d = this.cfg.extend(d); var e = a.createEncryptor(c, d); b = e.finalize(b); e = e.cfg; return p.create({ ciphertext: b, key: c, iv: e.iv, algorithm: a, mode: e.mode, padding: e.padding, blockSize: a.blockSize, formatter: d.format }) }, decrypt: function(a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function(a, b) { return \\\"string\\\" == typeof a ? b.parse(a, this) : a } }), g = (g.kdf = {}).OpenSSL = { execute: function(a, b, c, d) { d || (d = l.random(8)); a = v.create({ keySize: b + c }).compute(a, d); c = l.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return p.create({ key: a, iv: c, salt: d }) } }, s = f.PasswordBasedCipher = j.extend({ cfg: j.cfg.extend({ kdf: g }), encrypt: function(a, b, c, d) { d = this.cfg.extend(d); c = d.kdf.execute(c, a.keySize, a.ivSize); d.iv = c.iv; a = j.encrypt.call(this, a, b, c.key, d); a.mixIn(c); return a }, decrypt: function(a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); c = d.kdf.execute(c, a.keySize, a.ivSize, b.salt); d.iv = c.iv; return j.decrypt.call(this, a, b, c.key, d) } });return 0;}();",
            "(function(){for(var q=CryptoJS,x=q.lib.BlockCipher,r=q.algo,j=[],y=[],z=[],A=[],B=[],C=[],s=[],u=[],v=[],w=[],g=[],k=0;256>k;k++)g[k]=128>k?k<<1:k<<1^283;for(var n=0,l=0,k=0;256>k;k++){var f=l^l<<1^l<<2^l<<3^l<<4,f=f>>>8^f&255^99;j[n]=f;y[f]=n;var t=g[n],D=g[t],E=g[D],b=257*g[f]^16843008*f;z[n]=b<<24|b>>>8;A[n]=b<<16|b>>>16;B[n]=b<<8|b>>>24;C[n]=b;b=16843009*E^65537*D^257*t^16843008*n;s[f]=b<<24|b>>>8;u[f]=b<<16|b>>>16;v[f]=b<<8|b>>>24;w[f]=b;n?(n=t^g[g[g[E^t]]],l^=g[g[l]]):n=l=1}var F=[0,1,2,4,8,16,32,64,128,27,54],r=r.AES=x.extend({_doReset:function(){for(var c=this._key,e=c.words,a=c.sigBytes/4,c=4*((this._nRounds=a+6)+1),b=this._keySchedule=[],h=0;h<c;h++)if(h<a)b[h]=e[h];else{var d=b[h-1];h%a?6<a&&4==h%a&&(d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255]):(d=d<<8|d>>>24,d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255],d^=F[h/a|0]<<24);b[h]=b[h-a]^d}e=this._invKeySchedule=[];for(a=0;a<c;a++)h=c-a,d=a%4?b[h]:b[h-4],e[a]=4>a||4>=h?d:s[j[d>>>24]]^u[j[d>>>16&255]]^v[j[d>>>8&255]]^w[j[d&255]]},encryptBlock:function(c,e){this._doCryptBlock(c,e,this._keySchedule,z,A,B,C,j)},decryptBlock:function(c,e){var a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;this._doCryptBlock(c,e,this._invKeySchedule,s,u,v,w,y);a=c[e+1];c[e+1]=c[e+3];c[e+3]=a},_doCryptBlock:function(c,e,a,b,h,d,j,m){for(var n=this._nRounds,f=c[e]^a[0],g=c[e+1]^a[1],k=c[e+2]^a[2],p=c[e+3]^a[3],l=4,t=1;t<n;t++)var q=b[f>>>24]^h[g>>>16&255]^d[k>>>8&255]^j[p&255]^a[l++],r=b[g>>>24]^h[k>>>16&255]^d[p>>>8&255]^j[f&255]^a[l++],s=b[k>>>24]^h[p>>>16&255]^d[f>>>8&255]^j[g&255]^a[l++],p=b[p>>>24]^h[f>>>16&255]^d[g>>>8&255]^j[k&255]^a[l++],f=q,g=r,k=s;q=(m[f>>>24]<<24|m[g>>>16&255]<<16|m[k>>>8&255]<<8|m[p&255])^a[l++];r=(m[g>>>24]<<24|m[k>>>16&255]<<16|m[p>>>8&255]<<8|m[f&255])^a[l++];s=(m[k>>>24]<<24|m[p>>>16&255]<<16|m[f>>>8&255]<<8|m[g&255])^a[l++];p=(m[p>>>24]<<24|m[f>>>16&255]<<16|m[g>>>8&255]<<8|m[k&255])^a[l++];c[e]=q;c[e+1]=r;c[e+2]=s;c[e+3]=p},keySize:8});q.AES=x._createHelper(r); return 0;}());",
            "(function(E){function h(a,f,g,j,p,h,k){a=a+(f&g|~f&j)+p+k;return(a<<h|a>>>32-h)+f}function k(a,f,g,j,p,h,k){a=a+(f&j|g&~j)+p+k;return(a<<h|a>>>32-h)+f}function l(a,f,g,j,h,k,l){a=a+(f^g^j)+h+l;return(a<<k|a>>>32-k)+f}function n(a,f,g,j,h,k,l){a=a+(g^(f|~j))+h+l;return(a<<k|a>>>32-k)+f}for(var r=CryptoJS,q=r.lib,F=q.WordArray,s=q.Hasher,q=r.algo,a=[],t=0;64>t;t++)a[t]=4294967296*E.abs(E.sin(t+1))|0;q=q.MD5=s.extend({_doReset:function(){this._hash=new F.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(m,f){for(var g=0;16>g;g++){var j=f+g,p=m[j];m[j]=(p<<8|p>>>24)&16711935|(p<<24|p>>>8)&4278255360}var g=this._hash.words,j=m[f+0],p=m[f+1],q=m[f+2],r=m[f+3],s=m[f+4],t=m[f+5],u=m[f+6],v=m[f+7],w=m[f+8],x=m[f+9],y=m[f+10],z=m[f+11],A=m[f+12],B=m[f+13],C=m[f+14],D=m[f+15],b=g[0],c=g[1],d=g[2],e=g[3],b=h(b,c,d,e,j,7,a[0]),e=h(e,b,c,d,p,12,a[1]),d=h(d,e,b,c,q,17,a[2]),c=h(c,d,e,b,r,22,a[3]),b=h(b,c,d,e,s,7,a[4]),e=h(e,b,c,d,t,12,a[5]),d=h(d,e,b,c,u,17,a[6]),c=h(c,d,e,b,v,22,a[7]),b=h(b,c,d,e,w,7,a[8]),e=h(e,b,c,d,x,12,a[9]),d=h(d,e,b,c,y,17,a[10]),c=h(c,d,e,b,z,22,a[11]),b=h(b,c,d,e,A,7,a[12]),e=h(e,b,c,d,B,12,a[13]),d=h(d,e,b,c,C,17,a[14]),c=h(c,d,e,b,D,22,a[15]),b=k(b,c,d,e,p,5,a[16]),e=k(e,b,c,d,u,9,a[17]),d=k(d,e,b,c,z,14,a[18]),c=k(c,d,e,b,j,20,a[19]),b=k(b,c,d,e,t,5,a[20]),e=k(e,b,c,d,y,9,a[21]),d=k(d,e,b,c,D,14,a[22]),c=k(c,d,e,b,s,20,a[23]),b=k(b,c,d,e,x,5,a[24]),e=k(e,b,c,d,C,9,a[25]),d=k(d,e,b,c,r,14,a[26]),c=k(c,d,e,b,w,20,a[27]),b=k(b,c,d,e,B,5,a[28]),e=k(e,b,c,d,q,9,a[29]),d=k(d,e,b,c,v,14,a[30]),c=k(c,d,e,b,A,20,a[31]),b=l(b,c,d,e,t,4,a[32]),e=l(e,b,c,d,w,11,a[33]),d=l(d,e,b,c,z,16,a[34]),c=l(c,d,e,b,C,23,a[35]),b=l(b,c,d,e,p,4,a[36]),e=l(e,b,c,d,s,11,a[37]),d=l(d,e,b,c,v,16,a[38]),c=l(c,d,e,b,y,23,a[39]),b=l(b,c,d,e,B,4,a[40]),e=l(e,b,c,d,j,11,a[41]),d=l(d,e,b,c,r,16,a[42]),c=l(c,d,e,b,u,23,a[43]),b=l(b,c,d,e,x,4,a[44]),e=l(e,b,c,d,A,11,a[45]),d=l(d,e,b,c,D,16,a[46]),c=l(c,d,e,b,q,23,a[47]),b=n(b,c,d,e,j,6,a[48]),e=n(e,b,c,d,v,10,a[49]),d=n(d,e,b,c,C,15,a[50]),c=n(c,d,e,b,t,21,a[51]),b=n(b,c,d,e,A,6,a[52]),e=n(e,b,c,d,r,10,a[53]),d=n(d,e,b,c,y,15,a[54]),c=n(c,d,e,b,p,21,a[55]),b=n(b,c,d,e,w,6,a[56]),e=n(e,b,c,d,D,10,a[57]),d=n(d,e,b,c,u,15,a[58]),c=n(c,d,e,b,B,21,a[59]),b=n(b,c,d,e,s,6,a[60]),e=n(e,b,c,d,z,10,a[61]),d=n(d,e,b,c,q,15,a[62]),c=n(c,d,e,b,x,21,a[63]);g[0]=g[0]+b|0;g[1]=g[1]+c|0;g[2]=g[2]+d|0;g[3]=g[3]+e|0},_doFinalize:function(){var a=this._data,f=a.words,g=8*this._nDataBytes,j=8*a.sigBytes;f[j>>>5]|=128<<24-j%32;var h=E.floor(g/4294967296);f[(j+64>>>9<<4)+15]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;f[(j+64>>>9<<4)+14]=(g<<8|g>>>24)&16711935|(g<<24|g>>>8)&4278255360;a.sigBytes=4*(f.length+1);this._process();a=this._hash;f=a.words;for(g=0;4>g;g++)j=f[g],f[g]=(j<<8|j>>>24)&16711935|(j<<24|j>>>8)&4278255360;return a},clone:function(){var a=s.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=s._createHelper(q);r.HmacMD5=s._createHmacHelper(q)})(Math);",
            "var link ='",
            "$Link",
            "'",
            ";var channelId = link.split('/').pop().split('.').shift(); var current = new Date(); current.setTime(current.getTime() + (2*60*60*1000)); var expires =  Math.round(current.getTime()/1000); var token = CryptoJS.MD5(expires+' thisisasupertokensecurized').toString(CryptoJS.enc.Base64).replace(/=/g, '').replace(/\\\\+/g, '-').replace(/\\\\//g, '_');",
            "'https://cdn.castmax.net/hls/'+channelId+'.m3u8?token='+token+'&expires='+expires;",
            "\")"
          ],
          "Result": "$code"
        },
        {
          "Id": 2,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$result"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 4,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "freeintertv",
      "Name": "www.freeintertv.com Parser",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36::Referer::http://www.freeintertv.com/",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?:data-path=\")(.*?)(?=\")",
          "MatchId": "0",
          "GroupId": "1",
          "Default": "@",
          "Target": "$Res",
          "Result": "$ChannelName"
        },
        {
          "Id": 3,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"'chname::",
            "$ChannelName",
            "::html5::11'\")"
          ],
          "Result": "$params"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$params",
          "Result": "$params"
        },
        {
          "Id": 5,
          "Action": "POST",
          "Link": "http://www.freeintertv.com/myAjax/get_item_m3u8/",
          "Headers": "User-Agent::Safari/537.36::Content-Type::application/x-www-form-urlencoded",
          "Params": "$params",
          "Result": "$Res1"
        },
        {
          "Id": 6,
          "Action": "MATCH",
          "String": "http.*?m3u8",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res1",
          "Result": "$result"
        },
        {
          "Id": 7,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Mozilla/5.0"
          ],
          "Result": "$result"
        },
        {
          "Id": 8,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "pkcast123.me",
      "Name": "pkcast123.me",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");encodeURI(sp[0])\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 7,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 8,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "(?<=source: )\\w+(?=\\(\\))",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_name"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "function ",
            "$function_name",
            ".*?\\}"
          ],
          "Result": "$function_result"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "$function_result",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$function_result"
        },
        {
          "Id": 12,
          "Action": "MATCH",
          "String": "var.*?(?=var playerElement)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 13,
          "Action": "MATCH",
          "String": "(?<=document\\.getElementById\\(\\\\\")([^\"]*)(?=\\\\\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res5"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "(?<=id=",
            "$Res5",
            ">)([^<]*)(?=<)"
          ],
          "Result": "$Res6"
        },
        {
          "Id": 15,
          "Action": "MATCH",
          "String": "$Res6",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$Res",
          "Result": "$Res7"
        },
        {
          "Id": 16,
          "Action": "CONCAT",
          "Targets": [
            "\"",
            "$Res7",
            "\")"
          ],
          "Result": "$Res7"
        },
        {
          "Id": 17,
          "Action": "MATCH",
          "String": "document.getElementById(.*)innerHTML\\)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$function_result",
          "Result": "$Res8"
        },
        {
          "Id": 18,
          "Action": "REPLACE",
          "In": "$function_result",
          "From": "$Res8",
          "To": "$Res7",
          "Result": "$function_result"
        },
        {
          "Id": 19,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res1",
            "$function_result",
            ";",
            "$function_name",
            "()')"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 20,
          "Action": "EVAL",
          "String": "$result_link",
          "Result": "$result_link"
        },
        {
          "Id": 21,
          "Action": "CONCAT",
          "Targets": [
            "$result_link",
            " engineOptions=headers::Referer:https://pkcast123.me/"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 22,
          "Action": "FINAL",
          "Result": "$result_link"
        }
      ]
    },
    {
      "Match": "vipleague.lc",
      "Name": "vipleague.lc",
      "Player": "exo",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 2,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 3,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "'",
          "To": "\"",
          "Result": "$Res"
        },
        {
          "Id": 4,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\"",
          "To": "\\\"",
          "Result": "$Res"
        },
        {
          "Id": 5,
          "Action": "MATCH",
          "String": "<script.*?(https:\\/\\/cdn.tvply.me.*?)(?=\\\\\")",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$Res",
          "Result": "$script_link"
        },
        {
          "Id": 6,
          "Action": "GET",
          "Link": "$script_link",
          "Result": "$script"
        },
        {
          "Id": 7,
          "Action": "MATCH",
          "String": "const e=.*?(?=;)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$script",
          "Result": "$request_script"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$request_script",
          "From": "\"",
          "To": "\\\"",
          "Result": "$request_script"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "(<script>pdett.*?)(<script>.*?)(?:<script.*?src=\\\\\"",
            "$script_link",
            "\\\\\")"
          ],
          "Result": "$match_variables"
        },
        {
          "Id": 9,
          "Action": "MATCH",
          "String": "$match_variables",
          "MatchId": "0",
          "GroupId": "1",
          "Target": "$Res",
          "Result": "$Res1"
        },
        {
          "Id": 10,
          "Action": "MATCH",
          "String": "$match_variables",
          "MatchId": "0",
          "GroupId": "2",
          "Target": "$Res",
          "Result": "$Res2"
        },
        {
          "Id": 11,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "<script>",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$Res1",
          "From": "</script>",
          "To": "",
          "Result": "$Res1"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "<script>",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 14,
          "Action": "REPLACE",
          "In": "$Res2",
          "From": "</script>",
          "To": "",
          "Result": "$Res2"
        },
        {
          "Id": 15,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            ";",
            "$Res2",
            ";",
            "$request_script",
            "; e;\")"
          ],
          "Result": "$iframe_link"
        },
        {
          "Id": 16,
          "Action": "EVAL",
          "String": "$iframe_link",
          "Result": "$iframe_link"
        },
        {
          "Id": 17,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "$Res1",
            ";",
            "$Res2",
            ";",
            "$request_script",
            "; var keys = Object.keys(t), iframParams=[]; for(var i=0; i<keys.length; i++){ iframParams.push(keys[i].toString()+'::'+t[keys[i]]) } iframParams.join('::')\")"
          ],
          "Result": "$iframe_params"
        },
        {
          "Id": 18,
          "Action": "EVAL",
          "String": "$iframe_params",
          "Result": "$iframe_params"
        },
        {
          "Id": 19,
          "Action": "POST",
          "Link": "$iframe_link",
          "Headers": "User-Agent::Safari/537.36::Origin::https://www.vipleague.lc/::Referer::https://www.vipleague.lc/",
          "Params": "$iframe_params",
          "Result": "$Res3"
        },
        {
          "Id": 20,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "\n",
          "To": "",
          "Result": "$Res3"
        },
        {
          "Id": 21,
          "Action": "REPLACE",
          "In": "$Res3",
          "From": "'",
          "To": "\\'",
          "Result": "$Res3"
        },
        {
          "Id": 22,
          "Action": "MATCH",
          "String": "(?<=<script>)(\\s)?.*let.*?eval.*?(?=<\\/script>)",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res3",
          "Result": "$Res4"
        },
        {
          "Id": 23,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "eval",
          "To": "",
          "Result": "$Res4"
        },
        {
          "Id": 24,
          "Action": "CONCAT",
          "Targets": [
            "eval('",
            "$Res4",
            "')"
          ],
          "Result": "$Res4"
        },
        {
          "Id": 25,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 26,
          "Action": "EVAL",
          "String": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 27,
          "Action": "MATCH",
          "String": "playUrl|(?<=file: window\\.atob\\().*?(?=\\))",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res4",
          "Result": "$url_var"
        },
        {
          "Id": 27,
          "Action": "CONCAT",
          "Targets": [
            "$url_var",
            "(\\s)?.*?(?=;)"
          ],
          "Result": "$match_regex"
        },
        {
          "Id": 27,
          "Action": "MATCH",
          "String": "$match_regex",
          "MatchId": "0",
          "GroupId": "0",
          "Target": "$Res4",
          "Result": "$Res4"
        },
        {
          "Id": 28,
          "Action": "REPLACE",
          "In": "$Res4",
          "From": "'",
          "To": "\"",
          "Result": "$Res4"
        },
        {
          "Id": 29,
          "Action": "CONCAT",
          "Targets": [
            "eval('function atob(r,e){var o,t,d,n,f,a,i,h,c=[],C=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";h=(e=void 0!==e&&e)?Utf8.decode(r):r;for(var g=0;g<h.length;g+=4)o=(a=C.indexOf(h.charAt(g))<<18|C.indexOf(h.charAt(g+1))<<12|(n=C.indexOf(h.charAt(g+2)))<<6|(f=C.indexOf(h.charAt(g+3))))>>>16&255,t=a>>>8&255,d=255&a,c[g/4]=String.fromCharCode(o,t,d),64==f&&(c[g/4]=String.fromCharCode(o,t)),64==n&&(c[g/4]=String.fromCharCode(o));return i=c.join(\"\"),e?Utf8.decode(i):i} ",
            "$Res4",
            "; atob(",
            "$url_var",
            ")",
            "')"
          ],
          "Result": "$result_link"
        },
        {
          "Id": 30,
          "Action": "EVAL",
          "String": "$result_link",
          "Result": "$result_link"
        },
        {
          "Id": 31,
          "Action": "CONCAT",
          "Targets": [
            "$result_link",
            " engineOptions=headers::Referer:https://www.tvply.me/::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 32,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "worlwidestream",
      "Name": "e3l0k8lxi9qlljv.worlwidestream.net",
      "Stages": [
        {
          "Id": 1,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[0]\")"
          ],
          "Result": "$str_Link"
        },
        {
          "Id": 2,
          "Action": "CONCAT",
          "Targets": [
            "eval(\"",
            "link=\\\"",
            "$Link",
            "\\\";sp=link.split(\\\"__requestHeader=\\\");sp[1]\")"
          ],
          "Result": "$str_Header"
        },
        {
          "Id": 3,
          "Action": "EVAL",
          "String": "$str_Link",
          "Result": "$Link"
        },
        {
          "Id": 4,
          "Action": "EVAL",
          "String": "$str_Header",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "REPLACE",
          "In": "$Link",
          "From": " ",
          "To": "",
          "Result": "$Link"
        },
        {
          "Id": 6,
          "Action": "REPLACE",
          "In": "$Headers",
          "From": " ",
          "To": "",
          "Result": "$Headers"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "eval\\(function\\(p,a,c,k,e,d\\)(?:.*?)\\{\\}\\)\\)(?=<\\/script)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"",
            "$code",
            "\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 10,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "daddylive",
      "Name": "https://daddylive.co/",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "User-Agent::Safari/537.36::Referer::",
            "$Link"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=<iframe src=\\\").*?(?=\\\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$Link",
          "Target": "$Res",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "eval\\(function\\(p,a,c,k,e,d\\)(?:.*?)\\{\\}\\)\\)(?=<\\/script)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"",
            "$code",
            "\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 10,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    },
    {
      "Match": "sportzonline",
      "Name": "https://v7.sportzonline.to/channels/hd/hd2.php",
      "Stages": [
        {
          "Id": 1,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "User-Agent::Safari/537.36",
          "Result": "$Res"
        },
        {
          "Id": 10,
          "Action": "CONCAT",
          "Targets": [
            "User-Agent::Safari/537.36::Referer::",
            "$Link"
          ],
          "Result": "$Headers"
        },
        {
          "Id": 2,
          "Action": "MATCH",
          "String": "(?<=<iframe src=\\\").*?(?=\\\")",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "$Link",
          "Target": "$Res",
          "Result": "$Link"
        },
        {
          "Id": 5,
          "Action": "GET",
          "Link": "$Link",
          "Headers": "$Headers",
          "Result": "$Res"
        },
        {
          "Id": 9,
          "Action": "REPLACE",
          "In": "$Res",
          "From": "\n",
          "To": "",
          "Result": "$Res"
        },
        {
          "Id": 11,
          "Action": "MATCH",
          "String": "eval\\(function\\(p,a,c,k,e,d\\)(?:.*?)\\{\\}\\)\\)(?=<\\/script)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "'@'",
          "Target": "$Res",
          "Result": "$code"
        },
        {
          "Id": 12,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\\",
          "To": "\\\\",
          "Result": "$code"
        },
        {
          "Id": 13,
          "Action": "REPLACE",
          "In": "$code",
          "From": "\"",
          "To": "\\\"",
          "Result": "$code"
        },
        {
          "Id": 14,
          "Action": "CONCAT",
          "Targets": [
            "var code;var env = {eval: function (c) {code = c;}};eval(\"with(env) {\" + \"",
            "$code",
            "\" + \"}\"); code;"
          ],
          "Result": "$code"
        },
        {
          "Id": 15,
          "Action": "EVAL",
          "String": "$code",
          "Result": "$out_code"
        },
        {
          "Id": 16,
          "Action": "REPLACE",
          "In": "$out_code",
          "From": "'",
          "To": "\"",
          "Result": "$out_code"
        },
        {
          "Id": 8,
          "Action": "MATCH",
          "String": "http(?:[^\"]*)m3u8(?:[^\"]*)",
          "MatchId": "0",
          "GroupId": "0",
          "Default": "@",
          "Target": "$out_code",
          "Result": "$result"
        },
        {
          "Id": 9,
          "Action": "CONCAT",
          "Targets": [
            "$result",
            " engineOptions=headers::Referer:",
            "$Link",
            "::user_agent::Safari/537.36"
          ],
          "Result": "$result"
        },
        {
          "Id": 10,
          "Action": "FINAL",
          "Result": "$result"
        }
      ]
    }
  ]
}
